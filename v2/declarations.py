import proto

class LanguageStringData(proto.Message):
    id = proto.Field(proto.INT64, number=1)

class KvSortUintData(proto.Message):
    key = proto.RepeatedField(proto.UINT32, number=1)
    value = proto.RepeatedField(proto.UINT32, number=2)

class o_PointData(proto.Message):
    o_x = proto.Field(proto.INT32, number=1)
    o_y = proto.Field(proto.INT32, number=2)

class AccumulateRechargeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sum = proto.Field(proto.UINT32, number=2)
    rewardItem = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    actionBuy = proto.RepeatedField(proto.INT32, number=4)
    actionInteract = proto.RepeatedField(proto.INT32, number=5)
    desc = proto.Field(proto.STRING, number=6)

class AchievementDetailByTagData(proto.Message):
    tag = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class AchievementDetailData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    nextId = proto.Field(proto.UINT32, number=3)
    tag = proto.Field(proto.UINT32, number=4)
    name = proto.Field(LanguageStringData, number=5)
    des = proto.Field(LanguageStringData, number=6)
    conditionNum = proto.Field(proto.UINT32, number=7)
    icon = proto.Field(proto.STRING, number=8)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=9)
    jumpId = proto.Field(proto.STRING, number=10)

class AchievementRewardByTagIdData(proto.Message):
    tagId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class AchievementRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    tagId = proto.Field(proto.UINT32, number=2)
    tagLv = proto.Field(proto.UINT32, number=3)
    lvExp = proto.Field(proto.UINT32, number=4)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=5)

class AchievementTagData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    tagName = proto.Field(LanguageStringData, number=2)
    icon = proto.Field(proto.STRING, number=3)
    pointItem = proto.Field(proto.UINT32, number=4)

class ActionNpcData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    npc = proto.Field(proto.UINT32, number=3)
    name = proto.Field(proto.STRING, number=4)
    ifloop = proto.Field(proto.BOOL, number=5)
    path = proto.Field(proto.STRING, number=6)
    timelineId = proto.Field(proto.UINT32, number=7)
    dialog = proto.MapField(proto.UINT32, proto.UINT32, number=8)

class ActionObjectData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    things = proto.Field(proto.STRING, number=3)
    name = proto.Field(proto.STRING, number=4)
    ifloop = proto.Field(proto.BOOL, number=5)

class ActionTimelineData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    npc = proto.Field(proto.UINT32, number=3)
    name = proto.Field(proto.STRING, number=4)
    prefab = proto.Field(proto.STRING, number=5)
    idleId = proto.Field(proto.UINT32, number=6)
    timelineId = proto.Field(proto.UINT32, number=7)
    dialog = proto.RepeatedField(proto.UINT32, number=8)

class ActivityBingoByTaskGroupData(proto.Message):
    taskGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivityBingoData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    taskGroup = proto.Field(proto.UINT32, number=3)
    bingoCost = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    bingoCostRecycle = proto.Field(proto.UINT32, number=5)
    bingoRes = proto.Field(proto.STRING, number=6)
    bingoReward = proto.Field(proto.UINT32, number=7)

class ActivityBingoRewardByBingoRewardData(proto.Message):
    bingoReward = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivityBingoRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    bingoReward = proto.Field(proto.UINT32, number=2)
    itemId = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    rewardPos = proto.Field(proto.STRING, number=4)
    rewardCondition = proto.Field(proto.STRING, number=5)

class ActivityBingoTaskByBingoTaskIdData(proto.Message):
    bingoTaskId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivityBingoTaskData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    bingoTaskId = proto.Field(proto.UINT32, number=2)
    dayNum = proto.Field(proto.UINT32, number=3)
    taskGroup = proto.Field(proto.UINT32, number=4)

class ActivityCarLevelData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    upgradeRequie = proto.MapField(proto.UINT32, proto.UINT32, number=2)
    dzTalent = proto.RepeatedField(proto.UINT32, number=3)
    coffeeTalent = proto.RepeatedField(proto.UINT32, number=4)

class ActivityCarTalentData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    unitType = proto.Field(proto.UINT32, number=2)
    ememyProperty = proto.RepeatedField(proto.UINT32, number=3)
    minigameItem = proto.Field(proto.INT32, number=4)
    retreatChance = proto.Field(proto.INT32, number=5)
    retreatBagnum = proto.Field(proto.INT32, number=6)
    retreatHp = proto.Field(proto.INT32, number=7)
    retreatState = proto.Field(proto.INT32, number=8)
    goodsNumber = proto.Field(proto.INT32, number=9)
    coffeeOffer = proto.MapField(proto.UINT32, proto.INT32, number=10)
    talentName = proto.Field(LanguageStringData, number=11)
    talentDes = proto.Field(LanguageStringData, number=12)
    talentIcon = proto.Field(proto.STRING, number=13)

class ActivityConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    unlockId = proto.Field(proto.UINT32, number=3)
    activityType = proto.Field(proto.UINT32, number=4)
    activityEntrance = proto.RepeatedField(proto.UINT32, number=5)
    priority = proto.Field(proto.UINT32, number=6)
    prologue = proto.Field(proto.UINT32, number=7)
    o_OACJBIFFBPB = proto.Field(proto.UINT32, number=8)
    o_GJMKHLJJEKD = proto.Field(proto.STRING, number=9)
    o_DBIIILHFKDF = proto.Field(proto.STRING, number=10)
    o_FIPKOKJODBO = proto.Field(proto.UINT32, number=11)
    o_HECAHBLCPEB = proto.Field(proto.UINT32, number=12)

class ActivityDarkzoneData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    unlock = proto.Field(proto.UINT32, number=2)
    gameplayId = proto.Field(proto.UINT32, number=3)
    name = proto.Field(LanguageStringData, number=4)

class ActivityEntranceData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    moduleId = proto.Field(proto.UINT32, number=2)
    planId = proto.Field(proto.UINT32, number=3)
    name = proto.Field(LanguageStringData, number=4)
    activityDesc = proto.Field(LanguageStringData, number=5)
    bannerResource = proto.Field(proto.STRING, number=6)
    bannerTitle = proto.Field(LanguageStringData, number=7)
    bannerInformation = proto.Field(LanguageStringData, number=8)
    priority = proto.Field(proto.UINT32, number=9)

class ActivityEscortExchangeByGoodsTypeData(proto.Message):
    goodsType = proto.Field(proto.UINT32, number=1)
    itemId = proto.RepeatedField(proto.UINT32, number=2)

class ActivityEscortExchangeData(proto.Message):
    itemId = proto.Field(proto.UINT32, number=1)
    itemName = proto.Field(LanguageStringData, number=2)
    rewardBagnum = proto.Field(proto.UINT32, number=3)
    rewardPoint = proto.Field(proto.UINT32, number=4)
    goodsName = proto.Field(LanguageStringData, number=5)
    goodsDes = proto.Field(LanguageStringData, number=6)
    goodsLevel = proto.Field(proto.UINT32, number=7)
    goodsPic = proto.Field(proto.STRING, number=8)
    goodsType = proto.Field(proto.UINT32, number=9)

class ActivityGachaConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    activityName = proto.Field(LanguageStringData, number=2)
    gachaItem = proto.Field(proto.UINT32, number=3)
    gachaCost = proto.Field(proto.UINT32, number=4)
    unusedItemId = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    gachaDesc = proto.Field(LanguageStringData, number=6)
    unlockId = proto.Field(proto.UINT32, number=7)
    planId = proto.Field(proto.UINT32, number=8)
    gachaBg = proto.Field(proto.STRING, number=9)
    gachaHelp = proto.Field(LanguageStringData, number=10)

class ActivityGachaGroupByGroupData(proto.Message):
    group = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivityGachaGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    group = proto.Field(proto.UINT32, number=3)
    gachaGroup = proto.Field(proto.UINT32, number=4)
    continuity = proto.RepeatedField(proto.UINT32, number=5)
    gachaMainImg = proto.Field(proto.STRING, number=6)

class ActivityGachaRewardByGachaGroupData(proto.Message):
    gachaGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivityGachaRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    gachaGroup = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    stock = proto.Field(proto.UINT32, number=4)
    rewardItem = proto.Field(KvSortUintData, number=5)

class ActivityHintByTextEnumsData(proto.Message):
    textEnums = proto.Field(proto.INT64, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivityHintData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    activityId = proto.Field(proto.UINT32, number=2)
    textType = proto.Field(proto.UINT32, number=3)
    textTypeId = proto.RepeatedField(proto.UINT32, number=4)
    textEnums = proto.Field(proto.INT64, number=5)
    text = proto.Field(LanguageStringData, number=6)

class ActivityLimitEntranceData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    rank = proto.Field(proto.UINT32, number=3)
    o_KAIBDMENAAJ = proto.Field(proto.UINT32, number=4)
    background = proto.Field(proto.STRING, number=5)
    unlock = proto.Field(proto.UINT32, number=6)
    o_MMIAINBPILI = proto.Field(proto.BOOL, number=7)

class ActivityListData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    openTime = proto.Field(proto.INT64, number=4)
    closeTime = proto.Field(proto.INT64, number=5)
    icon = proto.Field(proto.STRING, number=6)
    desc = proto.Field(LanguageStringData, number=7)
    help = proto.Field(LanguageStringData, number=8)
    bannerResource = proto.Field(proto.STRING, number=9)
    rewardShow = proto.Field(proto.STRING, number=10)
    otherParam = proto.Field(proto.STRING, number=11)
    sort = proto.Field(proto.UINT32, number=12)
    permanent = proto.Field(proto.UINT32, number=13)
    unLockID = proto.Field(proto.UINT32, number=14)
    args = proto.RepeatedField(proto.UINT32, number=15)
    otherParam2 = proto.Field(proto.STRING, number=16)

class ActivityMainTaskByGroupData(proto.Message):
    group = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivityMainTaskData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    tag = proto.Field(proto.UINT32, number=3)
    tagName = proto.Field(LanguageStringData, number=4)
    name = proto.Field(LanguageStringData, number=5)
    des = proto.Field(LanguageStringData, number=6)
    conditionNum = proto.Field(proto.UINT32, number=7)
    counterType = proto.Field(proto.UINT32, number=8)
    resetType = proto.Field(proto.UINT32, number=9)
    rewardList = proto.Field(KvSortUintData, number=10)
    link = proto.Field(proto.STRING, number=11)

class ActivityModuleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    stageType = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    activitySubmodule = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    keepSubmodule = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    activityRole = proto.Field(LanguageStringData, number=6)
    activityMainBg = proto.Field(LanguageStringData, number=7)
    activityInformation = proto.Field(LanguageStringData, number=8)
    entranceType = proto.MapField(proto.UINT32, proto.UINT32, number=9)

class ActivityPointPlanData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    pointPlan = proto.Field(proto.UINT32, number=2)
    hpLevel = proto.RepeatedField(proto.UINT32, number=3)
    point = proto.Field(proto.UINT32, number=4)

class ActivityResourceListData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    code = proto.Field(proto.STRING, number=2)
    o_FBHOMKDECCC = proto.Field(proto.UINT32, number=3)
    o_KGKCCIEKNMP = proto.Field(proto.STRING, number=4)
    o_CJEDAIDCIML = proto.Field(proto.STRING, number=5)
    o_NKKBLPHKPBH = proto.Field(proto.STRING, number=6)
    o_ICHLHBNOJLB = proto.Field(proto.STRING, number=7)
    o_PGHMGCEANGL = proto.Field(proto.STRING, number=8)
    o_HOMDKHEPIMF = proto.Field(proto.STRING, number=9)
    o_BEOGGOAOKIM = proto.Field(proto.STRING, number=10)
    o_NPELGCGNHHM = proto.Field(proto.STRING, number=11)
    o_DDDLAKPJIFF = proto.Field(proto.STRING, number=12)
    o_JPGHCODOCDB = proto.Field(proto.STRING, number=13)
    o_CODMBBFKGJK = proto.Field(proto.STRING, number=14)
    o_BAODNOGDECG = proto.Field(proto.STRING, number=15)
    o_MBMDOPPHGDP = proto.Field(proto.STRING, number=16)
    o_HGKDMHFAOME = proto.Field(proto.STRING, number=17)
    o_CMDMKEAMFDM = proto.Field(proto.STRING, number=18)
    o_CNPAMCNEEPP = proto.Field(proto.STRING, number=19)
    o_KDBNOBPFNML = proto.Field(proto.STRING, number=20)
    o_MHOPOBBEHAI = proto.Field(proto.STRING, number=21)
    o_AMGAHDNJDLC = proto.Field(proto.STRING, number=22)

class ActivitySimArticleData(proto.Message):
    articleId = proto.Field(proto.UINT32, number=1)
    articleNameShow = proto.Field(LanguageStringData, number=2)
    articleDescShow = proto.Field(LanguageStringData, number=3)
    articleButton = proto.Field(proto.STRING, number=4)
    articleName = proto.Field(proto.STRING, number=5)
    articleType = proto.Field(proto.UINT32, number=6)
    openUi = proto.Field(proto.UINT32, number=7)
    multiAvater = proto.Field(proto.UINT32, number=8)
    mirrorItem = proto.Field(proto.UINT32, number=9)

class ActivitySimAvatarActByAvatarIdData(proto.Message):
    avatarId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivitySimAvatarActData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    avatarId = proto.Field(proto.UINT32, number=2)
    actType = proto.Field(proto.UINT32, number=3)
    face = proto.Field(proto.STRING, number=4)
    actOrder = proto.Field(proto.UINT32, number=5)
    actPath = proto.Field(proto.STRING, number=6)
    conditionId = proto.RepeatedField(proto.UINT32, number=7)
    loop = proto.Field(proto.BOOL, number=8)

class ActivitySimAvatarByAvatarGroupData(proto.Message):
    avatarGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivitySimAvatarConditionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sceneName = proto.Field(proto.STRING, number=2)
    sceneArea = proto.Field(proto.UINT32, number=3)
    sceneLevel = proto.Field(proto.UINT32, number=4)
    pointId = proto.Field(proto.UINT32, number=5)
    articleId = proto.Field(proto.UINT32, number=6)
    avatarId = proto.Field(proto.UINT32, number=7)

class ActivitySimAvatarData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    avatarGroup = proto.Field(proto.UINT32, number=2)
    avatarId = proto.Field(proto.UINT32, number=3)
    avatarType = proto.Field(proto.UINT32, number=4)
    avaterPath = proto.Field(proto.STRING, number=5)
    pathGroup = proto.Field(proto.UINT32, number=6)

class ActivitySimAvatarPathByPathGroupData(proto.Message):
    pathGroup = proto.Field(proto.UINT32, number=1)
    pathId = proto.RepeatedField(proto.UINT32, number=2)

class ActivitySimAvatarPathData(proto.Message):
    pathId = proto.Field(proto.UINT32, number=1)
    pathGroup = proto.Field(proto.UINT32, number=2)
    sceneId = proto.Field(proto.STRING, number=3)
    pathType = proto.Field(proto.UINT32, number=4)
    pointTime = proto.Field(proto.UINT32, number=5)
    point1 = proto.MapField(proto.UINT32, proto.DOUBLE, number=6)
    point2 = proto.MapField(proto.UINT32, proto.DOUBLE, number=7)
    point3 = proto.MapField(proto.UINT32, proto.DOUBLE, number=8)
    point4 = proto.MapField(proto.UINT32, proto.DOUBLE, number=9)
    point5 = proto.MapField(proto.UINT32, proto.DOUBLE, number=10)
    point6 = proto.MapField(proto.UINT32, proto.DOUBLE, number=11)
    point7 = proto.MapField(proto.UINT32, proto.DOUBLE, number=12)
    point8 = proto.MapField(proto.UINT32, proto.DOUBLE, number=13)
    point9 = proto.MapField(proto.UINT32, proto.DOUBLE, number=14)
    point10 = proto.MapField(proto.UINT32, proto.DOUBLE, number=15)

class ActivitySimSceneByPointGroupData(proto.Message):
    pointGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivitySimSceneData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sceneName = proto.Field(proto.STRING, number=2)
    pointGroup = proto.Field(proto.UINT32, number=3)
    sceneArea = proto.Field(proto.UINT32, number=4)
    sceneLevel = proto.Field(proto.UINT32, number=5)
    pointX = proto.Field(proto.DOUBLE, number=6)
    pointY = proto.Field(proto.DOUBLE, number=7)
    pointZ = proto.Field(proto.DOUBLE, number=8)
    articleId = proto.Field(proto.UINT32, number=9)

class ActivitySpecialHintByGroupData(proto.Message):
    group = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivitySpecialHintData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    chars = proto.Field(proto.STRING, number=3)
    color = proto.Field(proto.STRING, number=4)

class ActivitySubmoduleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)

class ActivitySweepRewardBySweepPlanData(proto.Message):
    sweepPlan = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivitySweepRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sweepPlan = proto.Field(proto.UINT32, number=2)
    sweepLevel = proto.Field(proto.UINT32, number=3)
    point = proto.RepeatedField(proto.UINT32, number=4)
    sweepReward = proto.Field(KvSortUintData, number=5)
    evaluateType = proto.Field(proto.UINT32, number=6)
    evaluateLevel = proto.Field(LanguageStringData, number=7)
    evaluateIcon = proto.Field(proto.STRING, number=8)

class ActivityTaskByTaskGroupData(proto.Message):
    taskGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ActivityTaskData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    taskGroup = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    des = proto.Field(LanguageStringData, number=4)
    sequence = proto.Field(proto.UINT32, number=5)
    actionParam = proto.Field(proto.UINT32, number=6)
    unlock = proto.Field(proto.UINT32, number=7)
    conditionClass = proto.Field(proto.UINT32, number=8)
    conditionNum = proto.Field(proto.UINT32, number=9)
    conditionArg0 = proto.Field(proto.INT32, number=10)
    conditionArg1 = proto.Field(proto.INT32, number=11)
    conditionArg2 = proto.Field(proto.INT32, number=12)
    conditionArg3 = proto.Field(proto.INT32, number=13)
    rewardList = proto.RepeatedField(proto.STRING, number=14)
    link = proto.Field(proto.STRING, number=15)

class ActivityWarmUpData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    timer = proto.Field(proto.UINT32, number=2)
    mailTime = proto.Field(proto.UINT32, number=3)
    pointIcon = proto.Field(proto.STRING, number=4)
    warmUpHelp = proto.Field(LanguageStringData, number=5)

class AdjutantConversationData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    des = proto.Field(LanguageStringData, number=3)
    action1 = proto.Field(proto.STRING, number=4)
    action2 = proto.Field(proto.STRING, number=5)
    action3 = proto.Field(proto.STRING, number=6)
    loopTime = proto.Field(proto.UINT32, number=7)
    voice = proto.Field(proto.UINT32, number=8)
    weight = proto.Field(proto.UINT32, number=9)
    effect = proto.Field(proto.STRING, number=10)
    unlock = proto.Field(proto.INT32, number=11)
    args = proto.Field(proto.STRING, number=12)
    voiceTime = proto.Field(proto.UINT32, number=13)

class AdjutantData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    index = proto.Field(proto.UINT32, number=3)
    type = proto.Field(proto.INT32, number=4)
    detailId = proto.Field(proto.UINT32, number=5)
    unlock = proto.Field(proto.INT32, number=6)
    args = proto.RepeatedField(proto.UINT32, number=7)
    lockDes = proto.Field(proto.STRING, number=8)
    idle = proto.RepeatedField(proto.STRING, number=9)
    standby = proto.RepeatedField(proto.STRING, number=10)
    move = proto.RepeatedField(proto.STRING, number=11)
    dialogueList = proto.RepeatedField(proto.UINT32, number=12)
    dialogueHello = proto.RepeatedField(proto.UINT32, number=13)
    idleDropback = proto.RepeatedField(proto.STRING, number=14)
    standbyDropback = proto.RepeatedField(proto.STRING, number=15)
    positionDropback = proto.RepeatedField(proto.STRING, number=16)
    rotationDropback = proto.RepeatedField(proto.STRING, number=17)
    positionAdjutant = proto.Field(proto.STRING, number=18)
    adjutantDropbackSwitch = proto.Field(proto.UINT32, number=19)

class AdvancedTrainingData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    stageId = proto.Field(proto.UINT32, number=2)
    unlockRaidReward = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    stageImage = proto.Field(proto.STRING, number=4)

class AffectionGiftData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    rank = proto.Field(proto.INT32, number=3)
    icon = proto.Field(proto.STRING, number=4)
    introduction = proto.Field(LanguageStringData, number=5)
    likeCharacter = proto.Field(proto.STRING, number=6)
    dislikeCharacter = proto.Field(proto.STRING, number=7)
    affectionValue = proto.Field(proto.STRING, number=8)
    effectPreview = proto.Field(LanguageStringData, number=9)

class AffectionRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    gunId = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    introduction = proto.Field(LanguageStringData, number=4)
    icon = proto.Field(proto.STRING, number=5)
    dimension = proto.Field(proto.INT32, number=6)
    request = proto.Field(proto.UINT32, number=7)
    prizeMailId = proto.Field(proto.UINT32, number=8)

class AffixGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    affixGroup = proto.Field(proto.UINT32, number=2)
    propertyType = proto.Field(proto.INT32, number=3)
    valueType = proto.Field(proto.UINT32, number=4)
    propertyMinValue = proto.Field(proto.INT32, number=5)
    propertyMaxValue = proto.Field(proto.INT32, number=6)

class AiChatContentData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    content = proto.Field(proto.STRING, number=2)

class AiChatData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    character = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    arg = proto.Field(proto.UINT32, number=4)
    contentGroup = proto.Field(proto.UINT32, number=5)

class AiChatPushGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    aiChatStart = proto.Field(proto.UINT32, number=3)
    playerChat = proto.RepeatedField(proto.INT32, number=4)
    aiChatEnd = proto.RepeatedField(proto.INT32, number=5)

class AiChatSelfThemeByCharacterData(proto.Message):
    character = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class AiChatSelfThemeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    character = proto.Field(proto.UINT32, number=2)
    selfTheme = proto.Field(proto.UINT32, number=3)
    reply = proto.RepeatedField(proto.INT32, number=4)

class AiConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    aiId = proto.Field(proto.UINT32, number=2)
    preiodId = proto.Field(proto.UINT32, number=3)
    condition = proto.Field(proto.STRING, number=4)
    defValue = proto.Field(proto.UINT32, number=5)
    moveTactic = proto.Field(proto.INT32, number=6)
    maxDis = proto.Field(proto.STRING, number=7)
    minDis = proto.Field(proto.STRING, number=8)
    skill = proto.RepeatedField(proto.UINT32, number=9)
    skillCal = proto.Field(proto.STRING, number=10)
    attackParam = proto.Field(proto.INT32, number=11)
    defenceParam = proto.Field(proto.INT32, number=12)
    moveParam = proto.Field(proto.INT32, number=13)
    timelineId = proto.Field(proto.UINT32, number=14)
    actionParam = proto.Field(proto.INT32, number=15)
    groundParam = proto.Field(proto.INT32, number=16)
    farMoveWeight = proto.Field(proto.INT32, number=17)
    farLimit = proto.Field(proto.INT32, number=18)
    enableSkilldamage = proto.Field(proto.BOOL, number=19)
    skillPriority = proto.RepeatedField(proto.UINT32, number=20)
    farmoveTactic = proto.Field(proto.UINT32, number=21)
    defValueEnemy = proto.Field(proto.UINT32, number=22)

class AiData(proto.Message):
    skillId = proto.Field(proto.UINT32, number=1)
    skillTag = proto.Field(proto.UINT32, number=2)
    skillAoeTag = proto.Field(proto.UINT32, number=3)

class AiInfoData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    headIcon = proto.Field(proto.STRING, number=3)
    gunType = proto.Field(proto.STRING, number=4)
    message = proto.Field(proto.STRING, number=5)
    title = proto.Field(proto.UINT32, number=6)
    medal = proto.Field(proto.UINT32, number=7)

class AiTimelineData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    size = proto.Field(proto.UINT32, number=2)
    turn = proto.Field(proto.STRING, number=3)

class AmoActivityData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    des = proto.Field(proto.STRING, number=2)
    conditionClass = proto.Field(proto.UINT32, number=3)
    conditionNum = proto.Field(proto.UINT32, number=4)
    counterType = proto.Field(proto.UINT32, number=5)
    resetType = proto.Field(proto.UINT32, number=6)
    link = proto.Field(proto.STRING, number=7)

class AmoActivityMainData(proto.Message):
    mappingId = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    shortDescription = proto.Field(proto.STRING, number=3)
    longDescription = proto.Field(proto.STRING, number=4)
    rewardShow = proto.Field(proto.STRING, number=5)
    mainBg = proto.Field(proto.STRING, number=6)
    subclassTheme = proto.RepeatedField(proto.UINT32, number=7)

class AmoActivitySubData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    nameGun = proto.Field(proto.STRING, number=3)
    themeIcon = proto.Field(proto.STRING, number=4)
    themeBg = proto.Field(proto.UINT32, number=5)
    themeShortDescription = proto.Field(proto.STRING, number=6)
    themeLongDescription = proto.Field(proto.STRING, number=7)
    themeQuests = proto.RepeatedField(proto.UINT32, number=8)
    replyName = proto.Field(proto.STRING, number=9)
    themeReply = proto.Field(proto.STRING, number=10)
    replyBg = proto.Field(proto.STRING, number=11)
    reward = proto.Field(proto.STRING, number=12)
    unlockTime = proto.Field(proto.STRING, number=13)

class AntiindulgedData(proto.Message):
    age = proto.Field(proto.UINT32, number=1)
    singleLimit = proto.Field(proto.DOUBLE, number=2)
    monthlyLimit = proto.Field(proto.DOUBLE, number=3)
    beginTime = proto.Field(proto.STRING, number=4)
    endTime = proto.Field(proto.STRING, number=5)
    dailyTotalTime = proto.Field(proto.UINT32, number=6)
    holidayTotalTime = proto.Field(proto.UINT32, number=7)

class AppointmentData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    npcid = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    taskTitle = proto.Field(proto.STRING, number=4)
    taskDes = proto.Field(LanguageStringData, number=5)
    taskItem = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    itemDes = proto.Field(LanguageStringData, number=7)
    taskTimeline = proto.Field(proto.UINT32, number=8)
    giftTimeline = proto.Field(proto.UINT32, number=9)
    sectionId = proto.Field(proto.UINT32, number=10)
    taskGift = proto.Field(proto.UINT32, number=11)

class AppointmentSectionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    nextsection = proto.Field(proto.UINT32, number=2)
    startTimeline = proto.Field(proto.UINT32, number=3)
    endTimeline = proto.Field(proto.UINT32, number=4)

class AttackLineData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    typeId = proto.Field(proto.STRING, number=2)

class AudioBgmData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    interfaceName = proto.Field(proto.STRING, number=2)
    audioName = proto.RepeatedField(proto.UINT32, number=3)
    priority = proto.Field(proto.UINT32, number=4)
    selector = proto.Field(proto.STRING, number=5)
    track = proto.Field(proto.STRING, number=6)

class AudioData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    audioType = proto.Field(proto.UINT32, number=2)
    audioName = proto.Field(proto.STRING, number=3)
    o_LIBDBHJDOCB = proto.Field(proto.INT32, number=4)

class AudioFoleyData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    selector = proto.Field(proto.STRING, number=2)
    track = proto.Field(proto.STRING, number=3)

class AudioGroundTypeData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    selector = proto.Field(proto.STRING, number=2)
    track = proto.Field(proto.STRING, number=3)

class AudioQuoteClothesData(proto.Message):
    Id = proto.Field(proto.UINT32, number=1)
    typeCode = proto.Field(proto.UINT32, number=2)
    model = proto.Field(proto.STRING, number=3)
    clothId = proto.Field(proto.UINT32, number=4)
    shoesId = proto.Field(proto.UINT32, number=5)
    audioVoice = proto.Field(proto.UINT32, number=6)
    cuesheetUsed = proto.RepeatedField(proto.STRING, number=7)

class AudioQuoteCommonData(proto.Message):
    Id = proto.Field(proto.UINT32, number=1)
    commonField = proto.Field(proto.STRING, number=2)
    cuesheetUsed = proto.RepeatedField(proto.STRING, number=3)

class AudioQuoteConfigData(proto.Message):
    totalFootstepId = proto.RepeatedField(proto.INT32, number=1)
    totalClothId = proto.RepeatedField(proto.INT32, number=2)
    climbFootstepId = proto.RepeatedField(proto.INT32, number=3)
    selectSound = proto.Field(proto.INT32, number=4)
    cancelSound = proto.Field(proto.INT32, number=5)
    moveSound = proto.Field(proto.INT32, number=6)
    attackTargetSound = proto.Field(proto.INT32, number=7)
    clickSound = proto.Field(proto.INT32, number=8)
    battleCommon = proto.RepeatedField(proto.STRING, number=9)
    darkzoneCommon = proto.RepeatedField(proto.STRING, number=10)
    selectSoundNoEnemy = proto.Field(proto.INT32, number=11)
    hpNearDeath = proto.Field(proto.INT32, number=12)
    o_JODAKOBACNB = proto.Field(proto.INT32, number=13)
    o_FMEFGGIGAFF = proto.Field(proto.INT32, number=14)
    o_AAOCCDBGDJJ = proto.Field(proto.INT32, number=15)

class AudioQuoteEnemyData(proto.Message):
    Id = proto.Field(proto.UINT32, number=1)
    typeCode = proto.Field(proto.UINT32, number=2)
    model = proto.Field(proto.STRING, number=3)
    audioVoice = proto.Field(proto.UINT32, number=4)
    cuesheetUsed = proto.RepeatedField(proto.STRING, number=5)

class AudioQuoteSpineData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    spine = proto.Field(proto.STRING, number=2)
    eventId = proto.MapField(proto.STRING, proto.UINT32, number=3)

class AudioVoiceConfigData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    assignId = proto.Field(proto.STRING, number=2)
    charassignId = proto.Field(proto.STRING, number=3)
    startId = proto.Field(proto.STRING, number=4)
    selectId = proto.Field(proto.STRING, number=5)
    autoselectId = proto.Field(proto.STRING, number=6)
    cancelId = proto.Field(proto.STRING, number=7)
    moveId = proto.Field(proto.STRING, number=8)
    hitendId = proto.Field(proto.STRING, number=9)
    hitId = proto.Field(proto.STRING, number=10)
    killId = proto.Field(proto.STRING, number=11)
    masterkillId = proto.Field(proto.STRING, number=12)
    attackId = proto.Field(proto.STRING, number=13)
    skill1Id = proto.Field(proto.STRING, number=14)
    skill2Id = proto.Field(proto.STRING, number=15)
    winId = proto.Field(proto.STRING, number=16)
    failId = proto.Field(proto.STRING, number=17)
    deathId = proto.Field(proto.STRING, number=18)
    hittedLowId = proto.Field(proto.STRING, number=19)
    hittedHighSPId = proto.Field(proto.STRING, number=20)
    hittedHighSSPId = proto.Field(proto.STRING, number=21)
    hittedLowSPId = proto.Field(proto.STRING, number=22)
    hittedLowSSPId = proto.Field(proto.STRING, number=23)
    selectFinId = proto.Field(proto.STRING, number=24)
    sysBreakId = proto.RepeatedField(proto.UINT32, number=25)

class AudioWeaponData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    selector = proto.Field(proto.STRING, number=2)
    track = proto.Field(proto.STRING, number=3)

class AudioWeaponPartData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    selector = proto.Field(proto.STRING, number=2)
    track = proto.Field(proto.STRING, number=3)

class AudioWeaponTypeData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    selector = proto.Field(proto.STRING, number=2)
    track = proto.Field(proto.STRING, number=3)

class AutocameraData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    automovePrefab = proto.Field(proto.STRING, number=2)
    automoveclimbPrefab = proto.Field(proto.STRING, number=3)
    automoveclimbdownPrefab = proto.Field(proto.STRING, number=4)
    automovelPrefab = proto.Field(proto.STRING, number=5)
    automoverPrefab = proto.Field(proto.STRING, number=6)
    automovewskillPrefab = proto.Field(proto.STRING, number=7)
    autoovercoverPrefab = proto.Field(proto.STRING, number=8)
    autorunstopPrefab = proto.Field(proto.STRING, number=9)

class AvgByCollectIdData(proto.Message):
    collectId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class AvgContentData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    senContent = proto.Field(LanguageStringData, number=2)

class AvgData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    collectId = proto.Field(proto.UINT32, number=3)
    sort = proto.Field(proto.UINT32, number=4)
    name = proto.Field(LanguageStringData, number=5)
    number = proto.Field(proto.STRING, number=6)
    condition = proto.Field(proto.UINT32, number=7)
    jumpType = proto.Field(proto.UINT32, number=8)
    jumpDes = proto.Field(LanguageStringData, number=9)
    text = proto.Field(proto.STRING, number=10)
    rewardType = proto.Field(proto.STRING, number=11)
    rewardNumber = proto.Field(proto.STRING, number=12)
    playBgm = proto.Field(proto.UINT32, number=13)

class AvgPlotByServerIdData(proto.Message):
    serverId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class AvgPlotData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    plotId = proto.Field(proto.STRING, number=2)
    plotIdCn = proto.Field(proto.STRING, number=3)
    name = proto.Field(LanguageStringData, number=4)
    type = proto.Field(proto.UINT32, number=5)
    stageId = proto.Field(proto.UINT32, number=6)
    serverId = proto.Field(proto.UINT32, number=7)

class BackBoxData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    title = proto.Field(proto.STRING, number=2)
    explain = proto.Field(proto.STRING, number=3)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    rewardSort = proto.Field(KvSortUintData, number=5)

class BackLoginData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    checkinNum = proto.Field(proto.UINT32, number=2)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    rewardSort = proto.Field(KvSortUintData, number=4)

class BackTaskGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    themeQuests = proto.RepeatedField(proto.UINT32, number=3)
    unlockTime = proto.Field(proto.UINT32, number=4)

class BackTaskListData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    conditionClass = proto.Field(proto.UINT32, number=4)
    conditionNum = proto.Field(proto.UINT32, number=5)
    counterType = proto.Field(proto.UINT32, number=6)
    resetType = proto.Field(proto.UINT32, number=7)
    link = proto.Field(proto.STRING, number=8)

class BackTaskStepData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    stepNum = proto.Field(proto.UINT32, number=2)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=3)

class BackTimeConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    boxTime = proto.Field(proto.UINT32, number=2)
    loginTime = proto.Field(proto.UINT32, number=3)
    upTime = proto.Field(proto.UINT32, number=4)
    taskTime = proto.Field(proto.UINT32, number=5)

class BackUpActData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    num = proto.Field(proto.UINT32, number=2)

class BarrackData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    unlock = proto.Field(proto.UINT32, number=3)
    type = proto.Field(proto.UINT32, number=4)
    globalTab = proto.Field(proto.UINT32, number=5)

class BarrackEffectData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    effectPath = proto.Field(proto.STRING, number=2)
    lgpPath = proto.Field(proto.STRING, number=3)

class BarrackFormationData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    gunId = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    barrackIdleNormal = proto.Field(proto.STRING, number=4)
    barrackEntrance = proto.Field(proto.STRING, number=5)
    barrackEffectId = proto.RepeatedField(proto.UINT32, number=6)
    barrackAudioId = proto.Field(proto.UINT32, number=7)
    upgradeTrainingShootResource = proto.Field(proto.STRING, number=8)
    classTrainingShootResource = proto.Field(proto.STRING, number=9)
    ending = proto.Field(proto.STRING, number=10)
    endingidle = proto.Field(proto.STRING, number=11)
    toidle = proto.Field(proto.STRING, number=12)
    changeclothes = proto.Field(proto.STRING, number=13)
    changeclothesTimeline = proto.Field(proto.STRING, number=14)

class BarrackInteractByIdData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    interId = proto.RepeatedField(proto.UINT32, number=2)

class BarrackInteractData(proto.Message):
    interId = proto.Field(proto.UINT32, number=1)
    id = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    isActive = proto.Field(proto.BOOL, number=4)
    postposition = proto.RepeatedField(proto.UINT32, number=5)
    isTimeline = proto.Field(proto.BOOL, number=6)
    isBreak = proto.Field(proto.BOOL, number=7)
    isEsc = proto.Field(proto.BOOL, number=8)
    barrackInteract = proto.Field(proto.STRING, number=9)
    voice = proto.Field(proto.UINT32, number=10)
    weight = proto.Field(proto.UINT32, number=11)
    triggeringtime = proto.Field(proto.DOUBLE, number=12)
    preposition = proto.Field(proto.UINT32, number=13)
    cameraX = proto.Field(proto.STRING, number=14)
    cameraY = proto.Field(proto.STRING, number=15)
    cameraDistance = proto.Field(proto.STRING, number=16)
    o_CDEOFLNEJEP = proto.Field(proto.STRING, number=17)
    weaponId = proto.RepeatedField(proto.UINT32, number=18)

class BarracksBackgroundData(proto.Message):
    barracksId = proto.Field(proto.UINT32, number=1)
    barracksPrefabBg = proto.Field(proto.STRING, number=2)
    barracksUsmBg = proto.Field(proto.STRING, number=3)

class BasicAffixIdByBasicGroupIdData(proto.Message):
    basicGroupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class BasicAffixIdData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    basicGroupId = proto.Field(proto.UINT32, number=2)
    weight = proto.Field(proto.UINT32, number=3)
    basicPropertyType = proto.Field(proto.UINT32, number=4)
    basicPropertyValue = proto.Field(proto.UINT32, number=5)
    upgradeId = proto.Field(proto.UINT32, number=6)

class BattleBuffData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    aiIgnore = proto.Field(proto.BOOL, number=2)
    buffGroupId = proto.Field(proto.INT32, number=3)
    level = proto.Field(proto.INT32, number=4)
    buffType = proto.Field(proto.UINT64, number=5)
    buffMold = proto.Field(proto.UINT32, number=6)
    buffEffect = proto.Field(proto.STRING, number=7)
    effectPlayTime = proto.RepeatedField(proto.INT32, number=8)
    shaderType = proto.Field(proto.UINT32, number=9)
    cameraPlayTime = proto.RepeatedField(proto.INT32, number=10)
    cameraTime = proto.Field(proto.STRING, number=11)
    unique = proto.Field(proto.UINT32, number=12)
    maxTier = proto.Field(proto.UINT32, number=13)
    overlying = proto.Field(proto.UINT32, number=14)
    lifetimeRound = proto.Field(proto.INT32, number=15)
    lifetimeDisplaynum = proto.Field(proto.INT32, number=16)
    lifetimeCondition = proto.Field(proto.STRING, number=17)
    lifetimeTrigger = proto.Field(proto.STRING, number=18)
    lifetimeTriggerPriority = proto.Field(proto.INT32, number=19)
    lifetimeAddition = proto.Field(proto.UINT32, number=20)
    ongoingEffect = proto.Field(proto.STRING, number=21)
    buffCondition = proto.Field(proto.STRING, number=22)
    buffTrigger = proto.Field(proto.STRING, number=23)
    resultTriggerPriority = proto.Field(proto.INT32, number=24)
    targetTrigger = proto.Field(proto.UINT32, number=25)
    triggerSkill = proto.RepeatedField(proto.INT32, number=26)
    buffTriggerMaker = proto.Field(proto.INT32, number=27)
    triggerRate = proto.Field(proto.INT32, number=28)
    notifyCount = proto.Field(proto.INT32, number=29)
    result = proto.Field(proto.STRING, number=30)
    targetSelect = proto.Field(proto.UINT32, number=31)
    conditionSeek = proto.Field(proto.STRING, number=32)
    targetSeek = proto.Field(proto.STRING, number=33)
    shape = proto.Field(proto.UINT32, number=34)
    shapeParam = proto.Field(proto.STRING, number=35)
    shapeCrossTerrain = proto.Field(proto.UINT32, number=36)
    condition = proto.Field(proto.STRING, number=37)
    effectType = proto.Field(proto.INT32, number=38)
    deadClear = proto.Field(proto.INT32, number=39)
    aiControl = proto.Field(proto.UINT32, number=40)
    buffFix = proto.Field(proto.INT32, number=41)
    existSuppressed = proto.Field(proto.UINT32, number=42)
    endstateFlag = proto.Field(proto.INT32, number=43)
    buffShareLimitGroup = proto.Field(proto.UINT32, number=44)
    parentControlType = proto.Field(proto.INT32, number=45)
    beCommand = proto.Field(proto.BOOL, number=46)
    buffSymbiosis = proto.RepeatedField(proto.INT32, number=47)
    releasegirdMonitor = proto.Field(proto.UINT32, number=48)
    skillafterDelay = proto.Field(proto.UINT32, number=49)
    triggerSkillShape = proto.Field(proto.UINT32, number=50)

class BattleBuffPerformData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    description = proto.Field(LanguageStringData, number=3)
    descriptionTips = proto.Field(LanguageStringData, number=4)
    buffEffect = proto.Field(proto.STRING, number=5)
    effectPlayTime = proto.RepeatedField(proto.INT32, number=6)
    effectFadeTime = proto.Field(proto.STRING, number=7)
    shaderType = proto.Field(proto.UINT32, number=8)
    cameraPlayTime = proto.RepeatedField(proto.INT32, number=9)
    cameraTime = proto.RepeatedField(proto.INT32, number=10)
    effectFollowType = proto.Field(proto.STRING, number=11)
    effectBirthType = proto.Field(proto.STRING, number=12)
    effectTypeGroup = proto.Field(proto.STRING, number=13)
    showPriorityEffect = proto.Field(proto.UINT32, number=14)
    buffFix = proto.Field(proto.UINT32, number=15)
    iconName = proto.Field(proto.STRING, number=16)
    isShow = proto.Field(proto.BOOL, number=17)
    buffHeadShow = proto.Field(proto.UINT32, number=18)
    showPriorityIcon = proto.Field(proto.UINT32, number=19)
    isLoop = proto.Field(proto.STRING, number=20)

class BattleConditionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    para = proto.Field(proto.STRING, number=3)
    target = proto.Field(proto.UINT32, number=4)

class BattleConfigData(proto.Message):
    hp2Attack = proto.Field(proto.INT32, number=1)
    strongAgainst = proto.Field(proto.DOUBLE, number=2)
    weakAgainst = proto.Field(proto.DOUBLE, number=3)
    reactLimit = proto.Field(proto.INT32, number=4)
    charHeight = proto.Field(proto.DOUBLE, number=5)
    shootHeightAdjust = proto.Field(proto.DOUBLE, number=6)
    highgroundHeightAdjust = proto.Field(proto.DOUBLE, number=7)
    coverHeightAdjust = proto.Field(proto.DOUBLE, number=8)
    fixHighgroundAdjust = proto.Field(proto.DOUBLE, number=9)
    movePointCost = proto.Field(proto.DOUBLE, number=10)
    breakHit = proto.Field(proto.INT32, number=11)
    breakChain = proto.Field(proto.INT32, number=12)
    killChain = proto.Field(proto.INT32, number=13)
    chainReset = proto.Field(proto.INT32, number=14)
    chainMax = proto.Field(proto.INT32, number=15)
    breakRound = proto.Field(proto.INT32, number=16)
    moveState = proto.Field(proto.BOOL, number=17)
    aoeselectAttack = proto.Field(proto.STRING, number=18)
    aoeselectRecover = proto.Field(proto.STRING, number=19)
    slowMotion = proto.Field(proto.DOUBLE, number=20)
    slowMotionDuration = proto.Field(proto.INT32, number=21)
    hpChangeSpeed = proto.Field(proto.INT32, number=22)
    cameraShakeZoom = proto.Field(proto.INT32, number=23)
    selectSound = proto.Field(proto.INT32, number=24)
    cancelSound = proto.Field(proto.INT32, number=25)
    moveSound = proto.Field(proto.INT32, number=26)
    attackTargetSound = proto.Field(proto.INT32, number=27)
    clickSound = proto.Field(proto.INT32, number=28)
    teMax = proto.Field(proto.INT32, number=29)
    teKill = proto.Field(proto.INT32, number=30)
    teSkill = proto.Field(proto.INT32, number=31)
    teAllydie = proto.Field(proto.INT32, number=32)
    fakeFireInterval = proto.Field(proto.INT32, number=33)
    fakeFireRandom = proto.Field(proto.INT32, number=34)
    fakeFireOffset = proto.Field(proto.INT32, number=35)
    fakeFireDistance = proto.Field(proto.INT32, number=36)
    skillEstimateOffset = proto.Field(proto.INT32, number=37)
    gridDetailShowtime = proto.Field(proto.DOUBLE, number=38)
    gridDetailVector = proto.Field(proto.DOUBLE, number=39)
    gmSkillOn = proto.Field(proto.STRING, number=40)
    gmSkillOff = proto.Field(proto.STRING, number=41)
    gmSkillDes = proto.Field(proto.STRING, number=42)
    potentialHuntRace = proto.Field(proto.STRING, number=43)
    aiDecideGroupLimit = proto.Field(proto.INT32, number=44)
    buffShowHeight = proto.Field(proto.INT32, number=45)
    skillShowHeight = proto.Field(proto.INT32, number=46)
    suppressSkill = proto.Field(proto.STRING, number=47)
    unsuppressSkill = proto.Field(proto.STRING, number=48)
    buffShowDuration = proto.Field(proto.INT32, number=49)
    twinShieldDifRatio = proto.Field(proto.DOUBLE, number=50)
    pveDefaultSkills = proto.Field(proto.STRING, number=51)
    displacementVerDefault = proto.Field(proto.INT32, number=52)
    displacementVerQuotient = proto.Field(proto.INT32, number=53)
    displacementVerDifference = proto.Field(proto.INT32, number=54)
    armorArg = proto.Field(proto.INT32, number=55)
    attackArg = proto.Field(proto.INT32, number=56)
    sheildArg = proto.Field(proto.INT32, number=57)
    displaceStart = proto.Field(proto.INT32, number=58)
    displaceCrash = proto.Field(proto.INT32, number=59)
    displaceOver = proto.Field(proto.INT32, number=60)
    dropStart = proto.Field(proto.INT32, number=61)
    dropOver = proto.Field(proto.INT32, number=62)
    effectShield1 = proto.Field(proto.INT32, number=63)
    effectShield2 = proto.Field(proto.INT32, number=64)
    attackType0Skill = proto.Field(proto.INT32, number=65)
    emptyEffect = proto.Field(proto.STRING, number=66)
    suppressChangeArg = proto.Field(proto.INT32, number=67)
    killSuppressed = proto.Field(proto.INT32, number=68)
    timeOutHeal = proto.Field(proto.INT32, number=69)
    antiSuppressArg = proto.Field(proto.INT32, number=70)
    suppressToHurtId = proto.Field(proto.INT32, number=71)
    suppressSkillShow = proto.Field(proto.INT32, number=72)
    coverArg = proto.Field(proto.INT32, number=73)
    unlockPotenial = proto.Field(proto.STRING, number=74)
    unlockCameraMode = proto.Field(proto.INT32, number=75)
    relatedCouple = proto.Field(proto.STRING, number=76)
    oppositeAnglesDisplacement = proto.Field(proto.INT32, number=77)
    buffCovered = proto.Field(proto.INT32, number=78)
    ultraSkillUnlock = proto.RepeatedField(proto.UINT32, number=79)
    battleSquadRememberUnlock = proto.Field(proto.UINT32, number=80)
    elementTagRestrain = proto.Field(proto.UINT32, number=81)
    roleTurn2Fullcover = proto.Field(proto.STRING, number=82)
    roleTurn2Halfcover = proto.Field(proto.STRING, number=83)
    roleAiOrderClass = proto.Field(proto.INT32, number=84)
    elementPropertyChange = proto.Field(proto.STRING, number=85)
    potentialUIUnlock = proto.RepeatedField(proto.UINT32, number=86)
    estimateSkillTag = proto.RepeatedField(proto.UINT32, number=87)
    estimateBuffType = proto.RepeatedField(proto.UINT32, number=88)
    elementSuppressedEffect = proto.Field(proto.STRING, number=89)
    stageLadderAddBuff = proto.Field(proto.UINT32, number=90)
    elementRestrain = proto.Field(proto.INT32, number=91)
    elementWeaponRestrain = proto.Field(proto.INT32, number=92)
    elementWeaponTagRestrain = proto.Field(proto.UINT32, number=93)
    moverouteWidthRate = proto.Field(proto.UINT32, number=94)
    buffTypeMoveAgainComplete = proto.Field(proto.UINT64, number=95)
    buffTypeMoveAgain = proto.Field(proto.UINT64, number=96)
    buffTypeAttackAgain = proto.Field(proto.UINT64, number=97)
    o_KBMEGMLKMDG = proto.RepeatedField(proto.UINT32, number=98)
    o_CGDJHLBMJFD = proto.Field(proto.UINT64, number=99)

class BattleDelayData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    delayTrigger = proto.Field(proto.STRING, number=2)
    skillSuccess = proto.Field(proto.UINT32, number=3)
    skillSuccessTarget = proto.Field(proto.INT32, number=4)
    skillSuccessLifetime = proto.Field(proto.STRING, number=5)
    skillSuccessLimit = proto.Field(proto.INT32, number=6)
    delayLifetimeCancel = proto.Field(proto.INT32, number=7)
    skillCancel = proto.Field(proto.STRING, number=8)
    skillCancelTarget = proto.Field(proto.INT32, number=9)
    delayInterrupt = proto.Field(proto.INT32, number=10)
    buffId = proto.Field(proto.INT32, number=11)
    skillInterrupt = proto.Field(proto.STRING, number=12)
    skillInterruptTarget = proto.Field(proto.INT32, number=13)
    skillDelayOut = proto.Field(proto.STRING, number=14)
    gridOccupyDelay = proto.Field(proto.INT32, number=15)
    shape = proto.Field(proto.UINT32, number=16)
    shapeParam = proto.Field(proto.STRING, number=17)
    shapeCrossTerrain = proto.Field(proto.UINT32, number=18)
    cellEffectId = proto.Field(proto.UINT32, number=19)
    bindType = proto.Field(proto.UINT32, number=20)
    bindLogicPoint = proto.Field(proto.UINT32, number=21)
    refreshBindType = proto.Field(proto.UINT32, number=22)
    skillDelayIn = proto.Field(proto.STRING, number=23)
    cellRangeType = proto.Field(proto.UINT32, number=24)
    chargeKeepIk = proto.Field(proto.BOOL, number=25)
    animDirType = proto.Field(proto.UINT32, number=26)

class BattleDisplacementData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    relative = proto.Field(proto.UINT32, number=3)
    distance = proto.Field(proto.UINT32, number=4)
    drop = proto.Field(proto.INT32, number=5)
    moveCode = proto.Field(proto.UINT32, number=6)
    blindageBreak = proto.Field(proto.INT32, number=7)
    collisionPlayer = proto.Field(proto.UINT32, number=8)
    collisionEnemy = proto.Field(proto.UINT32, number=9)
    effectTypeTarget = proto.Field(proto.INT32, number=10)
    resultUnitTarget = proto.Field(proto.STRING, number=11)
    resultCollisionCover = proto.Field(proto.STRING, number=12)
    resultDrop = proto.Field(proto.STRING, number=13)
    displacementId = proto.Field(proto.UINT32, number=14)
    effectCollision = proto.Field(proto.STRING, number=15)
    effectCollisionPoint = proto.Field(proto.STRING, number=16)
    effectTrailing = proto.Field(proto.STRING, number=17)
    effectTrailingPoint = proto.Field(proto.STRING, number=18)

class BattleEffectConditionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    condition = proto.Field(proto.STRING, number=2)
    effectpath = proto.Field(proto.STRING, number=3)
    model = proto.Field(proto.STRING, number=4)

class BattleEffectData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    effectPath = proto.Field(proto.STRING, number=2)
    effectLifetime = proto.Field(proto.INT32, number=3)
    priority = proto.Field(proto.UINT32, number=4)
    soundOrder = proto.RepeatedField(proto.INT32, number=5)
    visible = proto.Field(proto.UINT32, number=6)
    useShader = proto.Field(proto.INT32, number=7)
    shinelineWidth = proto.Field(proto.UINT32, number=8)
    lineColor = proto.Field(proto.STRING, number=9)
    fillColor = proto.Field(proto.STRING, number=10)
    rotation = proto.Field(proto.STRING, number=11)
    materialEffect = proto.Field(proto.INT32, number=12)
    birthOffset = proto.Field(proto.STRING, number=13)
    birthRandom = proto.Field(proto.STRING, number=14)
    destOffset = proto.Field(proto.STRING, number=15)
    destRandom = proto.Field(proto.STRING, number=16)
    effectTypeGroup = proto.Field(proto.UINT32, number=17)
    routeId = proto.Field(proto.UINT32, number=18)
    bindType = proto.Field(proto.UINT32, number=19)
    zoomRatio = proto.Field(proto.UINT32, number=20)
    dieDelay = proto.Field(proto.UINT32, number=21)
    randomRotate = proto.Field(proto.BOOL, number=22)
    birthRule = proto.Field(proto.STRING, number=23)
    spicailScript = proto.Field(proto.INT32, number=24)
    shape = proto.Field(proto.UINT32, number=25)
    shapeParam = proto.Field(proto.STRING, number=26)
    shapeCrossTerrain = proto.Field(proto.INT32, number=27)
    isHitEffect = proto.Field(proto.BOOL, number=28)
    coverHitType = proto.Field(proto.INT32, number=29)
    maskGroup = proto.Field(proto.INT32, number=30)
    zTest = proto.Field(proto.INT32, number=31)
    shotMark = proto.RepeatedField(proto.INT32, number=32)
    soundDelay = proto.Field(proto.INT32, number=33)
    shakeDelay = proto.Field(proto.INT32, number=34)
    shakeTemplate = proto.Field(proto.INT32, number=35)
    displayCameraMode = proto.Field(proto.UINT32, number=36)
    sizeAdaption = proto.Field(proto.BOOL, number=37)
    isCloneable = proto.Field(proto.BOOL, number=38)

class BattleEstimateData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    property = proto.Field(proto.STRING, number=3)
    value = proto.Field(proto.INT32, number=4)
    side = proto.Field(proto.UINT32, number=5)
    expression = proto.Field(proto.STRING, number=6)
    conditionId = proto.Field(proto.STRING, number=7)
    parameter1 = proto.Field(proto.STRING, number=8)
    parameter2 = proto.Field(proto.STRING, number=9)

class BattleGodData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    addLevel = proto.Field(proto.INT32, number=2)
    skillList = proto.RepeatedField(proto.UINT32, number=3)
    propertyGroup = proto.Field(proto.UINT32, number=4)
    maxAp = proto.Field(proto.INT32, number=5)
    element = proto.Field(proto.UINT32, number=6)

class BattleHealData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    criticalHit = proto.Field(proto.INT32, number=2)

class BattleInteractionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    interactionItemCreation = proto.Field(proto.UINT32, number=2)
    skillGroupList = proto.RepeatedField(proto.UINT32, number=3)
    effectPath = proto.Field(proto.STRING, number=4)
    effectPathDisable = proto.Field(proto.STRING, number=5)
    name = proto.Field(LanguageStringData, number=6)
    actionInteractionType = proto.Field(proto.INT32, number=7)
    description = proto.Field(LanguageStringData, number=8)
    descriptionDisable = proto.Field(LanguageStringData, number=9)
    gridOccupy = proto.Field(proto.INT32, number=10)
    disableGridType = proto.Field(LanguageStringData, number=11)
    isRemainActive = proto.Field(proto.INT32, number=12)
    interactionLevel = proto.Field(proto.INT32, number=13)
    iconPath = proto.Field(proto.STRING, number=14)
    type = proto.Field(proto.INT32, number=15)
    showType = proto.Field(proto.INT32, number=16)
    extraBuff = proto.Field(proto.INT32, number=17)
    triggerSummoned = proto.Field(proto.BOOL, number=18)
    triggerMomentType = proto.Field(proto.INT32, number=19)
    targetGridType = proto.Field(proto.INT32, number=20)
    descriptionTitle = proto.Field(LanguageStringData, number=21)
    disableTitle = proto.Field(LanguageStringData, number=22)
    disableCellText = proto.Field(LanguageStringData, number=23)
    disableStrongholdText = proto.Field(LanguageStringData, number=24)
    upperLimit = proto.Field(LanguageStringData, number=25)
    o_AHJJILNFEKB = proto.Field(proto.INT32, number=26)

class BattleLogicScriptData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    scriptGroup = proto.Field(proto.UINT32, number=2)
    isHit = proto.Field(proto.BOOL, number=3)
    isCrit = proto.Field(proto.BOOL, number=4)

class BattleLogicScriptGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    stageId = proto.Field(proto.UINT32, number=2)

class BattleMirageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    buffList = proto.RepeatedField(proto.INT32, number=2)
    aiOrderClass = proto.Field(proto.INT32, number=3)
    aiList = proto.RepeatedField(proto.INT32, number=4)
    btPath = proto.Field(proto.STRING, number=5)
    summonLevel = proto.Field(proto.UINT32, number=6)
    propertyGroup = proto.Field(proto.UINT32, number=7)
    inheritPropertyKey = proto.Field(proto.STRING, number=8)
    inheritPropertyValue = proto.Field(proto.STRING, number=9)
    inheritPropertyFixed = proto.Field(proto.STRING, number=10)
    hasCamera = proto.Field(proto.BOOL, number=11)
    cameraDuration = proto.Field(proto.UINT32, number=12)
    attachMasterDead = proto.Field(proto.INT32, number=13)
    beSuppressedConfig = proto.RepeatedField(proto.INT32, number=14)
    suppressGroup = proto.RepeatedField(proto.INT32, number=15)
    feature = proto.Field(proto.UINT32, number=16)

class BattleRewardAccumulatedData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    damage = proto.Field(proto.UINT32, number=3)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    des = proto.Field(proto.STRING, number=5)

class BattleRewardSingleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    damage = proto.Field(proto.UINT32, number=3)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    des = proto.Field(proto.STRING, number=5)

class BattleRouteData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    birthType = proto.Field(proto.INT32, number=2)
    birthLgpType = proto.Field(proto.UINT32, number=3)
    birthGameobjectName = proto.Field(proto.STRING, number=4)
    destType = proto.Field(proto.INT32, number=5)
    destLgpType = proto.Field(proto.UINT32, number=6)
    routeType = proto.Field(proto.INT32, number=7)
    speed = proto.Field(proto.DOUBLE, number=8)
    routePara = proto.Field(proto.DOUBLE, number=9)
    effectPoint = proto.Field(proto.INT32, number=10)
    routeParaRate = proto.Field(proto.UINT32, number=11)

class BattleShapeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    shape = proto.Field(proto.STRING, number=2)
    position = proto.Field(proto.STRING, number=3)
    cameraPoint = proto.Field(proto.STRING, number=4)

class BattleShieldData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    criticalHit = proto.Field(proto.UINT32, number=2)

class BattleSkillAnimControlData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    actionParamName = proto.RepeatedField(proto.STRING, number=2)
    actionType = proto.RepeatedField(proto.INT32, number=3)
    actionValue = proto.RepeatedField(proto.INT32, number=4)
    originState = proto.Field(proto.STRING, number=5)
    animLength = proto.RepeatedField(proto.INT32, number=6)
    dirType = proto.Field(proto.INT32, number=7)
    showWeapon = proto.Field(proto.INT32, number=8)
    isIk = proto.Field(proto.BOOL, number=9)
    isOriginTimeline = proto.Field(proto.INT32, number=10)
    fpsCreation = proto.Field(proto.STRING, number=11)
    fakeCreation = proto.Field(proto.STRING, number=12)

class BattleSkillData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    subskillCondition = proto.Field(proto.STRING, number=2)
    subskillGroup = proto.Field(proto.STRING, number=3)
    shapeDisplay = proto.Field(proto.BOOL, number=4)
    skillType = proto.Field(proto.INT32, number=5)
    elementTag = proto.Field(proto.INT32, number=6)
    ignoreDisable = proto.Field(proto.UINT32, number=7)
    relationBuff = proto.Field(proto.STRING, number=8)
    tag = proto.Field(proto.UINT64, number=9)
    animctrlId = proto.Field(proto.INT32, number=10)
    castCondition = proto.Field(proto.STRING, number=11)
    conditionErrorinfo = proto.Field(proto.STRING, number=12)
    skillDelayId = proto.Field(proto.UINT32, number=13)
    skillMold = proto.Field(proto.UINT32, number=14)
    targetSelect = proto.Field(proto.UINT32, number=15)
    effectType = proto.Field(proto.INT32, number=16)
    result = proto.Field(proto.STRING, number=17)
    throwType = proto.Field(proto.UINT32, number=18)
    resultThrowType = proto.Field(proto.UINT32, number=19)
    rangeCrossTerrain = proto.Field(proto.UINT32, number=20)
    shapeCrossTerrain = proto.Field(proto.UINT32, number=21)
    skillRange = proto.Field(proto.UINT32, number=22)
    skillRangeParam = proto.Field(proto.STRING, number=23)
    shape = proto.Field(proto.UINT32, number=24)
    shapeParam = proto.Field(proto.STRING, number=25)
    targetCondition = proto.Field(proto.STRING, number=26)
    targetSeek = proto.Field(proto.STRING, number=27)
    buffBeforeResult = proto.Field(proto.STRING, number=28)
    buffAfterResult = proto.Field(proto.STRING, number=29)
    returnStartgrid = proto.Field(proto.UINT32, number=30)
    cdTime = proto.Field(proto.UINT32, number=31)
    startCdTime = proto.Field(proto.UINT32, number=32)
    skillPoints = proto.Field(proto.STRING, number=33)
    potentialCost = proto.Field(proto.UINT32, number=34)
    cellTrigger = proto.RepeatedField(proto.INT32, number=35)
    endState = proto.Field(proto.INT32, number=36)
    gridCoverOccupy = proto.Field(proto.INT32, number=37)
    mainTargetRemove = proto.Field(proto.BOOL, number=38)
    releaseBlockPlay = proto.Field(proto.INT32, number=39)
    actionInterrupt = proto.Field(proto.INT32, number=40)
    restrainCondition = proto.Field(proto.STRING, number=41)
    selectDisabled = proto.Field(proto.BOOL, number=42)
    selectDestroyed = proto.Field(proto.BOOL, number=43)
    replaceDisplayId = proto.Field(proto.STRING, number=44)
    weaponTag = proto.Field(proto.INT32, number=45)
    releasefailAlert = proto.Field(proto.UINT32, number=46)
    skillbeforProtect = proto.Field(proto.UINT32, number=47)
    aroundCover = proto.Field(proto.UINT32, number=48)
    monitoredPlayer = proto.Field(proto.UINT32, number=49)
    entityInteractionNochoice = proto.Field(proto.UINT32, number=50)

class BattleSkillDisplayData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    description = proto.Field(LanguageStringData, number=3)
    descriptionTips = proto.Field(proto.STRING, number=4)
    descriptionBrief = proto.Field(LanguageStringData, number=5)
    descriptionLiterary = proto.Field(LanguageStringData, number=6)
    descriptionType = proto.Field(proto.INT32, number=7)
    upgradeDescription = proto.Field(LanguageStringData, number=8)
    level = proto.Field(proto.UINT32, number=9)
    icon = proto.Field(proto.STRING, number=10)
    skillShow = proto.Field(proto.BOOL, number=11)
    skillInPanel = proto.Field(proto.BOOL, number=12)
    estimateType = proto.Field(proto.UINT32, number=13)
    battleGridShow = proto.Field(proto.UINT32, number=14)
    stayUseSkill = proto.Field(proto.INT32, number=15)
    battleCreationShow = proto.Field(proto.UINT32, number=16)
    battleResource = proto.Field(proto.UINT32, number=17)
    rangeDisplay = proto.Field(proto.UINT32, number=18)
    rangeDisplayParam = proto.Field(proto.STRING, number=19)
    shapeDisplay = proto.Field(proto.UINT32, number=20)
    shapeDisplayParam = proto.Field(proto.STRING, number=21)
    skillTag = proto.Field(LanguageStringData, number=22)
    suppressValueShow = proto.Field(proto.STRING, number=23)
    elementShow = proto.Field(proto.INT32, number=24)
    hideTag = proto.Field(proto.BOOL, number=25)
    cameraSkillClick = proto.Field(proto.INT32, number=26)
    cameraSkillSelect = proto.Field(proto.INT32, number=27)
    cameraRemote = proto.Field(proto.BOOL, number=28)
    cameraTrackback = proto.Field(proto.DOUBLE, number=29)

class BattleSummonCoverData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    coverId = proto.Field(proto.UINT32, number=2)
    prefabPath = proto.Field(proto.STRING, number=3)
    lifeTime = proto.Field(proto.UINT32, number=4)
    lifeTimeDecrease = proto.Field(proto.UINT32, number=5)
    coverShape = proto.Field(proto.STRING, number=6)
    coverType = proto.Field(proto.UINT32, number=7)

class BattleSummonedData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    skillGroupList = proto.RepeatedField(proto.STRING, number=2)
    reflectGroupList = proto.RepeatedField(proto.STRING, number=3)
    normalSkill = proto.Field(proto.INT32, number=4)
    summonSkillList = proto.RepeatedField(proto.INT32, number=5)
    aiList = proto.RepeatedField(proto.INT32, number=6)
    modelCode = proto.Field(proto.UINT32, number=7)
    summonGroup = proto.Field(proto.UINT32, number=8)
    actionChance = proto.Field(proto.INT32, number=9)
    aiOrderClass = proto.Field(proto.INT32, number=10)
    isHpbarShowed = proto.Field(proto.INT32, number=11)
    moveCode = proto.Field(proto.INT32, number=12)
    isEntity = proto.Field(proto.BOOL, number=13)
    characterPic = proto.Field(proto.STRING, number=14)
    changeCover = proto.Field(proto.BOOL, number=15)
    bindType = proto.Field(proto.INT32, number=16)
    gridOccupied = proto.Field(proto.BOOL, number=17)
    name = proto.Field(LanguageStringData, number=18)
    isSelectable = proto.Field(proto.BOOL, number=19)
    summonLevel = proto.Field(proto.UINT32, number=20)
    inheritPropertyKey = proto.Field(proto.STRING, number=21)
    inheritPropertyValue = proto.Field(proto.STRING, number=22)
    inheritPropertyFixed = proto.Field(proto.STRING, number=23)
    beSuppressedConfig = proto.RepeatedField(proto.INT32, number=24)
    isTriggerDeathevent = proto.Field(proto.BOOL, number=25)
    attachMasterDead = proto.Field(proto.INT32, number=26)
    propertyGroup = proto.Field(proto.UINT32, number=27)
    shieldType = proto.Field(proto.UINT32, number=28)
    attackType = proto.Field(proto.UINT32, number=29)
    weakTag = proto.Field(proto.STRING, number=30)
    element = proto.Field(proto.UINT32, number=31)
    weight = proto.Field(proto.UINT32, number=32)
    triggerType = proto.Field(proto.INT32, number=33)
    occupySize = proto.Field(proto.INT32, number=34)
    shape = proto.Field(proto.UINT32, number=35)
    shapeParam = proto.Field(proto.STRING, number=36)
    shapeIcon = proto.Field(proto.STRING, number=37)
    shapeTerrain = proto.Field(proto.UINT32, number=38)
    gridText = proto.Field(LanguageStringData, number=39)
    idleType = proto.Field(proto.UINT32, number=40)
    displacement = proto.Field(proto.UINT32, number=41)
    hasCamera = proto.Field(proto.BOOL, number=42)
    cameraDuration = proto.Field(proto.UINT32, number=43)
    enemyCamp = proto.Field(proto.UINT32, number=44)
    btPath = proto.Field(proto.STRING, number=45)
    suppressGroup = proto.RepeatedField(proto.INT32, number=46)
    guardRadius = proto.Field(proto.INT32, number=47)
    guardRadiusShow = proto.Field(proto.INT32, number=48)
    weakWeaponTag = proto.Field(proto.INT32, number=49)
    weaponTag = proto.Field(proto.INT32, number=50)
    feature = proto.Field(proto.UINT32, number=51)
    o_NJKOMFEKKGF = proto.Field(proto.INT32, number=52)
    o_KFNLNCIIHIA = proto.Field(proto.INT32, number=53)
    o_JJCHEFGLOMN = proto.Field(proto.INT32, number=54)

class BattleTacticSkillData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    detail = proto.Field(LanguageStringData, number=3)
    upgradeDescription = proto.Field(LanguageStringData, number=4)
    descriptionBrief = proto.Field(LanguageStringData, number=5)
    descriptionLiterary = proto.Field(LanguageStringData, number=6)
    video = proto.Field(proto.UINT32, number=7)
    timeline = proto.Field(proto.STRING, number=8)
    camera = proto.Field(proto.UINT32, number=9)
    ui = proto.Field(proto.STRING, number=10)
    skillList = proto.RepeatedField(proto.INT32, number=11)
    autoSkillList = proto.Field(proto.INT32, number=12)
    teCost = proto.Field(proto.UINT32, number=13)
    stock = proto.Field(proto.UINT32, number=14)
    filter = proto.Field(proto.STRING, number=15)
    icon = proto.Field(proto.STRING, number=16)

class BattleTextData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    keyWord = proto.Field(LanguageStringData, number=2)
    explanation = proto.Field(LanguageStringData, number=3)

class BattleTransmitData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    shapeParam = proto.RepeatedField(proto.INT32, number=3)
    target = proto.Field(proto.INT32, number=4)
    condition = proto.Field(proto.STRING, number=5)
    effectBeforeTransmit = proto.Field(proto.STRING, number=6)
    effectAfterTransmit = proto.Field(proto.STRING, number=7)
    transmitFunction = proto.Field(proto.UINT32, number=8)
    resultTransmit = proto.Field(proto.STRING, number=9)
    targetIgnore = proto.Field(proto.INT32, number=10)

class BattleUiConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    uiId = proto.Field(proto.STRING, number=2)

class BattleVideoData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    path = proto.Field(proto.STRING, number=2)
    lifetime = proto.Field(proto.INT32, number=3)

class BehaviorCallData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    effect = proto.Field(proto.STRING, number=2)
    voice = proto.Field(proto.STRING, number=3)
    dialog = proto.Field(LanguageStringData, number=4)

class BehaviorDialogData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    dialog = proto.Field(LanguageStringData, number=4)
    time = proto.Field(proto.UINT32, number=5)
    voice = proto.Field(proto.UINT32, number=6)
    bgm = proto.Field(proto.UINT32, number=7)

class BehaviorInteractData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    tag = proto.Field(proto.STRING, number=2)
    npcstatement = proto.RepeatedField(proto.UINT32, number=3)
    action = proto.Field(proto.UINT32, number=4)
    objectInteract = proto.Field(proto.STRING, number=5)
    animationInteract = proto.Field(proto.UINT32, number=6)
    dialog = proto.Field(proto.STRING, number=7)
    dialogId = proto.RepeatedField(proto.UINT32, number=8)
    memo = proto.Field(proto.UINT32, number=9)

class BehaviorMainData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    npcid = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    seat = proto.Field(proto.UINT32, number=4)
    ifChildren = proto.Field(proto.BOOL, number=5)
    mainid = proto.RepeatedField(proto.UINT32, number=6)
    realtime = proto.RepeatedField(proto.STRING, number=7)
    time = proto.Field(proto.UINT32, number=8)
    moodTerm = proto.Field(proto.STRING, number=9)
    favorTerm = proto.Field(proto.STRING, number=10)
    specialTerm = proto.Field(proto.STRING, number=11)
    probability = proto.Field(proto.UINT32, number=12)
    waypoint = proto.Field(proto.STRING, number=13)
    ifMove = proto.Field(proto.BOOL, number=14)
    waypointMove = proto.Field(proto.STRING, number=15)
    actStart = proto.Field(proto.UINT32, number=16)
    actLoop = proto.Field(proto.UINT32, number=17)
    probabilityRandom = proto.Field(proto.STRING, number=18)
    actRandom = proto.Field(proto.UINT32, number=19)
    actEnd = proto.Field(proto.UINT32, number=20)
    cameraWatch = proto.Field(proto.STRING, number=21)
    ifInteract = proto.Field(proto.BOOL, number=22)
    effectStart = proto.Field(proto.STRING, number=23)
    animationStart = proto.Field(proto.UINT32, number=24)
    effectLoop = proto.Field(proto.STRING, number=25)
    animationLoop = proto.Field(proto.UINT32, number=26)
    animationRandom = proto.Field(proto.UINT32, number=27)
    effectEnd = proto.Field(proto.STRING, number=28)
    animationEnd = proto.Field(proto.UINT32, number=29)
    ifInterapt = proto.Field(proto.BOOL, number=30)
    memo = proto.RepeatedField(proto.UINT32, number=31)
    interactStart = proto.Field(proto.UINT32, number=32)
    interactLoop = proto.Field(proto.UINT32, number=33)
    ifChoice = proto.Field(proto.BOOL, number=34)
    choiceInteract = proto.Field(proto.STRING, number=35)
    interactId = proto.RepeatedField(proto.INT32, number=36)
    interactEnd = proto.Field(proto.UINT32, number=37)
    animationInteractStart = proto.Field(proto.UINT32, number=38)
    animationInteractLoop = proto.Field(proto.UINT32, number=39)
    animationInteractEnd = proto.Field(proto.UINT32, number=40)
    cameraInteract = proto.Field(proto.UINT32, number=41)
    ifPay = proto.Field(proto.BOOL, number=42)
    furniture = proto.Field(proto.UINT32, number=43)
    gift = proto.Field(proto.UINT32, number=44)
    timelineStart = proto.Field(proto.UINT32, number=45)
    timelineEnd = proto.Field(proto.UINT32, number=46)
    clothes = proto.Field(proto.UINT32, number=47)

class BingoAvatarData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    layout = proto.Field(proto.UINT32, number=2)

class BingoConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    bingoItem = proto.Field(proto.UINT32, number=2)
    bingoCost = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    horizontalItem = proto.Field(proto.STRING, number=4)
    verticalItem = proto.Field(proto.STRING, number=5)
    fullItem = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    cellNum = proto.Field(proto.UINT32, number=7)
    costMap = proto.Field(proto.STRING, number=8)
    taskId = proto.RepeatedField(proto.UINT32, number=9)
    rewardId = proto.RepeatedField(proto.UINT32, number=10)

class BingoRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    rewardItem = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    stock = proto.Field(proto.UINT32, number=4)
    addValue = proto.RepeatedField(proto.UINT32, number=5)
    weight = proto.Field(proto.UINT32, number=6)

class BingoTaskData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    rewardItem = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    conditionClass = proto.Field(proto.UINT32, number=5)
    conditionNum = proto.Field(proto.UINT32, number=6)
    link = proto.Field(proto.STRING, number=7)
    rewardItemSort = proto.Field(KvSortUintData, number=8)

class BpRewardDescData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    levelId = proto.Field(proto.UINT32, number=2)
    rewardId = proto.Field(proto.UINT32, number=3)
    typeReward = proto.Field(proto.UINT32, number=4)
    baseReward = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    advancedReward = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    specialEffectsReward = proto.Field(proto.STRING, number=7)

class BpSeasonData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    advanced1Name = proto.Field(proto.STRING, number=3)
    advanced2Name = proto.Field(proto.STRING, number=4)
    levelupAdvanced2Name = proto.Field(proto.STRING, number=5)
    maxLevel = proto.Field(proto.UINT32, number=6)
    upgradeExp = proto.Field(proto.UINT32, number=7)
    extraExp = proto.Field(proto.UINT32, number=8)
    extraReward = proto.MapField(proto.UINT32, proto.UINT32, number=9)
    extraUnlockReward = proto.MapField(proto.UINT32, proto.UINT32, number=10)
    rewardId = proto.Field(proto.UINT32, number=11)

class BpTaskData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    des = proto.Field(proto.STRING, number=4)
    conditionClass = proto.Field(proto.UINT32, number=5)
    conditionNum = proto.Field(proto.UINT32, number=6)
    rewardList = proto.MapField(proto.UINT32, proto.UINT32, number=7)
    link = proto.Field(proto.STRING, number=8)
    openCondition = proto.Field(proto.UINT32, number=9)
    closeCondition = proto.Field(proto.UINT32, number=10)
    weight = proto.Field(proto.INT32, number=11)
    seasonId = proto.Field(proto.UINT32, number=12)

class BpTaskTypeClassData(proto.Message):
    enName = proto.Field(proto.STRING, number=1)
    id = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)

class BpUnlockRewardBySeasonIdData(proto.Message):
    seasonId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class BpUnlockRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    seasonId = proto.Field(proto.UINT32, number=2)
    rewardId = proto.Field(proto.UINT32, number=3)
    itemId = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    itemDisplay = proto.Field(proto.UINT32, number=5)

class BuffClassData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    buffClass = proto.RepeatedField(proto.UINT32, number=2)

class BuffListData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    bufflist = proto.RepeatedField(proto.UINT32, number=2)

class BuffShareLimitByGroupData(proto.Message):
    group = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class BuffShareLimitData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    talentKeyId = proto.Field(proto.STRING, number=3)
    gunGrade = proto.Field(proto.STRING, number=4)
    buffList = proto.Field(proto.STRING, number=5)

class CModeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cellMun = proto.Field(proto.UINT32, number=2)
    cellBorn = proto.Field(proto.UINT32, number=3)
    randomControl = proto.Field(proto.UINT32, number=4)
    regularControl = proto.MapField(proto.UINT32, proto.UINT32, number=5)

class CalculateData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    formula = proto.Field(proto.STRING, number=2)
    parameter = proto.Field(proto.STRING, number=3)
    dynamicParameter = proto.Field(proto.STRING, number=4)
    potentialParameter = proto.Field(proto.STRING, number=5)
    distenceParameter = proto.Field(proto.STRING, number=6)
    buffParameter = proto.Field(proto.STRING, number=7)
    suppressParameter = proto.Field(proto.STRING, number=8)
    beSuppressParameter = proto.Field(proto.STRING, number=9)
    moldParameter = proto.Field(proto.STRING, number=10)

class CameraData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    type = proto.Field(proto.INT32, number=3)
    prefab = proto.RepeatedField(proto.STRING, number=4)
    tacticReplace = proto.Field(proto.UINT32, number=5)
    batchTypeId = proto.Field(proto.UINT32, number=6)
    isTpsShootCamera = proto.Field(proto.UINT32, number=7)

class CampData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    icon = proto.Field(proto.STRING, number=3)
    des = proto.Field(LanguageStringData, number=4)

class CampFileData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    camp = proto.Field(proto.UINT32, number=2)
    number = proto.Field(proto.STRING, number=3)
    title = proto.Field(LanguageStringData, number=4)
    detailId = proto.Field(LanguageStringData, number=5)
    itemList = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    preFile = proto.RepeatedField(proto.UINT32, number=7)
    rewardList = proto.MapField(proto.UINT32, proto.UINT32, number=8)

class CashEnemiesData(proto.Message):
    enermyGroupId = proto.Field(proto.UINT32, number=1)
    enemyScore1 = proto.Field(proto.STRING, number=2)
    enemyScore2 = proto.Field(proto.STRING, number=3)
    enemyScore3 = proto.Field(proto.STRING, number=4)
    enemyScore4 = proto.Field(proto.STRING, number=5)
    enemyScore5 = proto.Field(proto.STRING, number=6)

class CashGradeByGradeGroupIdData(proto.Message):
    gradeGroupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class CashGradeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    gradeGroupId = proto.Field(proto.UINT32, number=2)
    gradeId = proto.Field(proto.UINT32, number=3)
    gradeIcon = proto.Field(proto.STRING, number=4)
    minScore = proto.Field(proto.UINT32, number=5)
    awardDropList = proto.RepeatedField(proto.UINT32, number=6)
    awardDropViewList = proto.MapField(proto.UINT32, proto.UINT32, number=7)
    autoOpen = proto.Field(proto.BOOL, number=8)

class CellEffectData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    effectResource = proto.Field(proto.STRING, number=2)
    cellName = proto.Field(proto.UINT32, number=3)
    cellDes = proto.Field(proto.UINT32, number=4)

class ChallengeConditionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    des = proto.Field(proto.STRING, number=2)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    conditionType = proto.Field(proto.UINT32, number=4)
    conditionNum = proto.Field(proto.UINT32, number=5)

class ChapterAvgCsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    num = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    chapterImg = proto.Field(proto.STRING, number=4)

class ChapterAvgData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    chapterImg = proto.Field(proto.STRING, number=2)
    name = proto.Field(LanguageStringData, number=3)
    detailId = proto.RepeatedField(proto.UINT32, number=4)
    num = proto.Field(proto.UINT32, number=5)

class ChapterByDifficultyGroupData(proto.Message):
    difficultyGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ChapterCgCsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    img = proto.Field(proto.STRING, number=3)
    stageId = proto.Field(proto.UINT32, number=4)
    text = proto.Field(LanguageStringData, number=5)

class ChapterCgData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    img = proto.Field(proto.STRING, number=3)
    unlock = proto.Field(proto.UINT32, number=4)

class ChapterData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    difficultyType = proto.Field(proto.UINT32, number=3)
    difficultyGroup = proto.Field(proto.UINT32, number=4)
    type = proto.Field(proto.UINT32, number=5)
    stageGroup = proto.Field(proto.UINT32, number=6)
    relation = proto.Field(proto.UINT32, number=7)
    notes = proto.Field(proto.UINT32, number=8)
    tab = proto.Field(proto.UINT32, number=9)
    o_NPNFFGANAFI = proto.Field(proto.UINT32, number=10)
    tabName = proto.Field(proto.STRING, number=11)
    planId = proto.Field(proto.UINT32, number=12)
    difficultyId = proto.Field(proto.UINT32, number=13)
    level = proto.Field(proto.UINT32, number=14)
    unlock = proto.RepeatedField(proto.UINT32, number=15)
    unlockHint = proto.Field(proto.STRING, number=16)
    chapterRewardValue = proto.RepeatedField(proto.UINT32, number=17)
    chapterReward1 = proto.MapField(proto.UINT32, proto.UINT32, number=18)
    chapterReward2 = proto.MapField(proto.UINT32, proto.UINT32, number=19)
    chapterReward3 = proto.MapField(proto.UINT32, proto.UINT32, number=20)
    preChapter = proto.RepeatedField(proto.UINT32, number=21)
    chapterDes = proto.Field(LanguageStringData, number=22)
    background = proto.Field(proto.STRING, number=23)
    mapBackground = proto.Field(proto.STRING, number=24)
    decoration = proto.Field(proto.STRING, number=25)
    effects = proto.Field(proto.STRING, number=26)
    chapterRewardShow = proto.MapField(proto.UINT32, proto.UINT32, number=27)
    chapterReward = proto.Field(proto.STRING, number=28)
    globalTab = proto.Field(proto.UINT32, number=29)

class ChapterDifftypeByDifficultyTypeData(proto.Message):
    difficultyType = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ChapterDifftypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    difficultyType = proto.Field(proto.UINT32, number=3)
    difficultyGroup = proto.Field(proto.UINT32, number=4)
    type = proto.Field(proto.UINT32, number=5)
    stageGroup = proto.Field(proto.UINT32, number=6)
    relation = proto.Field(proto.UINT32, number=7)
    notes = proto.Field(proto.UINT32, number=8)
    tab = proto.Field(proto.UINT32, number=9)
    tabName = proto.Field(proto.STRING, number=10)
    planId = proto.Field(proto.UINT32, number=11)
    difficultyId = proto.Field(proto.UINT32, number=12)
    level = proto.Field(proto.UINT32, number=13)
    unlock = proto.RepeatedField(proto.UINT32, number=14)
    unlockHint = proto.Field(proto.STRING, number=15)
    chapterRewardValue = proto.RepeatedField(proto.UINT32, number=16)
    chapterReward1 = proto.MapField(proto.UINT32, proto.UINT32, number=17)
    chapterReward2 = proto.MapField(proto.UINT32, proto.UINT32, number=18)
    chapterReward3 = proto.MapField(proto.UINT32, proto.UINT32, number=19)
    preChapter = proto.RepeatedField(proto.UINT32, number=20)
    chapterDes = proto.Field(LanguageStringData, number=21)
    background = proto.Field(proto.STRING, number=22)
    mapBackground = proto.Field(proto.STRING, number=23)
    decoration = proto.Field(proto.STRING, number=24)
    effects = proto.Field(proto.STRING, number=25)
    chapterRewardShow = proto.MapField(proto.UINT32, proto.UINT32, number=26)
    chapterReward = proto.Field(proto.STRING, number=27)
    globalTab = proto.Field(proto.UINT32, number=28)

class CharacterAvgByGunIdData(proto.Message):
    gunId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class CharacterAvgData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    gunId = proto.Field(proto.UINT32, number=3)
    name = proto.Field(proto.STRING, number=4)
    condition = proto.Field(proto.UINT32, number=5)
    jumpType = proto.Field(proto.UINT32, number=6)
    jumpDes = proto.Field(proto.STRING, number=7)
    text = proto.Field(proto.STRING, number=8)
    rewardType = proto.Field(proto.STRING, number=9)
    rewardNumber = proto.Field(proto.STRING, number=10)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=11)

class CharacterDailyByGunIdData(proto.Message):
    gunId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class CharacterDailyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    gunType = proto.Field(proto.UINT32, number=2)
    gunId = proto.Field(proto.UINT32, number=3)
    sort = proto.Field(proto.UINT32, number=4)
    title = proto.Field(LanguageStringData, number=5)
    condition = proto.Field(proto.UINT32, number=6)
    text = proto.Field(LanguageStringData, number=7)
    voice = proto.Field(proto.UINT32, number=8)
    reward = proto.Field(KvSortUintData, number=9)
    avg = proto.RepeatedField(proto.UINT32, number=10)

class CharacterVoiceData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    run = proto.Field(proto.UINT32, number=3)
    climb = proto.Field(proto.UINT32, number=4)
    cross = proto.Field(proto.UINT32, number=5)
    kill = proto.Field(proto.UINT32, number=6)
    reloadBullet = proto.Field(proto.UINT32, number=7)
    injured = proto.Field(proto.UINT32, number=8)
    death = proto.Field(proto.UINT32, number=9)

class ClothesData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    order = proto.Field(proto.INT32, number=2)
    clothesType = proto.Field(proto.UINT32, number=3)
    type = proto.Field(proto.INT32, number=4)
    modelId = proto.Field(proto.UINT32, number=5)
    code = proto.Field(proto.STRING, number=6)
    gunCode = proto.Field(proto.STRING, number=7)
    name = proto.Field(LanguageStringData, number=8)
    description = proto.Field(LanguageStringData, number=9)
    rare = proto.Field(proto.UINT32, number=10)
    unlockType = proto.Field(proto.UINT32, number=11)
    unlockArg = proto.Field(proto.UINT32, number=12)
    unlockDescription = proto.Field(LanguageStringData, number=13)
    switchAnim = proto.Field(proto.STRING, number=14)
    switchTimeline = proto.Field(proto.STRING, number=15)
    displayConfig = proto.Field(proto.UINT32, number=16)
    displayArg = proto.Field(proto.UINT32, number=17)
    gun = proto.Field(proto.UINT32, number=18)
    audioClothes = proto.Field(proto.UINT32, number=19)
    audioFoot = proto.Field(proto.UINT32, number=20)
    timelineAssets = proto.Field(proto.STRING, number=21)
    animAssets = proto.Field(proto.STRING, number=22)
    skillSuffix = proto.Field(proto.STRING, number=23)
    cameraReplaceId = proto.Field(proto.UINT32, number=24)
    ultraskillAssets = proto.Field(proto.STRING, number=25)
    dormanimAssets = proto.Field(proto.STRING, number=26)

class CodehintData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    chars = proto.Field(LanguageStringData, number=2)

class CollectionActivityBoxData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    args = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    args1 = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    icon = proto.Field(proto.STRING, number=5)

class CollectionActivityKeyByCaseIdData(proto.Message):
    caseId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class CollectionActivityKeyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    caseId = proto.Field(proto.UINT32, number=2)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    rewardPlus = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    conditionClass = proto.Field(proto.UINT32, number=5)
    conditionNum = proto.Field(proto.UINT32, number=6)
    conditionArg0 = proto.Field(proto.UINT32, number=7)

class CollectionItemByThemeIdData(proto.Message):
    themeId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class CollectionItemData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    themeId = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    position = proto.Field(proto.UINT32, number=4)

class CollectionRewardByGroupIdData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class CollectionRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    rewardItem = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    rewardCount = proto.Field(proto.UINT32, number=5)
    weight = proto.Field(proto.UINT32, number=6)

class CollectionThemeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    themeImage = proto.Field(proto.STRING, number=2)
    name = proto.Field(proto.STRING, number=3)
    themeDesc = proto.Field(proto.STRING, number=4)
    rewardGroup = proto.Field(proto.UINT32, number=5)
    maxReward = proto.Field(proto.UINT32, number=6)
    orderTime = proto.Field(proto.UINT32, number=7)
    orderNum = proto.Field(proto.UINT32, number=8)
    freshCd = proto.Field(proto.UINT32, number=9)
    functionDesc = proto.Field(proto.STRING, number=10)
    unlock = proto.Field(proto.UINT32, number=11)

class CombatSettingData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    hide = proto.Field(proto.UINT32, number=2)
    challengeHide = proto.Field(proto.UINT32, number=3)
    challengeName = proto.Field(LanguageStringData, number=4)
    enermyHide = proto.Field(proto.UINT32, number=5)
    enermyName = proto.Field(LanguageStringData, number=6)
    normalDropHide = proto.Field(proto.UINT32, number=7)
    normalDropName = proto.Field(LanguageStringData, number=8)
    specialDropHide = proto.Field(proto.UINT32, number=9)
    specialDropName = proto.Field(LanguageStringData, number=10)
    levelDesHidee = proto.Field(proto.UINT32, number=11)

class CommandBackgroundData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    pic = proto.Field(proto.STRING, number=4)
    bg = proto.Field(proto.STRING, number=5)
    unlock = proto.Field(proto.UINT32, number=6)
    args = proto.Field(proto.UINT32, number=7)
    des = proto.Field(LanguageStringData, number=8)
    timeline = proto.Field(proto.STRING, number=9)
    audioBgm = proto.Field(proto.UINT32, number=10)
    gunId = proto.Field(proto.UINT32, number=11)

class CommandHomepageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    type = proto.Field(proto.INT32, number=3)
    sort = proto.Field(proto.INT32, number=4)
    icon = proto.Field(proto.STRING, number=5)
    globalTab = proto.Field(proto.UINT32, number=6)

class CommandMenuData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    type = proto.Field(proto.INT32, number=3)
    sort = proto.Field(proto.INT32, number=4)
    icon = proto.Field(proto.STRING, number=5)
    jump = proto.Field(proto.UINT32, number=6)

class ControlAiData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    round = proto.Field(proto.UINT32, number=2)
    moveGrid = proto.Field(proto.UINT32, number=3)
    useSkill = proto.Field(proto.UINT32, number=4)
    skillPoint = proto.Field(proto.UINT32, number=5)

class ControlFightAutoByGroupIdData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ControlFightAutoData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    o_JPFIKFPICAP = proto.Field(KvSortUintData, number=3)
    o_DMBOHDGHOOE = proto.Field(proto.UINT32, number=4)
    o_LBAJPLDFFFN = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    level = proto.Field(proto.UINT32, number=6)
    name = proto.Field(proto.STRING, number=7)
    o_GKJFOHPJNBF = proto.Field(proto.STRING, number=8)

class ControlFightGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    o_NBMKCLPGOBG = proto.RepeatedField(proto.UINT32, number=2)

class ControlFightIndexData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    description = proto.Field(LanguageStringData, number=3)
    o_MJPHDAHBOCF = proto.Field(LanguageStringData, number=4)
    o_KKDEOJLOJJF = proto.Field(LanguageStringData, number=5)
    o_HHONMOLODNP = proto.Field(LanguageStringData, number=6)
    o_BIDHPNBINPP = proto.Field(LanguageStringData, number=7)
    startTime = proto.Field(proto.UINT32, number=8)
    unlockDetail = proto.MapField(proto.UINT32, proto.UINT32, number=9)
    type = proto.Field(proto.UINT32, number=10)
    o_GMHEBCBPOPB = proto.Field(proto.UINT32, number=11)
    o_HGIIMKABBOG = proto.Field(proto.UINT32, number=12)
    o_NDHKHDAGNNH = proto.Field(proto.UINT32, number=13)
    taskGroup = proto.Field(proto.UINT32, number=14)
    o_DEFLFDOFBHF = proto.Field(proto.UINT32, number=15)
    o_MJEJOBNMMCI = proto.RepeatedField(proto.UINT32, number=16)
    o_DCFMBNEDHBJ = proto.Field(proto.UINT32, number=17)
    o_HMOAPENEIIF = proto.Field(proto.UINT32, number=18)
    o_AMMGJGGENNK = proto.Field(proto.UINT32, number=19)
    o_FEHOIIONLPC = proto.Field(proto.UINT32, number=20)
    o_NIKNDMGMCBJ = proto.Field(proto.UINT32, number=21)
    o_CJANAADCNAG = proto.Field(proto.BOOL, number=22)
    canAuto = proto.Field(proto.BOOL, number=23)
    o_JECMAOPBCAB = proto.Field(proto.UINT32, number=24)
    o_NDKLKPCALPO = proto.Field(proto.BOOL, number=25)
    o_JIJDPAPLJFC = proto.Field(proto.UINT32, number=26)
    o_JDOHLBBFNCP = proto.Field(proto.UINT32, number=27)
    o_HGGKLOBLPMG = proto.Field(proto.UINT32, number=28)
    o_FFHIFOGMEIP = proto.Field(proto.BOOL, number=29)
    o_GCEJPOCGCNK = proto.Field(proto.BOOL, number=30)
    rank = proto.Field(proto.UINT32, number=31)

class ControlFightPointData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    o_DKAOGPPNGEM = proto.Field(proto.STRING, number=2)
    o_AFDPGNIEHAC = proto.Field(proto.STRING, number=3)
    o_MCELOGDEGFD = proto.Field(proto.STRING, number=4)
    o_EPFEILMNLFI = proto.Field(proto.STRING, number=5)
    o_BCEFNJHHDKF = proto.Field(proto.STRING, number=6)
    o_JNOHNOCFJIG = proto.Field(proto.STRING, number=7)
    o_GNHMFBIPPPH = proto.Field(proto.STRING, number=8)
    o_DPADMFCHDEB = proto.Field(proto.STRING, number=9)
    o_IMAMEPKFJMP = proto.Field(o_PointData, number=10)
    o_FPMPLGPCNNP = proto.Field(o_PointData, number=11)
    o_LEOPBJDHIMP = proto.Field(o_PointData, number=12)
    o_KHCLLPDPLMD = proto.Field(o_PointData, number=13)
    o_JBJLPMMJJMD = proto.Field(o_PointData, number=14)
    o_LMCAHPHEHLJ = proto.Field(o_PointData, number=15)
    o_JGGGKAIFCFH = proto.Field(o_PointData, number=16)
    o_OODCKJEFLIP = proto.Field(o_PointData, number=17)

class ControlFightProgressByGroupIdData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ControlFightProgressData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    progressReward = proto.Field(KvSortUintData, number=3)
    point = proto.Field(proto.UINT32, number=4)

class ControlFightSubStageByGroupData(proto.Message):
    group = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ControlFightSubStageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    stageId = proto.Field(proto.UINT32, number=3)
    o_HMJOGHLAMHP = proto.RepeatedField(proto.UINT32, number=4)
    o_EKGIOMIPJFG = proto.RepeatedField(proto.UINT32, number=5)
    o_PPCLPIGIEDG = proto.RepeatedField(proto.UINT32, number=6)
    o_CLLOOIHLPKB = proto.Field(proto.UINT32, number=7)
    o_PLBGPCHBKGB = proto.RepeatedField(proto.UINT32, number=8)
    o_PFJGMOKMGCI = proto.Field(proto.UINT32, number=9)
    o_JODHDFMANLK = proto.RepeatedField(proto.UINT32, number=10)
    o_FHDEGGLEOKD = proto.RepeatedField(proto.UINT32, number=11)

class ControlFightTaskByGroupIdData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ControlFightTaskData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    description = proto.Field(LanguageStringData, number=4)
    rewardList = proto.Field(KvSortUintData, number=5)
    rewardPoint = proto.Field(proto.UINT32, number=6)
    conditionNum = proto.Field(proto.UINT32, number=7)
    conditionClass = proto.Field(proto.UINT32, number=8)
    conditionArg1 = proto.Field(proto.INT32, number=9)
    conditionArg2 = proto.Field(proto.INT32, number=10)
    conditionArg3 = proto.Field(proto.INT32, number=11)

class CostData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    costMina = proto.Field(proto.UINT32, number=2)
    costItem = proto.Field(proto.UINT32, number=3)
    extraItem = proto.Field(proto.UINT32, number=4)

class CostumeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    costumeType = proto.Field(proto.INT32, number=3)
    sequence = proto.Field(proto.INT32, number=4)
    icon = proto.Field(proto.STRING, number=5)
    name = proto.Field(LanguageStringData, number=6)
    description = proto.Field(LanguageStringData, number=7)
    modelConfigId = proto.Field(proto.UINT32, number=8)

class CoverConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    coverName = proto.Field(proto.STRING, number=2)
    coverInfo = proto.Field(proto.STRING, number=3)
    showCoverType = proto.Field(proto.STRING, number=4)
    canShowCoverInfo = proto.Field(proto.STRING, number=5)
    propertyId = proto.Field(proto.UINT32, number=6)
    coverHeightArray = proto.RepeatedField(proto.DOUBLE, number=7)
    coverDodgeRateArray = proto.RepeatedField(proto.INT32, number=8)
    coverDamdecrRateArray = proto.RepeatedField(proto.INT32, number=9)
    coverDamageReduceRateArray = proto.RepeatedField(proto.INT32, number=10)
    damageReduceShow = proto.Field(proto.STRING, number=11)
    crossCodeArray = proto.RepeatedField(proto.UINT32, number=12)
    isDestroy = proto.Field(proto.INT32, number=13)
    initialDodgeRateFix = proto.RepeatedField(proto.INT32, number=14)
    destroyedDodgeRateFix = proto.RepeatedField(proto.INT32, number=15)
    stillEffect = proto.Field(proto.BOOL, number=16)
    coverType = proto.RepeatedField(proto.INT32, number=17)
    blockIdletype = proto.RepeatedField(proto.INT32, number=18)
    passiveBlocktype = proto.RepeatedField(proto.INT32, number=19)
    isLean = proto.RepeatedField(proto.BOOL, number=20)
    countDestroy = proto.Field(proto.UINT32, number=21)
    destroySkill = proto.Field(proto.STRING, number=22)
    responseSkill = proto.Field(proto.STRING, number=23)
    responseSkillLimits = proto.Field(proto.UINT32, number=24)
    isNullcover = proto.Field(proto.UINT32, number=25)
    shapeIcon = proto.Field(proto.STRING, number=26)
    cameraDuration = proto.Field(proto.INT32, number=27)

class CustomcameraData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    movePrefab = proto.Field(proto.STRING, number=2)
    climbupPrefab = proto.Field(proto.STRING, number=3)
    climbdownPrefab = proto.Field(proto.STRING, number=4)
    climbdownReversePrefab = proto.Field(proto.STRING, number=5)
    movewskillleftPrefab = proto.Field(proto.STRING, number=6)
    movewskillrightPrefab = proto.Field(proto.STRING, number=7)
    overcoverPrefab = proto.Field(proto.STRING, number=8)
    runstopPrefab = proto.Field(proto.STRING, number=9)
    preaimPrefab = proto.Field(proto.STRING, number=10)

class DailyCheckinData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    day1 = proto.Field(proto.UINT32, number=2)
    day2 = proto.Field(proto.UINT32, number=3)
    day3 = proto.Field(proto.UINT32, number=4)
    day4 = proto.Field(proto.UINT32, number=5)
    day5 = proto.Field(proto.UINT32, number=6)
    day6 = proto.Field(proto.UINT32, number=7)
    day7 = proto.Field(proto.UINT32, number=8)
    day8 = proto.Field(proto.UINT32, number=9)
    day9 = proto.Field(proto.UINT32, number=10)
    day10 = proto.Field(proto.UINT32, number=11)
    day11 = proto.Field(proto.UINT32, number=12)
    day12 = proto.Field(proto.UINT32, number=13)
    day13 = proto.Field(proto.UINT32, number=14)
    day14 = proto.Field(proto.UINT32, number=15)
    day15 = proto.Field(proto.UINT32, number=16)
    day16 = proto.Field(proto.UINT32, number=17)
    day17 = proto.Field(proto.UINT32, number=18)
    day18 = proto.Field(proto.UINT32, number=19)
    day19 = proto.Field(proto.UINT32, number=20)
    day20 = proto.Field(proto.UINT32, number=21)
    day21 = proto.Field(proto.UINT32, number=22)
    day22 = proto.Field(proto.UINT32, number=23)
    day23 = proto.Field(proto.UINT32, number=24)
    day24 = proto.Field(proto.UINT32, number=25)
    day25 = proto.Field(proto.UINT32, number=26)
    day26 = proto.Field(proto.UINT32, number=27)
    day27 = proto.Field(proto.UINT32, number=28)
    day28 = proto.Field(proto.UINT32, number=29)
    days = proto.RepeatedField(proto.UINT32, number=30)

class DailyQuestData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    behaviorType = proto.Field(proto.UINT32, number=3)
    behaviorParameter = proto.Field(proto.STRING, number=4)
    rewardList = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    preQuest = proto.Field(proto.UINT32, number=6)
    link = proto.Field(proto.STRING, number=7)
    name = proto.Field(LanguageStringData, number=8)
    description = proto.Field(LanguageStringData, number=9)
    conditionClass = proto.Field(proto.UINT32, number=10)
    conditionNum = proto.Field(proto.UINT32, number=11)
    unlockOn = proto.Field(proto.UINT32, number=12)
    unlockOff = proto.Field(proto.UINT32, number=13)

class DailyRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    value = proto.Field(proto.UINT32, number=2)
    rewardList = proto.MapField(proto.UINT32, proto.UINT32, number=3)

class DailyRewardGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    unlock = proto.Field(proto.UINT32, number=2)
    rewardList = proto.RepeatedField(proto.UINT32, number=3)

class DarkTutorialGroupByTimingData(proto.Message):
    timing = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class DarkTutorialGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    condition = proto.RepeatedField(proto.UINT32, number=2)
    clientCondition = proto.RepeatedField(proto.UINT32, number=3)
    priority = proto.Field(proto.UINT32, number=4)
    timing = proto.Field(proto.UINT32, number=5)
    finishCondition = proto.Field(proto.UINT32, number=6)
    finishGroup = proto.RepeatedField(proto.UINT32, number=7)
    isPause = proto.Field(proto.BOOL, number=8)
    isWasdBanned = proto.Field(proto.BOOL, number=9)

class DarkTutorialPageByGroupData(proto.Message):
    group = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class DarkTutorialPageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    pageType = proto.Field(proto.INT32, number=2)
    pageParam = proto.Field(proto.STRING, number=3)
    group = proto.Field(proto.UINT32, number=4)
    canSkip = proto.Field(proto.BOOL, number=5)
    giveItem = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    delay = proto.Field(proto.DOUBLE, number=7)
    nextPageDelay = proto.Field(proto.DOUBLE, number=8)
    finishPage = proto.Field(proto.INT32, number=9)
    name = proto.Field(proto.STRING, number=10)
    avatar = proto.Field(proto.STRING, number=11)
    avatarFemale = proto.Field(proto.STRING, number=12)
    textPosition = proto.Field(proto.STRING, number=13)
    text = proto.Field(LanguageStringData, number=14)
    nextPageTriggerTypeId = proto.Field(proto.INT32, number=15)
    nextPageTriggerParam = proto.Field(proto.UINT32, number=16)
    clickAreaPosition = proto.RepeatedField(proto.STRING, number=17)
    clickMask = proto.Field(proto.BOOL, number=18)
    maskControl = proto.Field(proto.BOOL, number=19)
    clickAreaSize = proto.RepeatedField(proto.UINT32, number=20)
    clickAreaEffectType = proto.Field(proto.UINT32, number=21)
    clickAreaEffectRate = proto.Field(proto.UINT32, number=22)
    tutorialCameraParam = proto.Field(proto.INT32, number=23)

class DarkTutorialTimingData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    typeParam1 = proto.Field(proto.STRING, number=3)
    typeParam2 = proto.Field(proto.STRING, number=4)
    typeParam3 = proto.Field(proto.STRING, number=5)
    typeParam4 = proto.Field(proto.STRING, number=6)
    triggerUi = proto.Field(proto.UINT32, number=7)

class DarkzoneAiParameterData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    aiParameter = proto.Field(proto.UINT32, number=2)
    patrolSpeed = proto.Field(proto.UINT32, number=3)
    visionAngle = proto.Field(proto.UINT32, number=4)
    subVisionAngle = proto.Field(proto.UINT32, number=5)
    visionRange = proto.Field(proto.UINT32, number=6)
    subVisionRange = proto.Field(proto.UINT32, number=7)
    gazeTime = proto.Field(proto.UINT32, number=8)
    gazeClear = proto.Field(proto.UINT32, number=9)
    gazeDown = proto.Field(proto.UINT32, number=10)
    aggroTime = proto.Field(proto.UINT32, number=11)
    aggroClear = proto.Field(proto.UINT32, number=12)
    aggroDown = proto.Field(proto.UINT32, number=13)
    chaseRange = proto.Field(proto.UINT32, number=14)
    chaseSpeed = proto.Field(proto.UINT32, number=15)
    maxChaseTime = proto.Field(proto.UINT32, number=16)
    backSpeed = proto.Field(proto.UINT32, number=17)
    atkRange = proto.Field(proto.UINT32, number=18)
    botSearchidle = proto.Field(proto.UINT32, number=19)
    aiFrame = proto.Field(proto.UINT32, number=20)
    darkzoneEnemyMaxWarn = proto.Field(proto.UINT32, number=21)
    darkzoneVisualDay = proto.Field(proto.UINT32, number=22)
    darkzoneVisualAngle = proto.Field(proto.UINT32, number=23)

class DarkzoneAirDropData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    model = proto.Field(proto.STRING, number=2)
    quality = proto.Field(proto.UINT32, number=3)

class DarkzoneBaseData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    heroId = proto.Field(proto.INT32, number=2)
    storehouseUnlock = proto.RepeatedField(proto.STRING, number=3)
    darkzoneChequer = proto.Field(proto.INT32, number=4)
    darkzoneSpeedAttack = proto.Field(proto.INT32, number=5)
    darkzoneRange = proto.Field(proto.INT32, number=6)
    darkzoneVisualDay = proto.Field(proto.INT32, number=7)
    darkzoneMaxStrength = proto.Field(proto.INT32, number=8)
    darkzoneSpeedNormal = proto.Field(proto.INT32, number=9)
    darkzoneVisualNight = proto.Field(proto.INT32, number=10)
    darkzoneCure = proto.Field(proto.INT32, number=11)
    darkzoneStrengthRecover = proto.Field(proto.INT32, number=12)
    darkzonePickingRegion = proto.Field(proto.INT32, number=13)
    darkzoneBoxOpentimeReducePercentage = proto.Field(proto.INT32, number=14)
    darkzoneBoxOpentimeReduceValue = proto.Field(proto.INT32, number=15)

class DarkzoneCameraFogData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    colour = proto.RepeatedField(proto.DOUBLE, number=2)

class DarkzoneCameraMouldData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    focus = proto.Field(proto.UINT32, number=2)
    length = proto.Field(proto.INT32, number=3)
    range = proto.Field(proto.INT32, number=4)
    canStack = proto.Field(proto.UINT32, number=5)
    priority = proto.Field(proto.UINT32, number=6)

class DarkzoneCampData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    campEnglishName = proto.Field(proto.STRING, number=2)
    monsterFire = proto.Field(proto.BOOL, number=3)
    playerFire = proto.Field(proto.BOOL, number=4)

class DarkzoneCarPropertyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    riseTemp = proto.RepeatedField(proto.INT32, number=2)
    declineTemp = proto.RepeatedField(proto.INT32, number=3)
    maxHp = proto.RepeatedField(proto.INT32, number=4)
    birthHp = proto.RepeatedField(proto.INT32, number=5)
    recoverHp = proto.RepeatedField(proto.INT32, number=6)
    battleLost = proto.RepeatedField(proto.INT32, number=7)
    bleedNum = proto.RepeatedField(proto.INT32, number=8)
    odBleedNum = proto.RepeatedField(proto.INT32, number=9)

class DarkzoneCarStateData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    switchControl = proto.Field(proto.INT32, number=2)

class DarkzoneClientConditionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    param1 = proto.Field(proto.STRING, number=3)
    param2 = proto.Field(proto.STRING, number=4)

class DarkzoneDutyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    questName = proto.Field(proto.STRING, number=3)
    change = proto.Field(proto.UINT32, number=4)
    season = proto.Field(proto.UINT32, number=5)

class DarkzoneEnemyRandomData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rankAdjust = proto.RepeatedField(proto.STRING, number=2)
    enemyGroup = proto.RepeatedField(proto.UINT32, number=3)

class DarkzoneEnemygroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    monsterType = proto.Field(proto.INT32, number=3)
    lv = proto.Field(proto.UINT32, number=4)
    exLv = proto.Field(proto.UINT32, number=5)
    model = proto.Field(proto.UINT32, number=6)
    broadcast = proto.Field(proto.BOOL, number=7)
    content = proto.Field(LanguageStringData, number=8)
    icon = proto.Field(proto.STRING, number=9)
    enemyinfo = proto.RepeatedField(proto.UINT32, number=10)
    stageid = proto.Field(proto.UINT32, number=11)
    enemylv = proto.RepeatedField(proto.UINT32, number=12)
    sort = proto.Field(proto.UINT32, number=13)
    time = proto.Field(proto.UINT32, number=14)
    loot = proto.RepeatedField(proto.UINT32, number=15)
    darkzoneAIId = proto.Field(proto.UINT32, number=16)
    darkzonePow = proto.Field(proto.STRING, number=17)
    roundCountdown = proto.Field(proto.UINT32, number=18)
    timeCountdown = proto.Field(proto.UINT32, number=19)
    roundSplit = proto.Field(proto.UINT32, number=20)
    presetTimeCountdown = proto.Field(proto.UINT32, number=21)
    slgRefresh = proto.Field(proto.UINT32, number=22)
    enemyOpenfireDrop = proto.MapField(proto.UINT32, proto.UINT32, number=23)
    stageConfig = proto.Field(proto.UINT32, number=24)
    darkzoneEscortConfig = proto.Field(proto.UINT32, number=25)
    modelConfig = proto.Field(proto.UINT32, number=26)
    modification = proto.Field(proto.UINT32, number=27)
    camp = proto.Field(proto.UINT32, number=28)

class DarkzoneEquipAffixEffectData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    effect = proto.Field(proto.STRING, number=2)
    buffBaseType = proto.Field(proto.INT32, number=3)
    upperLimit = proto.Field(proto.INT32, number=4)
    lowerLimit = proto.Field(proto.INT32, number=5)
    limit = proto.RepeatedField(proto.INT32, number=6)

class DarkzoneEquipData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    buffLimits = proto.Field(proto.UINT32, number=2)
    buffLimitsProperty = proto.RepeatedField(proto.UINT32, number=3)
    buffType = proto.Field(proto.UINT32, number=4)
    buffBaseAffix = proto.Field(proto.UINT32, number=5)
    buffSubAffix = proto.RepeatedField(proto.UINT32, number=6)
    lv = proto.RepeatedField(proto.UINT32, number=7)
    battleSkillCe = proto.Field(proto.UINT32, number=8)

class DarkzoneEscortConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    maxHp = proto.Field(proto.UINT32, number=2)
    birthHp = proto.Field(proto.UINT32, number=3)
    recoverHp = proto.Field(proto.INT32, number=4)
    speed = proto.Field(proto.UINT32, number=5)
    moveRespond = proto.Field(proto.INT32, number=6)
    lostTime = proto.Field(proto.INT32, number=7)
    lostAlarm = proto.Field(proto.INT32, number=8)
    lostExchange = proto.Field(proto.INT32, number=9)
    tempControl = proto.Field(proto.BOOL, number=10)
    switchControl = proto.Field(proto.BOOL, number=11)
    maxTemp = proto.Field(proto.UINT32, number=12)
    birthTemp = proto.Field(proto.INT32, number=13)
    riseTemp = proto.Field(proto.INT32, number=14)
    declineTemp = proto.Field(proto.INT32, number=15)
    tempRate = proto.RepeatedField(proto.INT32, number=16)
    bleedTurn = proto.RepeatedField(proto.INT32, number=17)
    odBleedTurn = proto.RepeatedField(proto.INT32, number=18)
    bleedNum = proto.RepeatedField(proto.INT32, number=19)
    odBleedNum = proto.RepeatedField(proto.INT32, number=20)
    battleLost = proto.Field(proto.INT32, number=21)
    isRevert = proto.Field(proto.BOOL, number=22)
    revertTempRise = proto.Field(proto.INT32, number=23)
    revertSpeed = proto.Field(proto.INT32, number=24)
    odRelieveTemp = proto.Field(proto.INT32, number=25)
    isRoomBattle = proto.Field(proto.BOOL, number=26)
    carrierDebuff = proto.Field(proto.UINT32, number=27)

class DarkzoneEventData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    desc = proto.Field(LanguageStringData, number=3)

class DarkzoneHeroBaseData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    dzBattleSkill = proto.Field(proto.UINT32, number=2)
    darkzoneCriticalRange = proto.RepeatedField(proto.UINT32, number=3)
    darkzoneCriticalEffect = proto.Field(proto.UINT32, number=4)
    darkzonePotential = proto.Field(proto.INT32, number=5)
    criticalRate = proto.Field(proto.INT32, number=6)
    suppressDamage = proto.Field(proto.INT32, number=7)
    cameraRange = proto.Field(proto.UINT32, number=8)
    cameraLength = proto.Field(proto.UINT32, number=9)
    aimCameraRange = proto.Field(proto.UINT32, number=10)
    aimCameraLength = proto.Field(proto.UINT32, number=11)

class DarkzoneItemRuleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    settleMethod = proto.Field(proto.INT32, number=2)
    itemToProperty = proto.MapField(proto.INT32, proto.INT32, number=3)
    destroy = proto.Field(proto.INT32, number=4)
    isAutoPickItem = proto.Field(proto.BOOL, number=5)
    propertyObject = proto.Field(proto.INT32, number=6)

class DarkzoneLevelData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    value = proto.Field(proto.INT32, number=2)
    damageAdjust = proto.Field(proto.INT32, number=3)

class DarkzoneMapLinkData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    scene = proto.Field(proto.STRING, number=2)

class DarkzoneMapRoomTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    buff = proto.Field(proto.UINT32, number=2)
    forceBattle = proto.Field(proto.UINT32, number=3)
    airdrop = proto.Field(proto.UINT32, number=4)
    isRelyOn = proto.Field(proto.BOOL, number=5)
    isFire = proto.Field(proto.BOOL, number=6)

class DarkzoneMapRoomV2Data(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    collider = proto.Field(proto.STRING, number=2)
    scene = proto.Field(proto.STRING, number=3)

class DarkzoneMapStructureV2Data(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    scene = proto.Field(proto.STRING, number=2)
    collider = proto.Field(proto.STRING, number=3)
    position = proto.Field(proto.STRING, number=4)
    roomsize = proto.Field(proto.STRING, number=5)

class DarkzoneMapV2Data(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    structureId = proto.Field(proto.UINT32, number=3)
    weather = proto.Field(proto.UINT32, number=4)
    roomIdList = proto.Field(proto.STRING, number=5)
    roomTypeList = proto.RepeatedField(proto.UINT32, number=6)
    darkzoneEnemies = proto.RepeatedField(proto.STRING, number=7)
    modificationList = proto.RepeatedField(proto.INT32, number=8)
    initialEvent = proto.Field(proto.UINT32, number=9)
    stageBgm = proto.Field(proto.UINT32, number=10)
    minimapId = proto.Field(proto.UINT32, number=11)
    slgRefreshMonster = proto.MapField(proto.UINT32, proto.UINT32, number=12)
    timeLimit = proto.Field(proto.UINT32, number=13)
    birthData = proto.Field(proto.STRING, number=14)
    interactData = proto.RepeatedField(proto.UINT32, number=15)
    targetGroupId = proto.RepeatedField(proto.UINT32, number=16)
    refreshData = proto.RepeatedField(proto.UINT32, number=17)
    grassData = proto.RepeatedField(proto.UINT32, number=18)
    difficultParam = proto.Field(proto.UINT32, number=19)
    noticeGroupId = proto.Field(proto.UINT32, number=20)
    enterDarkBgm = proto.Field(proto.UINT32, number=21)
    leftTimeBgm = proto.Field(proto.UINT32, number=22)
    cartpointStart = proto.Field(proto.UINT32, number=23)
    cartpointId = proto.Field(proto.UINT32, number=24)

class DarkzoneMinimapIconData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    icon = proto.Field(proto.STRING, number=2)
    iconName = proto.Field(LanguageStringData, number=3)
    iconVisible = proto.Field(proto.BOOL, number=4)
    iconAbovefog = proto.Field(proto.BOOL, number=5)
    iconVisiableZoom = proto.RepeatedField(proto.UINT32, number=6)
    iconDesc = proto.Field(LanguageStringData, number=7)
    iconSort = proto.Field(proto.UINT32, number=8)

class DarkzoneMinimapV2Data(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    background = proto.Field(proto.STRING, number=2)
    darkzoneMapOffset = proto.RepeatedField(proto.DOUBLE, number=3)
    darkzoneMapScale = proto.Field(proto.DOUBLE, number=4)
    darkzoneMapZoomBenchmarkMax = proto.Field(proto.UINT32, number=5)
    darkzoneMapZoomBenchmarkMin = proto.Field(proto.UINT32, number=6)
    darkzoneMapZoomLimit = proto.RepeatedField(proto.UINT32, number=7)
    darkzoneFogStartPos = proto.RepeatedField(proto.DOUBLE, number=8)
    darkzoneFogEndPos = proto.RepeatedField(proto.DOUBLE, number=9)

class DarkzoneNpcData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    npcDesc = proto.Field(LanguageStringData, number=3)
    type = proto.Field(proto.UINT32, number=4)
    favorItem = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    unlock = proto.Field(proto.INT32, number=6)
    unlockParameter1 = proto.Field(proto.UINT32, number=7)
    unlockParameter2 = proto.Field(proto.UINT32, number=8)
    unlockDescribe = proto.Field(LanguageStringData, number=9)
    npcSort = proto.Field(proto.UINT32, number=10)
    npcImg = proto.Field(proto.STRING, number=11)
    npcHeadImg = proto.Field(proto.STRING, number=12)

class DarkzoneNpcParameterData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    npcId = proto.Field(proto.UINT32, number=2)
    favorLevel = proto.Field(proto.UINT32, number=3)
    needFavorPoint = proto.Field(proto.UINT32, number=4)
    discount = proto.Field(proto.UINT32, number=5)
    favorEffect = proto.Field(LanguageStringData, number=6)
    npcStory = proto.Field(LanguageStringData, number=7)

class DarkzonePropertyDescData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    minimumEffective = proto.Field(proto.INT32, number=2)
    maximumEffect = proto.Field(proto.INT32, number=3)

class DarkzoneQuestBundleData(proto.Message):
    questGroup = proto.Field(proto.UINT32, number=1)
    questNeedLv = proto.Field(proto.UINT32, number=2)
    questSeriesId = proto.RepeatedField(proto.UINT32, number=3)
    afterGroupQuest = proto.Field(proto.UINT32, number=4)
    name = proto.Field(LanguageStringData, number=5)

class DarkzoneQuestContentData(proto.Message):
    targetId = proto.Field(proto.UINT32, number=1)
    targetName = proto.Field(LanguageStringData, number=2)
    targetType = proto.Field(proto.UINT32, number=3)
    targetArgs = proto.MapField(proto.UINT32, proto.INT32, number=4)

class DarkzoneQuestData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    eventStart = proto.RepeatedField(proto.UINT32, number=2)
    eventRandom = proto.RepeatedField(proto.UINT32, number=3)
    questName = proto.Field(LanguageStringData, number=4)
    questDesc = proto.Field(LanguageStringData, number=5)
    questStructSceneId = proto.Field(proto.UINT32, number=6)
    questLevel = proto.Field(proto.UINT32, number=7)
    questRewardshow = proto.Field(proto.UINT32, number=8)
    questRewarddetailshow = proto.MapField(proto.UINT32, proto.UINT32, number=9)
    questReward = proto.MapField(proto.UINT32, proto.UINT32, number=10)
    questCost = proto.MapField(proto.UINT32, proto.UINT32, number=11)
    questType = proto.Field(proto.UINT32, number=12)
    questTarget = proto.Field(LanguageStringData, number=13)
    questPic = proto.Field(proto.STRING, number=14)
    questMap = proto.RepeatedField(proto.UINT32, number=15)
    questReturn = proto.MapField(proto.UINT32, proto.UINT32, number=16)
    questMapmark = proto.RepeatedField(proto.STRING, number=17)
    targetenemyShow = proto.Field(proto.STRING, number=18)
    dzMode = proto.Field(proto.UINT32, number=19)
    equipLoss = proto.Field(proto.BOOL, number=20)
    battleOverRecovery = proto.Field(proto.BOOL, number=21)
    targetGroupId = proto.RepeatedField(proto.UINT32, number=22)

class DarkzoneQuestGroupData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    groupType = proto.Field(proto.INT32, number=2)
    groupName = proto.Field(LanguageStringData, number=3)
    groupIcon = proto.Field(proto.STRING, number=4)
    unlockType = proto.Field(proto.INT32, number=5)
    unlockArgs = proto.RepeatedField(proto.UINT32, number=6)
    npcId = proto.Field(proto.UINT32, number=7)
    firstStep = proto.Field(proto.UINT32, number=8)
    branchNum = proto.Field(proto.UINT32, number=9)

class DarkzoneQuestStepData(proto.Message):
    stepId = proto.Field(proto.UINT32, number=1)
    stepDesc = proto.Field(LanguageStringData, number=2)
    stepReward = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    favorChange = proto.MapField(proto.UINT32, proto.INT32, number=4)
    andTaget = proto.RepeatedField(proto.UINT32, number=5)
    orTarget = proto.RepeatedField(proto.UINT32, number=6)
    nextStepId = proto.Field(proto.UINT32, number=7)

class DarkzoneQuestTargetData(proto.Message):
    targetId = proto.Field(proto.UINT32, number=1)
    targetName = proto.Field(LanguageStringData, number=2)
    guideType = proto.Field(proto.UINT32, number=3)
    questType = proto.Field(proto.INT32, number=4)
    questNum = proto.Field(proto.UINT32, number=5)
    questArgs = proto.RepeatedField(proto.UINT32, number=6)
    branchArgs = proto.Field(proto.UINT32, number=7)
    editorTag = proto.Field(proto.UINT32, number=8)
    primeQuest = proto.Field(proto.BOOL, number=9)

class DarkzoneQuestTargetGroupData(proto.Message):
    targetGroupId = proto.Field(proto.UINT32, number=1)
    targetGroupDesc = proto.Field(LanguageStringData, number=2)
    targetList = proto.RepeatedField(proto.UINT32, number=3)

class DarkzoneRepositoryCategoryData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    title = proto.Field(LanguageStringData, number=2)
    titleEn = proto.Field(LanguageStringData, number=3)
    icon = proto.Field(proto.STRING, number=4)
    itemType = proto.RepeatedField(proto.UINT32, number=5)

class DarkzoneRepositoryTagData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sequence = proto.Field(proto.UINT32, number=2)
    title = proto.Field(LanguageStringData, number=3)
    toptag = proto.RepeatedField(proto.UINT32, number=4)

class DarkzoneResultData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    random = proto.Field(proto.INT32, number=3)
    resultRate = proto.Field(proto.UINT32, number=4)
    arg1 = proto.Field(proto.INT32, number=5)
    arg2 = proto.Field(proto.INT32, number=6)
    arg3 = proto.Field(proto.INT32, number=7)
    arg4 = proto.Field(proto.INT32, number=8)
    arg5 = proto.Field(proto.INT32, number=9)
    arg6 = proto.Field(proto.INT32, number=10)
    arg7 = proto.Field(proto.INT32, number=11)
    arg8 = proto.Field(proto.INT32, number=12)
    arg9 = proto.Field(proto.INT32, number=13)
    target = proto.RepeatedField(proto.INT32, number=14)

class DarkzoneRoadTutorialData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.STRING, number=2)

class DarkzoneRoomNoticeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    targetParam = proto.MapField(proto.UINT32, proto.INT32, number=3)
    text = proto.Field(LanguageStringData, number=4)

class DarkzoneRoomNoticeGroupData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)
    icon = proto.Field(proto.STRING, number=3)
    text = proto.Field(LanguageStringData, number=4)

class DarkzoneSeasonData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    icon = proto.Field(proto.STRING, number=3)
    goods = proto.RepeatedField(proto.UINT32, number=4)
    questBundle = proto.RepeatedField(proto.UINT32, number=5)
    exploreUnlock = proto.Field(proto.UINT32, number=6)
    exploreUnlockDes = proto.Field(proto.STRING, number=7)
    endlessUnlock = proto.Field(proto.UINT32, number=8)
    endlessUnlockDes = proto.Field(proto.STRING, number=9)
    exploreAreaUnlock = proto.RepeatedField(proto.UINT32, number=10)
    mothlyImg = proto.Field(proto.STRING, number=11)
    seasonReset = proto.Field(proto.BOOL, number=12)

class DarkzoneSeasonMothlyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    sort = proto.Field(proto.UINT32, number=3)
    text = proto.Field(LanguageStringData, number=4)
    nextId = proto.Field(proto.UINT32, number=5)
    hindId = proto.Field(proto.UINT32, number=6)

class DarkzoneSeasonMothlyscoreData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    text = proto.Field(proto.STRING, number=2)
    min = proto.Field(proto.UINT32, number=3)
    max = proto.Field(proto.UINT32, number=4)

class DarkzoneSeasonMothlyscoreruleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    score = proto.Field(proto.UINT32, number=2)

class DarkzoneSeasonQuestBySeasonData(proto.Message):
    season = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class DarkzoneSeasonQuestData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    season = proto.Field(proto.UINT32, number=3)
    name = proto.Field(LanguageStringData, number=4)
    description = proto.Field(LanguageStringData, number=5)
    conditionClass = proto.Field(proto.UINT32, number=6)
    conditionNum = proto.Field(proto.UINT32, number=7)
    rewardList = proto.Field(KvSortUintData, number=8)
    unlockOn = proto.Field(proto.UINT32, number=9)
    unlockOff = proto.Field(proto.UINT32, number=10)
    change = proto.Field(proto.UINT32, number=11)

class DarkzoneSeasonQuestTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(LanguageStringData, number=2)

class DarkzoneSentinelEffectData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    effect = proto.Field(proto.STRING, number=2)

class DarkzoneSentinelInfluenceData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    level = proto.Field(proto.INT32, number=2)
    propertyShow = proto.RepeatedField(proto.UINT32, number=3)
    propertyId = proto.RepeatedField(proto.UINT32, number=4)
    propertyChange = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    group = proto.Field(proto.INT32, number=6)
    effectLevel = proto.Field(proto.INT32, number=7)

class DarkzoneSentinelLevelData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    warnRange = proto.RepeatedField(proto.INT32, number=2)
    effectLevel = proto.Field(proto.INT32, number=3)
    enemyWarnMin = proto.Field(proto.INT32, number=4)
    isWarnState = proto.Field(proto.UINT32, number=5)
    addBuff = proto.RepeatedField(proto.UINT32, number=6)
    hint = proto.RepeatedField(proto.UINT32, number=7)

class DarkzoneSeriesQuestData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    questGroup = proto.Field(proto.UINT32, number=2)
    inGroupId = proto.RepeatedField(proto.UINT32, number=3)
    afterGroupQuest = proto.Field(proto.UINT32, number=4)
    questNeedLv = proto.Field(proto.UINT32, number=5)

class DarkzoneSeriesQuestTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    icon = proto.Field(proto.STRING, number=2)
    name = proto.Field(LanguageStringData, number=3)
    englishName = proto.Field(proto.STRING, number=4)

class DarkzoneSlgRefreshData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    roundType = proto.Field(proto.INT32, number=2)
    roundTime = proto.Field(proto.INT32, number=3)
    positionType = proto.Field(proto.INT32, number=4)
    monsterType = proto.Field(proto.INT32, number=5)
    monsterData = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    successEvent = proto.Field(proto.INT32, number=7)
    failEvent = proto.Field(proto.INT32, number=8)
    roundCamp = proto.Field(proto.INT32, number=9)
    roundTrigger = proto.Field(proto.INT32, number=10)

class DarkzoneSystemEndlessData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    dzMode = proto.Field(proto.UINT32, number=2)
    map = proto.Field(proto.UINT32, number=3)
    raidUnlock = proto.RepeatedField(proto.UINT32, number=4)
    raidUnlockDes = proto.Field(LanguageStringData, number=5)
    quest = proto.Field(LanguageStringData, number=6)
    questDes = proto.Field(LanguageStringData, number=7)
    icon = proto.Field(proto.STRING, number=8)
    useItem = proto.MapField(proto.UINT32, proto.UINT32, number=9)
    unlock = proto.RepeatedField(proto.UINT32, number=10)
    unlock2 = proto.MapField(proto.UINT32, proto.UINT32, number=11)
    unlockDes = proto.Field(LanguageStringData, number=12)
    unlockDes2 = proto.Field(LanguageStringData, number=13)
    level = proto.Field(proto.STRING, number=14)
    limitTime = proto.Field(proto.UINT32, number=15)
    resultShow = proto.RepeatedField(proto.STRING, number=16)
    wish = proto.Field(proto.BOOL, number=17)

class DarkzoneSystemEndlessRewardByGroupData(proto.Message):
    group = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class DarkzoneSystemEndlessRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    reward = proto.RepeatedField(proto.UINT32, number=4)
    dropType = proto.RepeatedField(proto.UINT32, number=5)
    dropPreview = proto.RepeatedField(proto.STRING, number=6)
    dropId = proto.Field(proto.UINT32, number=7)

class DarkzoneSystemEndlessTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    title = proto.Field(LanguageStringData, number=2)
    subTitle = proto.Field(LanguageStringData, number=3)
    icon = proto.Field(proto.STRING, number=4)
    unlock = proto.RepeatedField(proto.UINT32, number=5)
    unlockDes = proto.Field(LanguageStringData, number=6)

class DarkzoneSystemExploreData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    dzMode = proto.Field(proto.UINT32, number=2)
    season = proto.Field(proto.UINT32, number=3)
    authority = proto.Field(proto.UINT32, number=4)
    map = proto.RepeatedField(proto.UINT32, number=5)
    authorityDes = proto.Field(LanguageStringData, number=6)
    mapTitle = proto.Field(LanguageStringData, number=7)
    mapSubTitle = proto.Field(LanguageStringData, number=8)
    reward = proto.RepeatedField(proto.UINT32, number=9)
    useItem = proto.MapField(proto.UINT32, proto.UINT32, number=10)
    unlock = proto.RepeatedField(proto.UINT32, number=11)
    unlockDes = proto.Field(LanguageStringData, number=12)
    normalDropList = proto.RepeatedField(proto.UINT32, number=13)

class DarkzoneSystemQuestBundleData(proto.Message):
    questGroup = proto.Field(proto.UINT32, number=1)
    questNeedLv = proto.Field(proto.UINT32, number=2)
    questSeriesId = proto.RepeatedField(proto.UINT32, number=3)
    name = proto.Field(LanguageStringData, number=4)
    difficulty = proto.Field(proto.UINT32, number=5)

class DarkzoneSystemQuestData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    questName = proto.Field(LanguageStringData, number=2)
    questDesc = proto.Field(LanguageStringData, number=3)
    questStructSceneId = proto.Field(proto.UINT32, number=4)
    questLevel = proto.Field(proto.UINT32, number=5)
    questRewardshow = proto.Field(proto.UINT32, number=6)
    questRewarddetailshow = proto.Field(KvSortUintData, number=7)
    questReward = proto.MapField(proto.UINT32, proto.UINT32, number=8)
    questCost = proto.MapField(proto.UINT32, proto.UINT32, number=9)
    questType = proto.Field(proto.UINT32, number=10)
    questTarget = proto.Field(LanguageStringData, number=11)
    questPic = proto.Field(proto.STRING, number=12)
    questReturn = proto.MapField(proto.UINT32, proto.UINT32, number=13)
    questMapmark = proto.RepeatedField(proto.STRING, number=14)
    targetenemyShow = proto.Field(proto.STRING, number=15)
    dzMode = proto.Field(proto.UINT32, number=16)
    equipLoss = proto.Field(proto.BOOL, number=17)
    battleOverRecovery = proto.Field(proto.BOOL, number=18)
    targetGroupId = proto.RepeatedField(proto.UINT32, number=19)
    resultShow = proto.RepeatedField(proto.STRING, number=20)
    recommendShow = proto.Field(proto.BOOL, number=21)
    unlock1 = proto.Field(proto.UINT32, number=22)
    unlock2 = proto.RepeatedField(proto.UINT32, number=23)
    questTag = proto.Field(LanguageStringData, number=24)
    questUnlock = proto.Field(LanguageStringData, number=25)
    questUnlockTips = proto.Field(LanguageStringData, number=26)

class DarkzoneSystemQuestGroupData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    groupType = proto.Field(proto.UINT32, number=2)
    questBundleId = proto.RepeatedField(proto.UINT32, number=3)
    name = proto.Field(LanguageStringData, number=4)

class DarkzoneUnitCameraData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    captainCameraPosition = proto.RepeatedField(proto.DOUBLE, number=2)
    captainCameraRotation = proto.RepeatedField(proto.DOUBLE, number=3)
    unitCameraPosition = proto.RepeatedField(proto.DOUBLE, number=4)
    unitCameraRotation = proto.RepeatedField(proto.DOUBLE, number=5)
    unitCharacter1Position = proto.RepeatedField(proto.DOUBLE, number=6)
    unitCharacter1Rotation = proto.RepeatedField(proto.DOUBLE, number=7)
    unitCamera1 = proto.RepeatedField(proto.DOUBLE, number=8)
    unitCamera1Position = proto.RepeatedField(proto.DOUBLE, number=9)
    unitCamera1Rotation = proto.RepeatedField(proto.DOUBLE, number=10)
    unitCharacter2Position = proto.RepeatedField(proto.DOUBLE, number=11)
    unitCharacter2Rotation = proto.RepeatedField(proto.DOUBLE, number=12)
    unitCamera2Position = proto.RepeatedField(proto.DOUBLE, number=13)
    unitCamera2Rotation = proto.RepeatedField(proto.DOUBLE, number=14)
    unitCharacter3Position = proto.RepeatedField(proto.DOUBLE, number=15)
    unitCharacter3Rotation = proto.RepeatedField(proto.DOUBLE, number=16)
    unitCamera3Position = proto.RepeatedField(proto.DOUBLE, number=17)
    unitCamera3Rotation = proto.RepeatedField(proto.DOUBLE, number=18)
    unitCharacter4Position = proto.RepeatedField(proto.DOUBLE, number=19)
    unitCharacter4Rotation = proto.RepeatedField(proto.DOUBLE, number=20)
    unitCamera4Position = proto.RepeatedField(proto.DOUBLE, number=21)
    unitCamera4Rotation = proto.RepeatedField(proto.DOUBLE, number=22)

class DarkzoneUnlockFunctionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    tutorialPageId = proto.Field(proto.UINT32, number=2)
    description = proto.Field(proto.STRING, number=3)
    functionId = proto.Field(proto.UINT32, number=4)
    path = proto.Field(proto.STRING, number=5)
    mapId = proto.Field(proto.UINT32, number=6)
    gameplayType = proto.Field(proto.UINT32, number=7)

class DarkzoneWishCreateCharacterData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    createId = proto.Field(proto.UINT32, number=2)
    gunId = proto.Field(proto.UINT32, number=3)
    des = proto.Field(LanguageStringData, number=4)

class DarkzoneWishCreateData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    unlockDes = proto.Field(LanguageStringData, number=2)
    jumpId = proto.Field(proto.UINT32, number=3)
    recipeType = proto.Field(proto.UINT32, number=4)
    recipeDes = proto.Field(LanguageStringData, number=5)
    recipeIcon = proto.Field(proto.STRING, number=6)
    createShow = proto.RepeatedField(proto.UINT32, number=7)
    createTitle = proto.Field(LanguageStringData, number=8)
    createDes = proto.Field(LanguageStringData, number=9)
    recovery = proto.Field(proto.BOOL, number=10)
    material = proto.MapField(proto.UINT32, proto.UINT32, number=11)
    create = proto.MapField(proto.UINT32, proto.UINT32, number=12)
    isShow = proto.Field(proto.UINT32, number=13)

class DarkzoneWishData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    des = proto.Field(LanguageStringData, number=3)
    type = proto.Field(proto.UINT32, number=4)
    effectType = proto.RepeatedField(proto.UINT32, number=5)
    effectTypeDes = proto.Field(LanguageStringData, number=6)
    weightType = proto.Field(proto.UINT32, number=7)
    weight = proto.MapField(proto.UINT32, proto.UINT32, number=8)
    weightTypeShow = proto.MapField(proto.UINT32, proto.UINT32, number=9)

class DevelopProductData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    planName = proto.Field(LanguageStringData, number=2)
    planDesc = proto.Field(LanguageStringData, number=3)
    type = proto.RepeatedField(proto.UINT32, number=4)
    darkzoneProductmod = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    darkzoneProductcost1 = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    darkzoneProductcost2 = proto.MapField(proto.UINT32, proto.UINT32, number=7)
    condition = proto.RepeatedField(proto.UINT32, number=8)
    prompt = proto.Field(proto.UINT32, number=9)

class DialogueGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    finishCondition = proto.Field(proto.UINT32, number=2)
    finishGroup = proto.Field(proto.STRING, number=3)

class DialoguePageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    avatar = proto.Field(proto.STRING, number=4)
    avatarFemale = proto.Field(proto.STRING, number=5)
    textPosition = proto.RepeatedField(proto.INT32, number=6)
    textDifference = proto.Field(proto.STRING, number=7)
    text = proto.Field(LanguageStringData, number=8)
    pcText = proto.Field(LanguageStringData, number=9)
    consoleText = proto.Field(LanguageStringData, number=10)
    delay = proto.Field(proto.DOUBLE, number=11)
    finishPage = proto.Field(proto.UINT32, number=12)

class DifficultyChapterData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    num = proto.Field(proto.STRING, number=2)
    name = proto.Field(LanguageStringData, number=3)
    map = proto.Field(proto.UINT32, number=4)
    position = proto.Field(proto.UINT32, number=5)
    level = proto.Field(proto.UINT32, number=6)
    unlock = proto.RepeatedField(proto.UINT32, number=7)
    chapterSweepsSwitch = proto.Field(proto.UINT32, number=8)
    sweepsTimes = proto.Field(proto.UINT32, number=9)
    sweepsReward = proto.Field(KvSortUintData, number=10)
    sweepsCost = proto.MapField(proto.UINT32, proto.UINT32, number=11)
    unlockHint = proto.Field(proto.STRING, number=12)
    chapterRewardValue = proto.RepeatedField(proto.UINT32, number=13)
    chapterReward1 = proto.MapField(proto.UINT32, proto.UINT32, number=14)
    chapterReward2 = proto.MapField(proto.UINT32, proto.UINT32, number=15)
    chapterReward3 = proto.MapField(proto.UINT32, proto.UINT32, number=16)
    chapterRewardShow = proto.MapField(proto.UINT32, proto.UINT32, number=17)
    preChapter = proto.Field(proto.UINT32, number=18)
    unlockPercentage = proto.Field(proto.STRING, number=19)
    mapBackground = proto.Field(proto.STRING, number=20)
    chapterReward = proto.Field(proto.STRING, number=21)
    uidExp = proto.Field(proto.UINT32, number=22)

class DifficultyStoryByChapterData(proto.Message):
    chapter = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class DifficultyStoryData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    chapter = proto.Field(proto.UINT32, number=2)
    preId = proto.Field(proto.UINT32, number=3)
    nextId = proto.Field(proto.UINT32, number=4)
    code = proto.Field(LanguageStringData, number=5)
    name = proto.Field(LanguageStringData, number=6)
    icon = proto.Field(proto.STRING, number=7)
    type = proto.Field(proto.UINT32, number=8)
    unlockNum = proto.Field(proto.UINT32, number=9)
    unlock = proto.Field(proto.BOOL, number=10)
    unlockItem = proto.MapField(proto.UINT32, proto.UINT32, number=11)
    keyItem = proto.MapField(proto.UINT32, proto.UINT32, number=12)
    parse = proto.Field(proto.UINT32, number=13)
    unlockContent = proto.RepeatedField(proto.UINT32, number=14)
    position = proto.Field(proto.STRING, number=15)
    startPoint = proto.Field(proto.UINT32, number=16)
    camp = proto.Field(proto.INT32, number=17)
    cover = proto.Field(proto.STRING, number=18)
    dailyTimes = proto.Field(proto.UINT32, number=19)
    hidePoint = proto.Field(proto.UINT32, number=20)
    battleGroupId = proto.Field(proto.UINT32, number=21)
    sweepsOpen = proto.Field(proto.BOOL, number=22)
    sweepsNum = proto.Field(proto.UINT32, number=23)
    sweepsCost = proto.MapField(proto.UINT32, proto.UINT32, number=24)
    uidExp = proto.Field(proto.UINT32, number=25)
    sweepsReward = proto.Field(KvSortUintData, number=26)

class DormActionarrayData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cid = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    performtype = proto.Field(proto.UINT32, number=4)
    pathpoint = proto.Field(proto.UINT32, number=5)
    content = proto.Field(proto.UINT32, number=6)
    singleresponse = proto.RepeatedField(proto.UINT32, number=7)
    responseperform = proto.RepeatedField(proto.UINT32, number=8)
    actions = proto.RepeatedField(proto.UINT32, number=9)
    insertactions = proto.RepeatedField(proto.UINT32, number=10)
    interaction = proto.RepeatedField(proto.UINT32, number=11)
    idleaction = proto.RepeatedField(proto.UINT32, number=12)
    mutualperform = proto.RepeatedField(proto.UINT32, number=13)
    birthonlyaction = proto.Field(proto.UINT32, number=14)
    conditionTime = proto.RepeatedField(proto.UINT32, number=15)
    conditionArea = proto.RepeatedField(proto.UINT32, number=16)
    conditionDecoration = proto.Field(proto.UINT32, number=17)
    conditionAffection = proto.Field(proto.UINT32, number=18)
    conditionAchievement = proto.Field(proto.UINT32, number=19)

class DormActionsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cid = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    clips = proto.Field(proto.STRING, number=4)
    expressionName = proto.Field(proto.STRING, number=5)
    faceexpression = proto.Field(proto.UINT32, number=6)
    sound = proto.Field(proto.STRING, number=7)
    cycleamount = proto.Field(proto.UINT32, number=8)

class DormBranchstateData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    branchState = proto.Field(proto.STRING, number=3)
    mainStateId = proto.Field(proto.UINT32, number=4)
    conditionTime = proto.RepeatedField(proto.UINT32, number=5)
    conditionArea = proto.RepeatedField(proto.UINT32, number=6)
    conditionDecoration = proto.Field(proto.UINT32, number=7)
    conditionAffection = proto.Field(proto.UINT32, number=8)
    conditionAchievement = proto.Field(proto.UINT32, number=9)
    conditionChapter = proto.Field(proto.UINT32, number=10)
    dialogueId = proto.RepeatedField(proto.UINT32, number=11)
    mutualstate = proto.Field(proto.UINT32, number=12)

class DormCameraData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    position = proto.Field(proto.STRING, number=2)
    cameratype = proto.Field(proto.UINT32, number=3)
    coverpathpoint = proto.RepeatedField(proto.UINT32, number=4)
    area = proto.Field(proto.UINT32, number=5)
    transition = proto.Field(proto.UINT32, number=6)
    rotationdegree = proto.RepeatedField(proto.UINT32, number=7)

class DormCharacterData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cid = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    commonAction = proto.RepeatedField(proto.STRING, number=4)
    specialAction = proto.RepeatedField(proto.STRING, number=5)
    face = proto.RepeatedField(proto.UINT32, number=6)
    body = proto.RepeatedField(proto.UINT32, number=7)
    hair = proto.RepeatedField(proto.UINT32, number=8)
    skinchangeAction = proto.Field(proto.UINT32, number=9)
    giftPreform = proto.Field(proto.UINT32, number=10)
    blinktime = proto.Field(proto.DOUBLE, number=11)
    blinkinterval = proto.Field(proto.DOUBLE, number=12)
    headturntime = proto.Field(proto.DOUBLE, number=13)
    headholdtime = proto.Field(proto.DOUBLE, number=14)
    steploop = proto.Field(proto.DOUBLE, number=15)
    stepstart = proto.Field(proto.DOUBLE, number=16)
    stependleft = proto.Field(proto.DOUBLE, number=17)
    stependright = proto.Field(proto.DOUBLE, number=18)
    speed = proto.Field(proto.DOUBLE, number=19)
    acceleration = proto.Field(proto.DOUBLE, number=20)
    slowscale = proto.Field(proto.DOUBLE, number=21)

class DormCharacterPartData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cid = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    type = proto.Field(proto.STRING, number=4)
    suit = proto.Field(proto.STRING, number=5)
    prefab = proto.Field(proto.STRING, number=6)
    description = proto.Field(proto.STRING, number=7)

class DormDecorationData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    prefabname = proto.Field(proto.STRING, number=3)
    area = proto.Field(proto.UINT32, number=4)
    slot = proto.Field(proto.STRING, number=5)
    type = proto.Field(proto.STRING, number=6)
    icon = proto.Field(proto.STRING, number=7)
    favoramout = proto.Field(proto.UINT32, number=8)
    itemtype = proto.Field(proto.UINT32, number=9)
    constructvalue = proto.Field(proto.UINT32, number=10)
    slotorder = proto.Field(proto.UINT32, number=11)

class DormFacialexpressData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cld = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    happyEyes = proto.Field(proto.DOUBLE, number=4)
    happyMouth = proto.Field(proto.DOUBLE, number=5)
    sadEyes = proto.Field(proto.DOUBLE, number=6)
    sadMouth = proto.Field(proto.DOUBLE, number=7)
    angryEyes = proto.Field(proto.DOUBLE, number=8)
    angryMouth = proto.Field(proto.DOUBLE, number=9)
    amazingEyes = proto.Field(proto.DOUBLE, number=10)
    amazingMouth = proto.Field(proto.DOUBLE, number=11)
    blinkstate = proto.Field(proto.UINT32, number=12)

class DormFavorData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cid = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    favorMax = proto.Field(proto.UINT32, number=4)
    favorLevelAmount = proto.Field(proto.UINT32, number=5)
    favorInterval = proto.RepeatedField(proto.UINT32, number=6)

class DormFormationByModleIdData(proto.Message):
    modleId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class DormFormationData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    modleId = proto.Field(proto.UINT32, number=3)
    name = proto.Field(LanguageStringData, number=4)
    zone = proto.Field(proto.UINT32, number=5)
    isTimeline = proto.Field(proto.BOOL, number=6)
    isBack = proto.Field(proto.BOOL, number=7)
    isBreak = proto.Field(proto.BOOL, number=8)
    isLookat = proto.Field(proto.BOOL, number=9)
    clip = proto.Field(proto.STRING, number=10)
    uiicon = proto.Field(proto.STRING, number=11)
    loopTime = proto.RepeatedField(proto.UINT32, number=12)
    unlock = proto.Field(proto.UINT32, number=13)
    unlockType = proto.Field(proto.UINT32, number=14)
    unlockItem = proto.MapField(proto.UINT32, proto.UINT32, number=15)
    clothesId = proto.Field(proto.UINT32, number=16)
    unusedModle = proto.RepeatedField(proto.UINT32, number=17)
    modle01 = proto.Field(proto.STRING, number=18)
    modle02 = proto.Field(proto.STRING, number=19)
    modle03 = proto.Field(proto.STRING, number=20)

class DormGeneralData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    unlockmap = proto.MapField(proto.UINT32, proto.UINT32, number=2)

class DormMainstateData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cid = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    mainState = proto.Field(proto.STRING, number=4)
    actiontype = proto.Field(proto.STRING, number=5)
    position = proto.RepeatedField(proto.DOUBLE, number=6)
    rotation = proto.RepeatedField(proto.DOUBLE, number=7)
    conditionTime = proto.RepeatedField(proto.UINT32, number=8)
    conditionArea = proto.RepeatedField(proto.UINT32, number=9)
    conditionDecoration = proto.Field(proto.UINT32, number=10)
    conditionAffection = proto.Field(proto.UINT32, number=11)
    conditionAchievement = proto.Field(proto.UINT32, number=12)
    branchStateId = proto.RepeatedField(proto.UINT32, number=13)
    responseStateId = proto.RepeatedField(proto.UINT32, number=14)
    chapterStateId = proto.RepeatedField(proto.UINT32, number=15)
    dialogueId = proto.RepeatedField(proto.UINT32, number=16)
    transitiondelay = proto.Field(proto.UINT32, number=17)
    area = proto.Field(proto.UINT32, number=18)

class DormPathpointData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    area = proto.Field(proto.UINT32, number=2)
    position = proto.Field(proto.STRING, number=3)
    startIdle = proto.Field(proto.UINT32, number=4)
    insertIdle = proto.RepeatedField(proto.UINT32, number=5)
    endIdle = proto.Field(proto.UINT32, number=6)
    singleresponse = proto.RepeatedField(proto.UINT32, number=7)

class DormRoomData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cid = proto.Field(proto.UINT32, number=2)
    room = proto.Field(proto.UINT32, number=3)
    roomName = proto.Field(proto.STRING, number=4)
    roomLevel = proto.Field(proto.UINT32, number=5)
    upgradeNum = proto.Field(proto.UINT32, number=6)
    upgradeConstructRequire = proto.Field(proto.UINT32, number=7)
    upgradeTokenRequire = proto.Field(proto.UINT32, number=8)
    upgradeTasks = proto.Field(proto.STRING, number=9)
    rewardSkin = proto.Field(proto.UINT32, number=10)

class DormRoomskinData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cid = proto.Field(proto.UINT32, number=2)
    room = proto.Field(proto.UINT32, number=3)
    roomlevelRequired = proto.Field(proto.UINT32, number=4)
    skinName = proto.Field(proto.STRING, number=5)
    skinLight = proto.Field(proto.STRING, number=6)
    skinScene = proto.Field(proto.STRING, number=7)
    skinVideo = proto.Field(proto.STRING, number=8)

class DormWalkData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cid = proto.Field(proto.UINT32, number=2)
    area = proto.Field(proto.UINT32, number=3)
    responseperform = proto.RepeatedField(proto.UINT32, number=4)

class DromInteractByIdData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    interId = proto.RepeatedField(proto.UINT32, number=2)

class DromInteractData(proto.Message):
    interId = proto.Field(proto.UINT32, number=1)
    id = proto.Field(proto.UINT32, number=2)
    preposition = proto.Field(proto.UINT32, number=3)
    postposition = proto.RepeatedField(proto.UINT32, number=4)
    isTimeline = proto.Field(proto.BOOL, number=5)
    isBreak = proto.Field(proto.BOOL, number=6)
    isEsc = proto.Field(proto.BOOL, number=7)
    barrackInteract = proto.Field(proto.STRING, number=8)
    voice = proto.Field(proto.UINT32, number=9)
    weight = proto.Field(proto.UINT32, number=10)
    triggeringtime = proto.Field(proto.DOUBLE, number=11)
    cameraX = proto.Field(proto.STRING, number=12)
    cameraY = proto.Field(proto.STRING, number=13)
    cameraDistance = proto.Field(proto.STRING, number=14)
    unusedModle = proto.RepeatedField(proto.UINT32, number=15)

class DropBuffData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    stagetype = proto.RepeatedField(proto.INT32, number=3)
    args = proto.Field(proto.UINT32, number=4)

class DropPackageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    args = proto.RepeatedField(proto.STRING, number=2)
    type = proto.Field(proto.UINT32, number=3)
    exargs = proto.Field(proto.UINT32, number=4)

class Dz2slgBuffConvertData(proto.Message):
    dztoslgBuffId = proto.Field(proto.UINT32, number=1)
    condition = proto.RepeatedField(proto.UINT32, number=2)
    inSlgBuffId = proto.Field(proto.UINT32, number=3)
    timeScale = proto.Field(proto.UINT32, number=4)

class Dz2slgBuffConvertEnemyData(proto.Message):
    dztoslgBuffId = proto.Field(proto.UINT32, number=1)
    condition = proto.RepeatedField(proto.UINT32, number=2)
    inSlgBuffId = proto.Field(proto.UINT32, number=3)
    timeScale = proto.Field(proto.UINT32, number=4)

class Dz2slgIobjConvertData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    canEnter = proto.Field(proto.UINT32, number=2)
    meshCanEnter = proto.Field(proto.UINT32, number=3)
    bringOutCheck = proto.Field(proto.UINT32, number=4)

class DzActivityGameplayData(proto.Message):
    gameplayId = proto.Field(proto.UINT32, number=1)
    dzMode = proto.Field(proto.UINT32, number=2)
    warehouseEnable = proto.Field(proto.UINT32, number=3)
    maxCarrynum = proto.Field(proto.UINT32, number=4)
    warningCarrynum = proto.Field(proto.UINT32, number=5)
    lostCarrynum = proto.Field(proto.UINT32, number=6)
    pointEnable = proto.Field(proto.BOOL, number=7)
    talentEnable = proto.Field(proto.BOOL, number=8)
    retreatEnable = proto.Field(proto.BOOL, number=9)
    retreatChance = proto.Field(proto.UINT32, number=10)
    retreatBagnum = proto.Field(proto.UINT32, number=11)
    retreatHp = proto.Field(proto.UINT32, number=12)
    retreatState = proto.Field(proto.UINT32, number=13)
    retreatBuff = proto.RepeatedField(proto.UINT32, number=14)
    retryHint = proto.Field(proto.UINT32, number=15)
    talentSenceCamera = proto.RepeatedField(proto.DOUBLE, number=16)
    dzBoxCamera = proto.RepeatedField(proto.DOUBLE, number=17)
    talentMaxCamera = proto.RepeatedField(proto.DOUBLE, number=18)
    talentEntranceUnlock = proto.Field(proto.UINT32, number=19)

class DzActivityPhaseByActivityDzData(proto.Message):
    activityDz = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class DzActivityPhaseData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    activityDz = proto.Field(proto.UINT32, number=2)
    unlockDaynum = proto.Field(proto.UINT32, number=3)
    unlockRate = proto.Field(proto.UINT32, number=4)
    dzActivityQuest = proto.RepeatedField(proto.UINT32, number=5)
    modelTitle = proto.Field(LanguageStringData, number=6)

class DzActivityQuestData(proto.Message):
    questId = proto.Field(proto.UINT32, number=1)
    questUnlock = proto.Field(proto.UINT32, number=2)
    frontQuest = proto.Field(proto.UINT32, number=3)
    questCost = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    firstQuestReward = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    questReward = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    questRewardShow = proto.RepeatedField(proto.UINT32, number=7)
    sweepUnlock = proto.Field(proto.UINT32, number=8)
    maxPoint = proto.Field(proto.UINT32, number=9)
    pointPlan = proto.Field(proto.UINT32, number=10)
    sweepCost = proto.MapField(proto.UINT32, proto.UINT32, number=11)
    sweepPlan = proto.Field(proto.UINT32, number=12)
    questReturn = proto.MapField(proto.UINT32, proto.UINT32, number=13)
    startRequie = proto.Field(proto.UINT32, number=14)
    questStructSceneId = proto.Field(proto.UINT32, number=15)
    questMapmark = proto.RepeatedField(proto.STRING, number=16)
    resultShow = proto.RepeatedField(proto.STRING, number=17)
    battleOverRecovery = proto.Field(proto.UINT32, number=18)
    questAim = proto.Field(LanguageStringData, number=19)
    questDesc = proto.Field(LanguageStringData, number=20)
    questLevel = proto.Field(proto.UINT32, number=21)
    questName = proto.Field(LanguageStringData, number=22)
    questPic1 = proto.Field(proto.STRING, number=23)
    questPic2 = proto.Field(proto.STRING, number=24)
    darkzoneEnemies = proto.MapField(proto.UINT32, proto.UINT32, number=25)
    activityRewardshow = proto.RepeatedField(proto.UINT32, number=26)
    exploreRewardshow = proto.RepeatedField(proto.UINT32, number=27)
    sweepControl = proto.Field(proto.BOOL, number=28)
    taskCheck = proto.Field(proto.UINT32, number=29)
    checkHint = proto.Field(proto.UINT32, number=30)

class DzBoxWarningData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    warning = proto.Field(proto.INT32, number=2)
    hintId = proto.Field(proto.UINT32, number=3)

class DzBuffData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    description = proto.Field(LanguageStringData, number=3)
    buffShowString = proto.Field(LanguageStringData, number=4)
    buffShowStringTiming = proto.Field(proto.UINT32, number=5)
    buffShowStringSize = proto.Field(proto.UINT32, number=6)
    buffShowColor = proto.Field(LanguageStringData, number=7)
    descriptionBattle = proto.Field(LanguageStringData, number=8)
    icon = proto.Field(proto.STRING, number=9)
    effectTime = proto.Field(proto.UINT32, number=10)
    effectId = proto.Field(proto.UINT32, number=11)
    sysName = proto.Field(proto.STRING, number=12)
    buffGroup = proto.Field(proto.UINT32, number=13)
    buffRank = proto.Field(proto.UINT32, number=14)
    buffType = proto.Field(proto.UINT32, number=15)
    duration = proto.Field(proto.INT32, number=16)
    flag = proto.Field(proto.UINT32, number=17)
    interval = proto.Field(proto.INT32, number=18)
    buffEffect = proto.RepeatedField(proto.UINT32, number=19)
    overlying = proto.Field(proto.UINT32, number=20)
    maxTier = proto.Field(proto.UINT32, number=21)
    enableCameraMould = proto.Field(proto.UINT32, number=22)
    isBannerShow = proto.Field(proto.UINT32, number=23)

class DzBuffGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rule = proto.Field(proto.UINT32, number=2)

class DzCarModeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    chest1 = proto.RepeatedField(proto.UINT32, number=2)
    chest2 = proto.RepeatedField(proto.UINT32, number=3)
    chest3 = proto.RepeatedField(proto.UINT32, number=4)
    box = proto.RepeatedField(proto.UINT32, number=5)

class DzCartpointDepotData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    splitGroupId = proto.Field(proto.UINT32, number=2)
    pointType = proto.Field(proto.UINT32, number=3)
    endResult = proto.Field(proto.UINT32, number=4)
    ifArchive = proto.Field(proto.BOOL, number=5)
    position = proto.RepeatedField(proto.INT32, number=6)
    beaconId = proto.Field(proto.UINT32, number=7)
    forwardPoint = proto.Field(proto.STRING, number=8)
    backwardPoint = proto.Field(proto.STRING, number=9)
    approachList = proto.Field(proto.STRING, number=10)
    backapproachList = proto.Field(proto.STRING, number=11)
    rebornPosition = proto.RepeatedField(proto.UINT32, number=12)

class DzChipByChipGroupData(proto.Message):
    o_IIIILNOJBHH = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class DzChipData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    o_KDJEMGAEOPB = proto.Field(proto.UINT32, number=2)
    o_IIIILNOJBHH = proto.Field(proto.UINT32, number=3)
    o_BDIDEOABFOC = proto.Field(LanguageStringData, number=4)
    o_NHGJALEFEEN = proto.Field(LanguageStringData, number=5)
    o_EHFJILAKHED = proto.Field(proto.STRING, number=6)
    o_AMAJGEMHHJI = proto.Field(proto.UINT32, number=7)
    o_HFJGFHLENDN = proto.Field(proto.UINT32, number=8)
    o_MHKKDAFOLOG = proto.Field(proto.UINT32, number=9)
    o_IIHBHILEPHH = proto.Field(proto.UINT32, number=10)
    o_CIILNLPAMIN = proto.Field(proto.STRING, number=11)
    o_BHOOKNLAKLN = proto.Field(proto.UINT32, number=12)
    probability = proto.Field(proto.INT32, number=13)

class DzDiscoverLevelData(proto.Message):
    o_FCAGPPJFOJF = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    o_AHADNNOFDOA = proto.Field(proto.UINT32, number=3)
    o_GFNKOGGAKCI = proto.Field(proto.UINT32, number=4)
    o_FCJNJOGGJLJ = proto.Field(proto.UINT32, number=5)
    o_JMIHDILCDEH = proto.Field(proto.UINT32, number=6)
    o_BOJANIOJMDD = proto.Field(proto.UINT32, number=7)
    o_HPIEFMNDJFP = proto.Field(proto.UINT32, number=8)
    o_IKMPEFJFAPL = proto.Field(proto.UINT32, number=9)
    o_DLNCOILOLFL = proto.RepeatedField(proto.UINT32, number=10)
    o_AHIKBOBGFGH = proto.RepeatedField(proto.UINT32, number=11)
    o_EJPCAKMEBAN = proto.RepeatedField(proto.UINT32, number=12)
    o_IAMEDOEPJDF = proto.Field(proto.UINT32, number=13)
    o_GCLCPEBPIDD = proto.Field(proto.UINT32, number=14)
    o_NIIGJMJDFMC = proto.Field(proto.UINT32, number=15)
    o_IAKEJPJKCKB = proto.MapField(proto.UINT32, proto.INT32, number=16)

class DzEffectData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    effect = proto.Field(proto.STRING, number=2)
    effectPoint = proto.Field(proto.UINT32, number=3)
    effectOnly = proto.Field(proto.UINT32, number=4)
    effectRevolve = proto.Field(proto.UINT32, number=5)
    effectLifetime = proto.Field(proto.UINT32, number=6)
    routeId = proto.Field(proto.UINT32, number=7)
    bindType = proto.Field(proto.UINT32, number=8)
    zoomRatio = proto.Field(proto.UINT32, number=9)
    effectOffsetY = proto.Field(proto.INT32, number=10)

class DzEndlessModeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    resultDivide = proto.Field(proto.UINT32, number=2)
    defaultVal = proto.MapField(proto.INT32, proto.INT32, number=3)
    resultDivideNum = proto.RepeatedField(proto.UINT32, number=4)
    eventTreeGroup = proto.RepeatedField(proto.UINT32, number=5)
    propertyUpLimit = proto.MapField(proto.INT32, proto.INT32, number=6)
    resultDesc1 = proto.Field(proto.STRING, number=7)
    resultDesc2 = proto.Field(proto.STRING, number=8)
    resultDesc3 = proto.Field(proto.STRING, number=9)
    resultDesc4 = proto.Field(proto.STRING, number=10)
    resultDesc5 = proto.Field(proto.STRING, number=11)
    resultDesc6 = proto.Field(proto.STRING, number=12)
    oxygenDownInSlg = proto.Field(proto.UINT32, number=13)
    oxygenDownShow = proto.Field(proto.UINT32, number=14)

class DzEventGroupsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    eventId = proto.RepeatedField(proto.UINT32, number=2)

class DzEventTreeData(proto.Message):
    eventId = proto.Field(proto.UINT32, number=1)
    condition = proto.Field(proto.STRING, number=2)
    nextEvent = proto.RepeatedField(proto.UINT32, number=3)
    resultList = proto.Field(proto.STRING, number=4)

class DzExploreModeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    isNoob = proto.Field(proto.UINT32, number=2)
    difficulty = proto.Field(proto.UINT32, number=3)
    map1 = proto.Field(proto.UINT32, number=4)
    map2 = proto.Field(proto.UINT32, number=5)
    map3 = proto.Field(proto.UINT32, number=6)
    map1Beacon = proto.RepeatedField(proto.UINT32, number=7)
    map2Beacon = proto.RepeatedField(proto.UINT32, number=8)
    map3Beacon = proto.RepeatedField(proto.UINT32, number=9)

class DzGlobalEventConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    showId = proto.Field(proto.UINT32, number=2)
    eventVar = proto.Field(proto.STRING, number=3)

class DzGlobalEventShowData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    desc = proto.Field(LanguageStringData, number=3)
    eventIcon = proto.Field(proto.STRING, number=4)
    noticeIcon = proto.Field(proto.STRING, number=5)
    noticeColor = proto.Field(proto.STRING, number=6)
    noticeDesc = proto.Field(proto.STRING, number=7)
    time = proto.Field(proto.INT32, number=8)
    afterEff = proto.Field(proto.STRING, number=9)
    sceneEff = proto.Field(proto.STRING, number=10)
    timelinePos = proto.Field(proto.STRING, number=11)
    timeline = proto.Field(proto.STRING, number=12)
    effectIn = proto.Field(proto.STRING, number=13)
    inToLoopTime = proto.Field(proto.UINT32, number=14)
    loopToOutTime = proto.Field(proto.UINT32, number=15)
    effectOut = proto.Field(proto.STRING, number=16)
    effectOutTime = proto.Field(proto.UINT32, number=17)
    effectContinue = proto.MapField(proto.UINT32, proto.UINT32, number=18)
    descShow = proto.Field(LanguageStringData, number=19)

class DzIngameFactoryData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    inputType = proto.Field(proto.STRING, number=2)
    inputId = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    outputType = proto.Field(proto.STRING, number=4)
    outputId = proto.MapField(proto.UINT32, proto.UINT32, number=5)

class DzIobjDepotData(proto.Message):
    uid = proto.Field(proto.UINT32, number=1)
    id = proto.Field(proto.UINT32, number=2)
    position = proto.Field(proto.STRING, number=3)
    rotation = proto.Field(proto.UINT32, number=4)
    param = proto.Field(proto.STRING, number=5)
    dynamicCoverDirectPb = proto.Field(proto.STRING, number=6)
    minigameCreate = proto.RepeatedField(proto.UINT32, number=7)

class DzIobjElementGridData(proto.Message):
    propertyId = proto.Field(proto.UINT32, number=1)
    slotBuff = proto.Field(proto.UINT32, number=2)
    triggerMax = proto.Field(proto.UINT32, number=3)
    upSpeed = proto.Field(proto.UINT32, number=4)
    downSpeed = proto.Field(proto.UINT32, number=5)

class DzIobjInteractData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    sceneIcon = proto.Field(proto.STRING, number=3)
    interactIcon = proto.Field(proto.STRING, number=4)
    type = proto.Field(proto.UINT32, number=5)
    require = proto.Field(proto.STRING, number=6)
    canStop = proto.Field(proto.BOOL, number=7)
    interactTime = proto.Field(proto.UINT32, number=8)
    interactAnim = proto.Field(proto.STRING, number=9)
    decoAnim = proto.Field(proto.STRING, number=10)
    isOutlineEnable = proto.Field(proto.UINT32, number=11)
    directionCheck = proto.Field(proto.UINT32, number=12)
    activeBlock = proto.Field(proto.BOOL, number=13)
    enableCameraMould = proto.Field(proto.UINT32, number=14)
    btnLevel = proto.Field(proto.UINT32, number=15)

class DzIobjMainData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    desc = proto.Field(LanguageStringData, number=3)
    type = proto.Field(proto.UINT32, number=4)
    priority = proto.Field(proto.UINT32, number=5)
    initState = proto.Field(proto.UINT32, number=6)
    state = proto.MapField(proto.UINT32, proto.UINT32, number=7)
    prefabPath = proto.Field(proto.STRING, number=8)
    slgPrefabPath = proto.Field(proto.STRING, number=9)
    blockCollision = proto.Field(proto.STRING, number=10)
    interactCollision = proto.Field(proto.STRING, number=11)
    severBlockCollision = proto.Field(proto.STRING, number=12)
    severInteractCollision = proto.Field(proto.STRING, number=13)
    monsterInteractCollision = proto.Field(proto.STRING, number=14)
    backCollision = proto.Field(proto.STRING, number=15)
    useLimit = proto.Field(proto.INT32, number=16)
    cd = proto.RepeatedField(proto.INT32, number=17)
    cdSequence = proto.MapField(proto.UINT32, proto.UINT32, number=18)
    costType = proto.Field(proto.INT32, number=19)
    costId = proto.RepeatedField(proto.INT32, number=20)
    costNum = proto.RepeatedField(proto.INT32, number=21)
    activeShape = proto.Field(proto.BOOL, number=22)
    shapeIds = proto.RepeatedField(proto.UINT32, number=23)
    isShowInteractToken = proto.Field(proto.UINT32, number=24)
    interactTokenState = proto.MapField(proto.UINT32, proto.UINT32, number=25)
    param = proto.Field(proto.STRING, number=26)
    isInvisiableInGrass = proto.Field(proto.UINT32, number=27)
    showInSlg = proto.Field(proto.UINT32, number=28)
    isShowOnMinimap = proto.Field(proto.UINT32, number=29)
    tokenByState = proto.MapField(proto.UINT32, proto.UINT32, number=30)
    frontCheck = proto.Field(proto.UINT32, number=31)
    minigameCreate = proto.RepeatedField(proto.UINT32, number=32)
    tokenYShifting = proto.Field(proto.UINT32, number=33)

class DzIobjShapeData(proto.Message):
    shapeId = proto.Field(proto.UINT32, number=1)
    shapeBigGridRect = proto.Field(proto.STRING, number=2)
    clientShapePb = proto.Field(proto.STRING, number=3)

class DzLoadingTipsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    hintIds = proto.RepeatedField(proto.UINT32, number=2)

class DzMonsterDepotData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    position = proto.RepeatedField(proto.INT32, number=3)
    ifloop = proto.Field(proto.UINT32, number=4)
    crossPathSrc = proto.Field(proto.STRING, number=5)

class DzQuestModeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    chest1 = proto.RepeatedField(proto.UINT32, number=2)
    chest2 = proto.RepeatedField(proto.UINT32, number=3)
    chest3 = proto.RepeatedField(proto.UINT32, number=4)
    box = proto.RepeatedField(proto.UINT32, number=5)

class DzRefreshDepotData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    refreshNum = proto.Field(proto.UINT32, number=2)
    strategyList = proto.Field(proto.STRING, number=3)

class DzRegionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    o_IIMHLBNPIIB = proto.Field(proto.UINT32, number=2)
    o_BANKKMBHKOL = proto.Field(proto.STRING, number=3)
    o_PMGPMEDGDEK = proto.Field(proto.UINT32, number=4)
    o_NGPPEJHFPIM = proto.Field(proto.STRING, number=5)
    mapId = proto.Field(proto.UINT32, number=6)
    o_IJPAGEKEMNO = proto.Field(proto.STRING, number=7)
    o_KMIALMNGKMF = proto.MapField(proto.UINT32, proto.UINT32, number=8)
    o_NBHGHLNMOLK = proto.Field(proto.UINT32, number=9)
    o_NHJOIJIMDNK = proto.Field(proto.UINT32, number=10)
    enemyGroup = proto.Field(proto.UINT32, number=11)
    o_DKLEACDEDEF = proto.Field(proto.UINT32, number=12)
    o_OEHGGKICALA = proto.RepeatedField(proto.UINT32, number=13)
    o_GDHHCFDFKMC = proto.Field(proto.UINT32, number=14)
    o_MKAIGGIFIAF = proto.RepeatedField(proto.UINT32, number=15)
    o_ONIMILNACDG = proto.Field(proto.UINT32, number=16)
    o_PCGBNKCLCID = proto.Field(proto.UINT32, number=17)
    o_OAOFBFGPMOD = proto.Field(proto.UINT32, number=18)
    o_DJKOBANDDLC = proto.Field(proto.UINT32, number=19)
    o_MALHNAKMGPE = proto.Field(proto.UINT32, number=20)

class DzRogueConfigData(proto.Message):
    o_KJILOHKDALM = proto.Field(proto.UINT32, number=1)
    o_EAGPKIINBDD = proto.Field(proto.UINT32, number=2)
    o_HLPKGMAKECI = proto.Field(proto.UINT32, number=3)
    o_JFKBJLDAAJN = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    o_HLONMOMIBLF = proto.Field(proto.UINT32, number=5)
    o_HCNIDBDJFNI = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    o_IFMIEEGPPJA = proto.Field(proto.UINT32, number=7)
    o_JMMFIDDBLHC = proto.MapField(proto.UINT32, proto.UINT32, number=8)
    o_PFOEKJMCAFH = proto.Field(proto.UINT32, number=9)
    o_IHPIAKGIPFJ = proto.Field(proto.UINT32, number=10)
    o_OMLGBDDFOPA = proto.Field(proto.UINT32, number=11)
    o_MEJFJDJLGCE = proto.Field(proto.UINT32, number=12)
    o_HOHLIEKIDON = proto.Field(proto.UINT32, number=13)
    o_AHNIMDHJNMP = proto.Field(proto.UINT32, number=14)
    o_NKIBADNEEBF = proto.RepeatedField(proto.UINT32, number=15)

class DzSkillData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    description = proto.Field(LanguageStringData, number=3)
    icon = proto.Field(proto.UINT32, number=4)
    effectId = proto.Field(proto.UINT32, number=5)
    battleSkillCe = proto.Field(proto.INT32, number=6)

class DzStageEventData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    func = proto.Field(proto.INT32, number=3)
    args = proto.Field(proto.STRING, number=4)

class DzStageFrameworkData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    rankType = proto.Field(proto.UINT32, number=3)
    o_KGNKNKBACAA = proto.Field(proto.UINT32, number=4)
    o_HPBJCPJBABO = proto.Field(proto.UINT32, number=5)
    o_LNAALKCGKKA = proto.Field(proto.UINT32, number=6)
    o_JGMPHPGKAAD = proto.RepeatedField(proto.UINT32, number=7)
    o_KMOMPMABFCL = proto.Field(proto.UINT32, number=8)
    o_HIBIIKFHBOD = proto.Field(proto.UINT32, number=9)
    o_GJBDGJGCHJF = proto.MapField(proto.UINT32, proto.UINT32, number=10)
    o_EPILFAOIMPC = proto.MapField(proto.UINT32, proto.UINT32, number=11)
    o_BPALGFKGPJM = proto.RepeatedField(proto.UINT32, number=12)
    o_ELGHBCOFCFA = proto.RepeatedField(proto.UINT32, number=13)
    o_DDCLJBOBFLE = proto.Field(proto.UINT32, number=14)
    o_COFHMIIDHIK = proto.Field(proto.UINT32, number=15)
    o_NMPKBJLAJAE = proto.Field(proto.UINT32, number=16)
    o_OFKMDEDENDJ = proto.Field(proto.UINT32, number=17)
    o_FJIEHKIEPDC = proto.Field(proto.UINT32, number=18)
    o_JJCEKEAPBLH = proto.Field(proto.UINT32, number=19)
    o_HLDAONMIGCE = proto.Field(proto.UINT32, number=20)
    o_ONHFNGGLJCN = proto.Field(proto.UINT32, number=21)
    o_NJBCCDHOLJH = proto.Field(proto.UINT32, number=22)
    o_LHANEAOLPIL = proto.Field(proto.UINT32, number=23)
    o_LGKNKLDEPLH = proto.Field(proto.UINT32, number=24)
    o_GBKFCANFJMD = proto.Field(proto.UINT32, number=25)
    o_KKGGMJFCJHN = proto.Field(proto.STRING, number=26)
    o_ICGHCAPAEGG = proto.Field(proto.STRING, number=27)

class DzStageTriggerData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    triggerName = proto.Field(proto.STRING, number=2)
    func = proto.Field(proto.INT32, number=3)
    args = proto.Field(proto.STRING, number=4)
    events = proto.RepeatedField(proto.UINT32, number=5)
    maxTimes = proto.Field(proto.UINT32, number=6)
    isActive = proto.Field(proto.BOOL, number=7)
    isGlobal = proto.Field(proto.BOOL, number=8)

class DzZonePoolData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    o_HPBJCPJBABO = proto.Field(proto.UINT32, number=2)
    o_EMNCMPCNMAD = proto.Field(proto.UINT32, number=3)
    weight = proto.Field(proto.UINT32, number=4)
    o_OFCBHMAEEBH = proto.Field(proto.UINT32, number=5)
    o_KOGNKMJEFLM = proto.Field(proto.UINT32, number=6)

class EffectConditionGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    effectCondGroup = proto.Field(proto.STRING, number=2)
    falseId = proto.Field(proto.STRING, number=3)

class EffectData(proto.Message):
    count = proto.Field(proto.INT32, number=1)
    names = proto.RepeatedField(proto.STRING, number=2)
    values = proto.RepeatedField(proto.INT32, number=3)
    types = proto.RepeatedField(proto.INT32, number=4)
    sets = proto.RepeatedField(proto.INT32, number=5)

class EffectSubConditionGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    condition = proto.Field(proto.STRING, number=2)
    model = proto.RepeatedField(proto.INT32, number=3)

class ElementAddData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    addId = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    elementAdd = proto.Field(proto.STRING, number=4)
    aginstId = proto.Field(proto.UINT32, number=5)
    aginstName = proto.Field(proto.STRING, number=6)
    elementAgainst = proto.Field(proto.STRING, number=7)

class ElementAgainstData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    hurtType = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    elementAgainst = proto.Field(proto.STRING, number=4)

class EmojiData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    icon = proto.Field(proto.STRING, number=2)

class EnemyBalanceData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    pow = proto.Field(proto.INT32, number=2)
    maxHp = proto.Field(proto.INT32, number=3)
    maxShieldHp = proto.Field(proto.INT32, number=4)
    shieldArmor = proto.Field(proto.INT32, number=5)
    shieldDamage = proto.Field(proto.INT32, number=6)
    maxAp = proto.Field(proto.INT32, number=7)
    maxWillValue = proto.Field(proto.INT32, number=8)
    crit = proto.Field(proto.INT32, number=9)
    critMult = proto.Field(proto.INT32, number=10)
    hit = proto.Field(proto.INT32, number=11)
    dodge = proto.Field(proto.INT32, number=12)
    hitPercentage = proto.Field(proto.INT32, number=13)
    dodgePercentage = proto.Field(proto.INT32, number=14)
    scratch = proto.Field(proto.INT32, number=15)
    scratchReduction = proto.Field(proto.INT32, number=16)
    hitDamage = proto.Field(proto.INT32, number=17)
    behitDamage = proto.Field(proto.INT32, number=18)
    releaseHeal = proto.Field(proto.INT32, number=19)
    acceptHeal = proto.Field(proto.INT32, number=20)
    lifeSteal = proto.Field(proto.INT32, number=21)
    potentialGain = proto.Field(proto.INT32, number=22)
    potentialCost = proto.Field(proto.INT32, number=23)
    weight = proto.Field(proto.INT32, number=24)
    suppressDamage = proto.Field(proto.INT32, number=25)
    beSuppressedDamage = proto.Field(proto.INT32, number=26)
    releaseWillHeal = proto.Field(proto.INT32, number=27)
    acceptWillHeal = proto.Field(proto.INT32, number=28)
    powPercent = proto.Field(proto.INT32, number=29)
    maxHpPercent = proto.Field(proto.INT32, number=30)
    maxWillValuePercent = proto.Field(proto.INT32, number=31)
    shieldArmorPercent = proto.Field(proto.INT32, number=32)
    maxShieldHpPercent = proto.Field(proto.INT32, number=33)
    suppressDefend = proto.Field(proto.INT32, number=34)
    elementAddFire = proto.Field(proto.INT32, number=35)
    elementAddElectric = proto.Field(proto.INT32, number=36)
    elementAddIce = proto.Field(proto.INT32, number=37)
    elementAddPoison = proto.Field(proto.INT32, number=38)
    elementAddPhysics = proto.Field(proto.INT32, number=39)
    elementAddSoil = proto.Field(proto.INT32, number=40)
    elementAddGrass = proto.Field(proto.INT32, number=41)
    elementAddWater = proto.Field(proto.INT32, number=42)
    elementAgainstFire = proto.Field(proto.INT32, number=43)
    elementAgainstElectric = proto.Field(proto.INT32, number=44)
    elementAgainstIce = proto.Field(proto.INT32, number=45)
    elementAgainstPoison = proto.Field(proto.INT32, number=46)
    elementAgainstPhysics = proto.Field(proto.INT32, number=47)
    elementAgainstSoil = proto.Field(proto.INT32, number=48)
    elementAgainstGrass = proto.Field(proto.INT32, number=49)
    elementAgainstWater = proto.Field(proto.INT32, number=50)
    maxPotential = proto.Field(proto.INT32, number=51)
    roundPotential = proto.Field(proto.INT32, number=52)
    darkzoneLevel = proto.Field(proto.INT32, number=53)
    startPotential = proto.Field(proto.INT32, number=54)
    beginDamagepercent = proto.Field(proto.INT32, number=55)
    outroundDam = proto.Field(proto.INT32, number=56)
    potentialDam = proto.Field(proto.INT32, number=57)
    aoeDam = proto.Field(proto.INT32, number=58)
    singleDam = proto.Field(proto.INT32, number=59)
    cdDam = proto.Field(proto.INT32, number=60)
    healReverse = proto.Field(proto.INT32, number=61)
    potentialBehitDam = proto.Field(proto.INT32, number=62)
    aoeBehitDam = proto.Field(proto.INT32, number=63)
    singleBehitDam = proto.Field(proto.INT32, number=64)
    cdBehitDam = proto.Field(proto.INT32, number=65)

class EnemyChildData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    description = proto.Field(proto.STRING, number=3)
    textIndex = proto.RepeatedField(proto.UINT32, number=4)
    nameOnBar = proto.Field(proto.STRING, number=5)
    showPotential = proto.Field(proto.BOOL, number=6)
    shape = proto.Field(proto.UINT32, number=7)
    shapeParam = proto.RepeatedField(proto.INT32, number=8)
    shapeIcon = proto.Field(proto.STRING, number=9)
    shapeTerrain = proto.Field(proto.UINT32, number=10)
    occupySize = proto.Field(proto.UINT32, number=11)
    childCentralSquare = proto.RepeatedField(proto.INT32, number=12)
    weakTag = proto.RepeatedField(proto.INT32, number=13)
    childPropertyType = proto.Field(proto.INT32, number=14)
    childInheritPropertyFixed = proto.Field(proto.STRING, number=15)
    childInheritPropertyValue = proto.Field(proto.STRING, number=16)
    propertyGroup = proto.Field(proto.UINT32, number=17)
    parentPropertyNotSynchronization = proto.Field(proto.STRING, number=18)
    suppressGroup = proto.RepeatedField(proto.INT32, number=19)
    addLevel = proto.Field(proto.INT32, number=20)
    camp = proto.Field(proto.UINT32, number=21)
    childCannotChosen = proto.Field(proto.BOOL, number=22)
    beSuppressedConfig = proto.RepeatedField(proto.INT32, number=23)
    childOnground = proto.Field(proto.BOOL, number=24)
    childReleaserTransfer = proto.Field(proto.BOOL, number=25)
    characterPic = proto.Field(proto.STRING, number=26)
    childModelCode = proto.Field(proto.UINT32, number=27)
    skillNormalAttack = proto.Field(proto.UINT32, number=28)
    skillActive = proto.RepeatedField(proto.UINT32, number=29)
    skillTalent = proto.RepeatedField(proto.UINT32, number=30)
    ignorePlayer1Skill = proto.Field(proto.UINT32, number=31)
    dzOpenBattle = proto.Field(proto.UINT32, number=32)
    weakWeaponTag = proto.Field(proto.INT32, number=33)
    weaponTag = proto.Field(proto.INT32, number=34)

class EnemyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    addLevel = proto.Field(proto.INT32, number=2)
    camp = proto.Field(proto.INT32, number=3)
    enemyCamp = proto.Field(proto.INT32, number=4)
    duty = proto.Field(proto.INT32, number=5)
    skillNormalAttack = proto.Field(proto.UINT32, number=6)
    skillActive = proto.Field(proto.UINT32, number=7)
    skillTalent = proto.Field(proto.UINT32, number=8)
    skillSuper = proto.Field(proto.UINT32, number=9)
    skillActiveExtra = proto.RepeatedField(proto.UINT32, number=10)
    skillTalentExtra = proto.RepeatedField(proto.UINT32, number=11)
    skillFaction = proto.Field(proto.UINT32, number=12)
    skillFaction2 = proto.Field(proto.UINT32, number=13)
    aiList = proto.RepeatedField(proto.INT32, number=14)
    dzAiList = proto.RepeatedField(proto.INT32, number=15)
    rank = proto.Field(proto.INT32, number=16)
    propertyGroup = proto.Field(proto.UINT32, number=17)
    breakSkill = proto.RepeatedField(proto.UINT32, number=18)
    name = proto.Field(LanguageStringData, number=19)
    joke = proto.Field(LanguageStringData, number=20)
    trapDescription = proto.Field(LanguageStringData, number=21)
    description = proto.Field(LanguageStringData, number=22)
    textIndex = proto.RepeatedField(proto.UINT32, number=23)
    characterPic = proto.Field(proto.STRING, number=24)
    modelCode = proto.Field(proto.UINT32, number=25)
    moveCode = proto.Field(proto.UINT32, number=26)
    actionChance = proto.Field(proto.UINT32, number=27)
    occupySize = proto.Field(proto.UINT32, number=28)
    maxAp = proto.Field(proto.INT32, number=29)
    breakGage = proto.Field(proto.INT32, number=30)
    aiOrderClass = proto.Field(proto.INT32, number=31)
    trap = proto.Field(proto.BOOL, number=32)
    useFakeAttack = proto.Field(proto.BOOL, number=33)
    shieldForDeploy = proto.Field(proto.INT32, number=34)
    shieldType = proto.Field(proto.UINT32, number=35)
    attackType = proto.Field(proto.UINT32, number=36)
    element = proto.Field(proto.UINT32, number=37)
    shieldEffectId = proto.Field(proto.UINT32, number=38)
    shieldBrokenEffectId = proto.Field(proto.UINT32, number=39)
    beSuppressedConfig = proto.RepeatedField(proto.INT32, number=40)
    shape = proto.Field(proto.UINT32, number=41)
    shapeParam = proto.Field(proto.STRING, number=42)
    shapeIcon = proto.Field(proto.STRING, number=43)
    shapeTerrain = proto.Field(proto.UINT32, number=44)
    idleType = proto.Field(proto.UINT32, number=45)
    displacement = proto.Field(proto.UINT32, number=46)
    enemyType = proto.Field(proto.UINT32, number=47)
    dzOpenBattle = proto.Field(proto.UINT32, number=48)
    btPath = proto.Field(proto.STRING, number=49)
    weakTag = proto.Field(proto.STRING, number=50)
    suppressGroup = proto.RepeatedField(proto.INT32, number=51)
    nameOnBar = proto.Field(LanguageStringData, number=52)
    nonMultimove = proto.Field(proto.BOOL, number=53)
    showPotential = proto.Field(proto.BOOL, number=54)
    guardRadius = proto.Field(proto.INT32, number=55)
    guardRadiusShow = proto.Field(proto.INT32, number=56)
    ignorePlayer1Skill = proto.Field(proto.BOOL, number=57)
    defaultClothId = proto.Field(proto.UINT32, number=58)
    weakWeaponTag = proto.Field(proto.INT32, number=59)
    weaponTag = proto.Field(proto.INT32, number=60)
    weakMap = proto.Field(proto.UINT32, number=61)
    feature = proto.Field(proto.UINT32, number=62)
    o_JCKOELGMDBJ = proto.Field(proto.BOOL, number=63)

class EnemyParentData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    childId = proto.RepeatedField(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    joke = proto.Field(proto.STRING, number=4)
    description = proto.Field(proto.STRING, number=5)
    textIndex = proto.RepeatedField(proto.UINT32, number=6)
    rank = proto.Field(proto.UINT32, number=7)
    enemyType = proto.Field(proto.UINT32, number=8)
    nameOnBar = proto.Field(proto.STRING, number=9)
    showPotential = proto.Field(proto.BOOL, number=10)
    shape = proto.Field(proto.UINT32, number=11)
    shapeParam = proto.RepeatedField(proto.INT32, number=12)
    shapeIcon = proto.Field(proto.STRING, number=13)
    shapeTerrain = proto.Field(proto.UINT32, number=14)
    parentOccupySize = proto.Field(proto.INT32, number=15)
    weakTag = proto.RepeatedField(proto.INT32, number=16)
    propertyGroup = proto.Field(proto.UINT32, number=17)
    suppressGroup = proto.RepeatedField(proto.INT32, number=18)
    addLevel = proto.Field(proto.INT32, number=19)
    camp = proto.Field(proto.UINT32, number=20)
    enemyCamp = proto.Field(proto.UINT32, number=21)
    displacement = proto.Field(proto.UINT32, number=22)
    parentCannotChosen = proto.Field(proto.BOOL, number=23)
    parentBreakdownType = proto.Field(proto.INT32, number=24)
    beSuppressedConfig = proto.RepeatedField(proto.INT32, number=25)
    parentChildrenAlldie = proto.Field(proto.BOOL, number=26)
    characterPic = proto.Field(proto.STRING, number=27)
    parentModelCode = proto.Field(proto.UINT32, number=28)
    moveCode = proto.Field(proto.UINT32, number=29)
    idleType = proto.Field(proto.UINT32, number=30)
    nonMultimove = proto.Field(proto.BOOL, number=31)
    skillNormalAttack = proto.Field(proto.UINT32, number=32)
    skillActive = proto.RepeatedField(proto.UINT32, number=33)
    skillTalent = proto.RepeatedField(proto.UINT32, number=34)
    aiOrderClass = proto.Field(proto.INT32, number=35)
    aiList = proto.RepeatedField(proto.INT32, number=36)
    btPath = proto.Field(proto.STRING, number=37)
    ignorePlayer1Skill = proto.Field(proto.UINT32, number=38)
    guardRadius = proto.Field(proto.INT32, number=39)
    guardRadiusShow = proto.Field(proto.INT32, number=40)
    trap = proto.Field(proto.BOOL, number=41)
    trapDescription = proto.Field(proto.STRING, number=42)
    dzOpenBattle = proto.Field(proto.UINT32, number=43)
    dzAiList = proto.RepeatedField(proto.INT32, number=44)
    weakWeaponTag = proto.Field(proto.INT32, number=45)
    weaponTag = proto.Field(proto.INT32, number=46)
    feature = proto.Field(proto.UINT32, number=47)
    o_JJCHEFGLOMN = proto.Field(proto.INT32, number=48)

class ErrorCodeHintData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    hintId = proto.Field(proto.UINT32, number=2)

class ErrorcodeHintNewData(proto.Message):
    errorcodeId = proto.Field(proto.UINT32, number=1)
    hintId = proto.Field(proto.UINT32, number=2)

class EventDispatchBuffData(proto.Message):
    buffId = proto.Field(proto.UINT32, number=1)
    o_APPIAGKAADE = proto.Field(proto.STRING, number=2)
    buffEffect = proto.Field(proto.UINT32, number=3)
    o_KMGHMAFGKIK = proto.Field(proto.UINT32, number=4)

class EventDispatchConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    taskId = proto.RepeatedField(proto.UINT32, number=2)
    incomeItem = proto.Field(proto.UINT32, number=3)
    incomeTime = proto.Field(proto.UINT32, number=4)
    o_NLGDOHFPOJM = proto.Field(proto.UINT32, number=5)

class EventDispatchListData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    taskTitle = proto.Field(proto.STRING, number=2)
    o_MMBAPMCGBHJ = proto.Field(proto.STRING, number=3)
    taskTime = proto.Field(proto.UINT32, number=4)
    rewardSort = proto.Field(proto.STRING, number=5)
    o_DGFBHEPMINP = proto.Field(proto.STRING, number=6)
    o_OAJPEJMGAPC = proto.MapField(proto.UINT32, proto.UINT32, number=7)

class EventDispatchTaskData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rewardItemSort = proto.Field(proto.STRING, number=2)
    name = proto.Field(proto.STRING, number=3)
    conditionClass = proto.Field(proto.UINT32, number=4)

class EventMediumGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    icon = proto.Field(proto.STRING, number=2)
    mobileUrls = proto.Field(proto.STRING, number=3)
    urls = proto.Field(proto.STRING, number=4)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    notes = proto.Field(LanguageStringData, number=6)

class EventRoleTrialData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    bgImage = proto.Field(proto.STRING, number=2)
    gachaId = proto.Field(proto.STRING, number=3)
    uiParam = proto.Field(proto.STRING, number=4)

class EventSevendayGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    themeQuests = proto.RepeatedField(proto.UINT32, number=3)
    unlockTime = proto.Field(proto.UINT32, number=4)

class EventSevendayStepData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    stepNum = proto.Field(proto.UINT32, number=2)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=3)

class EventSevendayTasklistData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    conditionClass = proto.Field(proto.UINT32, number=4)
    conditionNum = proto.Field(proto.UINT32, number=5)
    counterType = proto.Field(proto.UINT32, number=6)
    resetType = proto.Field(proto.UINT32, number=7)
    statisticType = proto.Field(proto.UINT32, number=8)
    link = proto.Field(proto.STRING, number=9)

class EventSigninData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    edType = proto.Field(proto.UINT32, number=2)
    image = proto.Field(proto.STRING, number=3)
    activityType = proto.Field(proto.UINT32, number=4)

class EventSigninRewardByActivityIdData(proto.Message):
    activityId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class EventSigninRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    activityId = proto.Field(proto.UINT32, number=2)
    days = proto.Field(proto.UINT32, number=3)
    rewards = proto.Field(KvSortUintData, number=4)

class EventStageByActivityIdData(proto.Message):
    activityId = proto.Field(proto.UINT32, number=1)
    stageid = proto.RepeatedField(proto.UINT32, number=2)

class EventStageData(proto.Message):
    stageid = proto.Field(proto.UINT32, number=1)
    activityId = proto.Field(proto.UINT32, number=2)
    unlockTime = proto.Field(proto.UINT32, number=3)

class ExpandSkillData(proto.Message):
    expandId = proto.Field(proto.UINT32, number=1)
    expandPassiveSkill = proto.RepeatedField(proto.UINT32, number=2)
    expandRandomPassiveSkill = proto.RepeatedField(proto.UINT32, number=3)
    randomNum = proto.Field(proto.UINT32, number=4)

class FightingCapacityData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    value = proto.Field(proto.DOUBLE, number=4)

class FuncPropertyRateData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    developPropertyMaxHpRate = proto.Field(proto.INT32, number=2)

class FunctionUnlockSkillData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    gunId = proto.Field(proto.UINT32, number=2)
    skillIds = proto.RepeatedField(proto.UINT32, number=3)

class GachaCheckClientData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    poolId = proto.Field(proto.UINT32, number=2)
    gachaType = proto.Field(proto.UINT32, number=3)
    poolWeight = proto.Field(proto.INT32, number=4)
    specialShow = proto.Field(proto.UINT32, number=5)

class GachaData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sequence = proto.Field(proto.UINT32, number=2)
    globalTab = proto.Field(proto.UINT32, number=3)
    type = proto.Field(proto.INT32, number=4)
    cost = proto.Field(proto.UINT32, number=5)
    jumpId = proto.Field(proto.UINT32, number=6)
    startTime = proto.Field(proto.INT64, number=7)
    endTime = proto.Field(proto.INT64, number=8)
    name = proto.Field(LanguageStringData, number=9)
    banner = proto.Field(proto.STRING, number=10)
    ssrTimes = proto.Field(proto.UINT32, number=11)
    srTimes = proto.Field(proto.UINT32, number=12)
    extraDrop = proto.MapField(proto.UINT32, proto.UINT32, number=13)
    ssrUpList = proto.RepeatedField(proto.UINT32, number=14)
    srUpList = proto.RepeatedField(proto.UINT32, number=15)
    newArrive = proto.Field(LanguageStringData, number=16)
    commonHint = proto.Field(LanguageStringData, number=17)
    isCommon = proto.Field(proto.UINT32, number=18)
    limitedWeapons = proto.RepeatedField(proto.UINT32, number=19)
    gunRate = proto.Field(proto.STRING, number=20)
    rateDesGun = proto.Field(proto.STRING, number=21)
    rateDesWeapon = proto.Field(proto.STRING, number=22)
    gachaStartScene = proto.Field(proto.STRING, number=23)
    gachaStartTimeline = proto.Field(proto.STRING, number=24)
    gunUpRate = proto.Field(proto.STRING, number=25)
    gunUpItem = proto.Field(proto.STRING, number=26)
    weaponUpRate = proto.Field(proto.STRING, number=27)
    weaponUpItem = proto.Field(proto.STRING, number=28)
    gunUpCharacter = proto.Field(proto.STRING, number=29)
    gunUpCharacterName = proto.Field(LanguageStringData, number=30)
    gunUpCharacterVideo = proto.Field(proto.STRING, number=31)
    gunUpCharacterStage = proto.Field(proto.STRING, number=32)
    gachaNoviceLimit = proto.Field(proto.UINT32, number=33)
    gachaPic = proto.Field(proto.STRING, number=34)

class GachaTypeListData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    enName = proto.Field(proto.STRING, number=3)
    sheet = proto.Field(proto.STRING, number=4)

class GeopoliticalBuffData(proto.Message):
    buffId = proto.Field(proto.UINT32, number=1)
    o_IGEPKLCIBLI = proto.Field(proto.STRING, number=2)
    o_FMPMMJPEFDB = proto.Field(proto.UINT32, number=3)
    o_CNEIMNHOCPP = proto.Field(proto.BOOL, number=4)
    param1 = proto.Field(proto.INT32, number=5)
    param2 = proto.Field(proto.INT32, number=6)
    o_JGCBOAKJOEJ = proto.Field(proto.INT32, number=7)
    o_BLEDPHLAIPF = proto.Field(proto.INT32, number=8)

class GeopoliticalCardIndexByCardTypeData(proto.Message):
    o_HBPHJDNICDO = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class GeopoliticalCardIndexData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    o_HBPHJDNICDO = proto.Field(proto.UINT32, number=2)
    o_BJEHIGDPAPL = proto.Field(LanguageStringData, number=3)

class GeopoliticalCardTacticalData(proto.Message):
    o_NHOAJGJEOBM = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    des = proto.Field(LanguageStringData, number=3)
    image = proto.Field(proto.STRING, number=4)
    level = proto.Field(proto.UINT32, number=5)
    tag = proto.Field(LanguageStringData, number=6)
    cost = proto.Field(proto.UINT32, number=7)
    o_BEPNJOGNDOF = proto.Field(LanguageStringData, number=8)
    o_GKJMCIOEENC = proto.Field(proto.UINT32, number=9)
    o_AHIOJGMHJNJ = proto.Field(proto.UINT32, number=10)
    o_DCNPPKPBEND = proto.Field(proto.UINT32, number=11)

class GeopoliticalCardTaskData(proto.Message):
    o_NHOAJGJEOBM = proto.Field(proto.UINT32, number=1)
    o_ELFGAMGHNAF = proto.Field(LanguageStringData, number=2)
    taskDes = proto.Field(LanguageStringData, number=3)
    o_KCIEGCNMJDN = proto.Field(LanguageStringData, number=4)
    tag = proto.Field(LanguageStringData, number=5)
    image = proto.Field(proto.STRING, number=6)
    o_PFAHNLPKIND = proto.Field(proto.UINT32, number=7)
    conditionId = proto.Field(proto.UINT32, number=8)

class GeopoliticalCardUnitData(proto.Message):
    o_NHOAJGJEOBM = proto.Field(proto.UINT32, number=1)
    image = proto.Field(proto.STRING, number=2)
    model = proto.Field(proto.STRING, number=3)
    level = proto.Field(proto.UINT32, number=4)
    range = proto.Field(proto.UINT32, number=5)
    unitType = proto.Field(proto.UINT32, number=6)
    cost = proto.Field(proto.UINT32, number=7)
    hp = proto.Field(proto.UINT32, number=8)
    o_AELCADLHMDF = proto.Field(proto.UINT32, number=9)
    o_FJCPIPEBOPC = proto.Field(proto.UINT32, number=10)
    o_IPKGJGEFOCA = proto.Field(proto.UINT32, number=11)
    skillId = proto.Field(proto.UINT32, number=12)
    o_DMEOMNKHKHE = proto.Field(proto.UINT32, number=13)

class GeopoliticalConditionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    des = proto.Field(proto.STRING, number=2)
    o_FIKBOELGKLF = proto.Field(proto.UINT32, number=3)
    o_CNMAMBAEBCL = proto.Field(proto.UINT32, number=4)
    conditionType = proto.Field(proto.UINT32, number=5)
    conditionNum = proto.Field(proto.UINT32, number=6)
    conditionArg0 = proto.Field(proto.UINT32, number=7)
    conditionArg1 = proto.Field(proto.UINT32, number=8)
    conditionArg2 = proto.Field(proto.UINT32, number=9)
    conditionArg3 = proto.Field(proto.UINT32, number=10)

class GeopoliticalConflictData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    group = proto.Field(proto.UINT32, number=3)
    o_NILGLHKKCPG = proto.Field(proto.UINT32, number=4)
    o_OKDHFELPPKD = proto.Field(proto.UINT32, number=5)
    o_MBOMCJFFJHD = proto.Field(proto.BOOL, number=6)
    o_PINBPONLHFM = proto.Field(proto.UINT32, number=7)
    o_IIMAIOKPMOO = proto.Field(proto.UINT32, number=8)
    o_NAABNGIMDMI = proto.Field(proto.UINT32, number=9)
    o_JBIHLAHLFNH = proto.Field(proto.UINT32, number=10)
    o_NGKOCPOFLCE = proto.Field(proto.UINT32, number=11)
    o_GLDGFEEANLA = proto.Field(proto.UINT32, number=12)
    o_CGFLBFANLCL = proto.RepeatedField(proto.UINT32, number=13)
    o_AIEPOCIFGNA = proto.RepeatedField(proto.UINT32, number=14)
    o_GKBNGCOGFCK = proto.RepeatedField(proto.UINT32, number=15)
    o_LDBJPPJFEHA = proto.Field(proto.UINT32, number=16)
    o_HKPJKEGCDDK = proto.Field(proto.UINT32, number=17)
    o_FFFBBCIJOFN = proto.Field(proto.UINT32, number=18)
    o_PHMPCGNOIJB = proto.Field(proto.UINT32, number=19)
    o_BBOMPCPLPFG = proto.RepeatedField(proto.UINT32, number=20)

class GeopoliticalCustomizeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    mapId = proto.Field(proto.UINT32, number=2)
    point = proto.RepeatedField(proto.UINT32, number=3)
    hp = proto.RepeatedField(proto.UINT32, number=4)
    o_PJGGLEJCEBN = proto.Field(proto.UINT32, number=5)
    o_GOHJFLKKLLE = proto.RepeatedField(proto.UINT32, number=6)
    o_MPJOLFCFFDB = proto.RepeatedField(proto.UINT32, number=7)
    o_PNHPCPEDPAI = proto.RepeatedField(proto.UINT32, number=8)
    o_AHAFFLAOBCI = proto.RepeatedField(proto.UINT32, number=9)
    o_BDGMINLINJB = proto.RepeatedField(proto.UINT32, number=10)
    o_GLPDGEKNMCJ = proto.RepeatedField(proto.UINT32, number=11)
    o_BACEEIGBLNO = proto.RepeatedField(proto.UINT32, number=12)
    o_DFACDBKELDC = proto.RepeatedField(proto.UINT32, number=13)
    o_DMKMBKFFBKC = proto.RepeatedField(proto.UINT32, number=14)
    o_HEJJBDJNGBL = proto.RepeatedField(proto.UINT32, number=15)
    o_KEIJOPGNPMN = proto.MapField(proto.UINT32, proto.UINT32, number=16)
    o_MEECOLOLNNA = proto.MapField(proto.UINT32, proto.UINT32, number=17)

class GeopoliticalCustomizeUnitByMapIdData(proto.Message):
    mapId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class GeopoliticalCustomizeUnitData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    mapId = proto.Field(proto.UINT32, number=2)
    unitId = proto.Field(proto.UINT32, number=3)
    o_DENOOPACJEK = proto.Field(proto.UINT32, number=4)
    o_MFNGHIAJNDI = proto.Field(proto.UINT32, number=5)
    o_JHOHKIJKNLL = proto.Field(proto.UINT32, number=6)
    hp = proto.Field(proto.UINT32, number=7)
    o_LBOPGLHCLCL = proto.Field(proto.UINT32, number=8)
    state = proto.Field(proto.UINT32, number=9)
    o_DMEOMNKHKHE = proto.Field(proto.UINT32, number=10)
    o_PGGLDPPDAPF = proto.Field(proto.UINT32, number=11)

class GeopoliticalEffectData(proto.Message):
    o_FMPMMJPEFDB = proto.Field(proto.UINT32, number=1)
    o_CICGEKAAINA = proto.Field(proto.STRING, number=2)
    effectType = proto.Field(proto.UINT32, number=3)
    param1 = proto.Field(proto.UINT32, number=4)
    param2 = proto.Field(proto.UINT32, number=5)
    o_JGCBOAKJOEJ = proto.Field(proto.UINT32, number=6)
    o_BLEDPHLAIPF = proto.Field(proto.UINT32, number=7)

class GeopoliticalEnemyDeckData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    o_GLPDGEKNMCJ = proto.Field(proto.UINT32, number=2)
    o_ICAHKAIBOKI = proto.Field(proto.UINT32, number=3)
    o_KHMAJCIPCOO = proto.Field(proto.UINT32, number=4)

class GeopoliticalMapByMapIdData(proto.Message):
    mapId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class GeopoliticalMapData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    mapId = proto.Field(proto.UINT32, number=2)
    o_IHPCMAOFKFF = proto.RepeatedField(proto.UINT32, number=3)
    o_MFNGHIAJNDI = proto.Field(proto.UINT32, number=4)
    o_JHOHKIJKNLL = proto.Field(proto.UINT32, number=5)
    o_FBPAEOGMIHF = proto.Field(proto.UINT32, number=6)

class GeopoliticalPreRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rewardGroup = proto.Field(proto.UINT32, number=2)
    taskDes = proto.Field(proto.STRING, number=3)
    conditionClass = proto.Field(proto.UINT32, number=4)
    conditionNum = proto.Field(proto.UINT32, number=5)
    rewardList = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    o_LEHPIIMPBOP = proto.Field(proto.UINT32, number=7)

class GeopoliticalSkillData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    skillName = proto.Field(proto.STRING, number=2)
    skillDescription = proto.Field(proto.STRING, number=3)
    icon = proto.Field(proto.STRING, number=4)
    level = proto.Field(proto.UINT32, number=5)
    o_CHBNNPDFJMP = proto.Field(proto.UINT32, number=6)
    o_CNKAJJCMOLA = proto.Field(proto.STRING, number=7)

class GeopoliticalStageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    stageType = proto.Field(proto.UINT32, number=3)
    o_LLKGDDMIOAL = proto.Field(proto.UINT32, number=4)
    level = proto.Field(proto.UINT32, number=5)
    name = proto.Field(proto.STRING, number=6)
    des = proto.Field(proto.STRING, number=7)
    icon = proto.Field(proto.STRING, number=8)
    o_LBFPKIPPFLG = proto.Field(proto.UINT32, number=9)
    o_AIEACIFJGOB = proto.Field(proto.UINT32, number=10)
    o_IKFLHKLNEIJ = proto.Field(proto.STRING, number=11)
    mapId = proto.Field(proto.UINT32, number=12)
    o_EADIKJDEINF = proto.Field(proto.UINT32, number=13)
    o_MOFGBIEMPDO = proto.Field(proto.UINT32, number=14)
    o_GOMBAEBNCIG = proto.Field(proto.UINT32, number=15)
    o_IAFBMINNIDF = proto.Field(proto.UINT32, number=16)
    o_GLPDGEKNMCJ = proto.Field(proto.UINT32, number=17)
    o_MLJMOMPBEPL = proto.MapField(proto.UINT32, proto.UINT32, number=18)
    o_NFPFCICFPIM = proto.MapField(proto.UINT32, proto.UINT32, number=19)
    o_ODHPHNIGCLA = proto.MapField(proto.UINT32, proto.UINT32, number=20)
    o_ACHJFPAGGDO = proto.Field(proto.UINT32, number=21)
    o_OBMHBLDJGPO = proto.Field(proto.STRING, number=22)
    o_EDIMLDHLDMO = proto.MapField(proto.UINT32, proto.UINT32, number=23)
    o_JPFIKFPICAP = proto.MapField(proto.UINT32, proto.UINT32, number=24)

class GeopoliticalTaskParameterByTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class GeopoliticalTaskParameterData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    o_MCIGIGIOMFP = proto.Field(proto.UINT32, number=2)
    o_DAMHJECINOD = proto.RepeatedField(proto.UINT32, number=3)
    conditionNum = proto.Field(proto.UINT32, number=4)
    conditionId = proto.Field(proto.UINT32, number=5)
    type = proto.Field(proto.UINT32, number=6)

class GlobalConfigData(proto.Message):
    intToFloat = proto.Field(proto.INT32, number=1)
    comboRate = proto.RepeatedField(proto.DOUBLE, number=2)
    pdDamageRate = proto.Field(proto.DOUBLE, number=3)
    pdHitRate = proto.Field(proto.DOUBLE, number=4)
    pdDodgeRate = proto.Field(proto.DOUBLE, number=5)
    normalDamageRate = proto.Field(proto.DOUBLE, number=6)
    coverDodgeRate = proto.Field(proto.DOUBLE, number=7)
    coverArmorRate = proto.Field(proto.DOUBLE, number=8)
    jointAttackDelay = proto.Field(proto.INT32, number=9)
    jointCutinTime = proto.Field(proto.INT32, number=10)
    turnCutinTime = proto.Field(proto.DOUBLE, number=11)
    maxCritRate = proto.Field(proto.DOUBLE, number=12)
    baseCritDamage = proto.Field(proto.DOUBLE, number=13)
    baseHitRate = proto.Field(proto.DOUBLE, number=14)
    maxSkillNum = proto.Field(proto.INT32, number=15)
    fakeFireFrame = proto.Field(proto.INT32, number=16)
    fakeFireFrameSquence = proto.RepeatedField(proto.INT32, number=17)
    visablePointRange = proto.Field(proto.DOUBLE, number=18)
    maxDistance = proto.Field(proto.INT32, number=19)
    minFramesOnHurt = proto.Field(proto.INT32, number=20)
    terrainBlockPower = proto.Field(proto.INT32, number=21)
    terrainClimbHight = proto.RepeatedField(proto.DOUBLE, number=22)
    enemyMaxTurninjured = proto.Field(proto.INT32, number=23)
    gunTypeEn = proto.RepeatedField(proto.STRING, number=24)
    gunMaxUpgrade = proto.Field(proto.INT32, number=25)
    equipCategoryStrList = proto.RepeatedField(proto.INT32, number=26)
    equipTypeStrList = proto.RepeatedField(proto.STRING, number=27)
    skillFillColor = proto.RepeatedField(proto.INT32, number=28)
    figuresClimbTime = proto.Field(proto.INT32, number=29)
    figuremClimbTime = proto.Field(proto.INT32, number=30)
    figurelClimbTime = proto.Field(proto.INT32, number=31)
    figuremsClimbTime = proto.Field(proto.INT32, number=32)
    figuremmClimbTime = proto.Field(proto.INT32, number=33)
    figuremlClimbTime = proto.Field(proto.INT32, number=34)
    figuremcClimbTime = proto.Field(proto.INT32, number=35)
    figuremfClimbTime = proto.Field(proto.INT32, number=36)
    figuresClimbdownTime = proto.Field(proto.INT32, number=37)
    figuremClimbdownTime = proto.Field(proto.INT32, number=38)
    figurelClimbdownTime = proto.Field(proto.INT32, number=39)
    figuremsClimbdownTime = proto.Field(proto.INT32, number=40)
    figuremmClimbdownTime = proto.Field(proto.INT32, number=41)
    figuremlClimbdownTime = proto.Field(proto.INT32, number=42)
    figuremcClimbdownTime = proto.Field(proto.INT32, number=43)
    figuremfClimbdownTime = proto.Field(proto.INT32, number=44)
    overseeTimeWaitForPause = proto.Field(proto.DOUBLE, number=45)
    overseeTimePause = proto.Field(proto.DOUBLE, number=46)
    iKHeightThreshold = proto.Field(proto.DOUBLE, number=47)
    iKHeightThresholdMax = proto.Field(proto.DOUBLE, number=48)
    iKHeightThresholdMin = proto.Field(proto.DOUBLE, number=49)
    iKActiveTime = proto.Field(proto.DOUBLE, number=50)
    modelScriptRootpath = proto.Field(proto.STRING, number=51)
    gunQualityColor1 = proto.RepeatedField(proto.STRING, number=52)
    gunQualityColor2 = proto.RepeatedField(proto.STRING, number=53)
    qualityName = proto.RepeatedField(proto.STRING, number=54)
    gunFatigueColor = proto.RepeatedField(proto.STRING, number=55)
    gunFatigueChange = proto.RepeatedField(proto.STRING, number=56)
    gunFatigueIcon = proto.RepeatedField(proto.STRING, number=57)
    gunHPColor = proto.RepeatedField(proto.STRING, number=58)
    gunHpChange = proto.Field(proto.DOUBLE, number=59)
    gunHpTextColor = proto.Field(proto.STRING, number=60)
    expLeaderRate = proto.Field(proto.DOUBLE, number=61)
    expMvpRate = proto.Field(proto.DOUBLE, number=62)
    gunMaxLv = proto.Field(proto.INT32, number=63)
    characterSwitchDelay = proto.Field(proto.INT32, number=64)
    lookatHorangleLimit = proto.Field(proto.INT32, number=65)
    lookatVerangleLimit = proto.Field(proto.INT32, number=66)
    lookatDistanceLimit = proto.Field(proto.INT32, number=67)
    lookatActiveTime = proto.Field(proto.DOUBLE, number=68)
    lookatMoveTime = proto.Field(proto.DOUBLE, number=69)
    activeSkillColor = proto.Field(proto.STRING, number=70)
    positiveSkillColor = proto.Field(proto.STRING, number=71)
    battleBornMinFrame = proto.Field(proto.INT32, number=72)
    battleBornMinBlendtime = proto.Field(proto.INT32, number=73)
    battleBuffShaderParaOriginal = proto.RepeatedField(proto.DOUBLE, number=74)
    battleBuffShaderParaRole = proto.RepeatedField(proto.DOUBLE, number=75)
    battleBuffShaderParaWeapon = proto.RepeatedField(proto.DOUBLE, number=76)
    gachaCostOne = proto.Field(proto.INT32, number=77)
    gachaCostTen = proto.Field(proto.INT32, number=78)
    stageVisionNightAddskill = proto.Field(proto.INT32, number=79)
    stageGuardrangeNightAddskill = proto.Field(proto.INT32, number=80)
    slgCaptureCameraTime = proto.Field(proto.INT32, number=81)
    campaignVisionSpotDistance = proto.Field(proto.DOUBLE, number=82)
    newPlayerFirstSlg = proto.Field(proto.INT32, number=83)
    newPlayerAvgBaseview = proto.Field(proto.INT32, number=84)
    newPlayerGuideSeq = proto.RepeatedField(proto.INT32, number=85)
    avgdialogueDelayed = proto.Field(proto.DOUBLE, number=86)
    simStamina = proto.Field(proto.INT32, number=87)
    staminaRegainTime = proto.Field(proto.INT32, number=88)
    staminaRegainAmount = proto.Field(proto.INT32, number=89)
    staminaCost = proto.Field(proto.INT32, number=90)
    staminaBuyOnce = proto.Field(proto.INT32, number=91)
    staminaBuyOneday = proto.Field(proto.INT32, number=92)
    extraStamina = proto.Field(proto.INT32, number=93)
    staminaStoreItem = proto.RepeatedField(proto.INT32, number=94)
    simtrainingTimesId = proto.Field(proto.INT32, number=95)
    simtrainingTimes = proto.Field(proto.INT32, number=96)
    cameraClimbModiferAheadFrameUp = proto.Field(proto.INT32, number=97)
    cameraClimbModiferAheadFrameDown = proto.Field(proto.INT32, number=98)
    cameraClimbModiferTotalFrameUp = proto.Field(proto.INT32, number=99)
    cameraClimbModiferTotalFrameDown = proto.Field(proto.INT32, number=100)
    gunLvExpItemList = proto.RepeatedField(proto.INT32, number=101)
    overflowMailId = proto.Field(proto.INT32, number=102)
    hairDefaultColor = proto.RepeatedField(proto.STRING, number=103)
    eyeDefaultColor = proto.RepeatedField(proto.STRING, number=104)
    decorationDefaultColor = proto.RepeatedField(proto.STRING, number=105)
    interactionTimes = proto.Field(proto.INT32, number=106)
    interactionRewards = proto.RepeatedField(proto.INT32, number=107)
    interactionRewardsNpc = proto.Field(proto.STRING, number=108)
    defaultAdjutant = proto.Field(proto.INT32, number=109)
    terrainHighlandCoverID = proto.Field(proto.INT32, number=110)
    figureTypeName = proto.RepeatedField(proto.STRING, number=111)
    reloadTime = proto.Field(proto.INT32, number=112)
    switchTime = proto.Field(proto.INT32, number=113)
    onslayTime = proto.Field(proto.INT32, number=114)
    stageSpecialMarkIcon = proto.RepeatedField(proto.STRING, number=115)
    stageSpecialMarkHint = proto.RepeatedField(proto.INT32, number=116)
    slgFinalshotBullettimePara = proto.RepeatedField(proto.INT32, number=117)
    hitRateMin = proto.Field(proto.INT32, number=118)
    characterOutcoverTime = proto.Field(proto.INT32, number=119)
    storyDefaultCameraPosition = proto.Field(proto.STRING, number=120)
    storyDefaultCameraRotation = proto.Field(proto.STRING, number=121)
    charShowPropertyFold = proto.RepeatedField(proto.INT32, number=122)
    slgEnemyinfoPositionOffset = proto.RepeatedField(proto.DOUBLE, number=123)
    weeklyItem = proto.Field(proto.INT32, number=124)
    slgPreparationFov = proto.Field(proto.DOUBLE, number=125)
    slgPreparationXangle = proto.Field(proto.DOUBLE, number=126)
    slgPreparationIconSize = proto.Field(proto.DOUBLE, number=127)
    slgPreparationZoomRange = proto.RepeatedField(proto.DOUBLE, number=128)
    slgPreparationInitZoom = proto.Field(proto.DOUBLE, number=129)
    slgPreparationTurnSpeed = proto.Field(proto.DOUBLE, number=130)
    slgPreparationTurnLerpTime = proto.Field(proto.DOUBLE, number=131)
    slgPreparationSelectLerpTime = proto.Field(proto.DOUBLE, number=132)
    slgPreparationTransTime = proto.Field(proto.DOUBLE, number=133)
    groundDodgeRate = proto.Field(proto.INT32, number=134)
    groundScratchRate = proto.Field(proto.INT32, number=135)
    defaultHighCover = proto.Field(proto.INT32, number=136)
    transparentFadeValue = proto.Field(proto.DOUBLE, number=137)
    transparentFadeTime = proto.Field(proto.DOUBLE, number=138)
    sphereFadeRadius = proto.Field(proto.DOUBLE, number=139)
    nameplateBuffNums = proto.Field(proto.INT32, number=140)
    limitDispatch = proto.Field(proto.INT32, number=141)
    gunExceedlevel = proto.Field(proto.INT32, number=142)
    commanderLevel = proto.Field(proto.INT32, number=143)
    guildDonationLimit = proto.Field(proto.INT32, number=144)
    memberDonationLimit = proto.Field(proto.INT32, number=145)
    guildCreationPrice = proto.Field(proto.STRING, number=146)
    guildCreationLevel = proto.Field(proto.INT32, number=147)
    guildannouncementLimit = proto.Field(proto.INT32, number=148)
    overwatchBuffId = proto.Field(proto.INT32, number=149)
    guildremoveMailtemp = proto.Field(proto.INT32, number=150)
    guilddisbandMailtemp = proto.Field(proto.INT32, number=151)
    guildrewardMailtemp = proto.Field(proto.INT32, number=152)
    guildiconaId = proto.Field(proto.INT32, number=153)
    guildiconbId = proto.Field(proto.INT32, number=154)
    transitionTolerance = proto.Field(proto.INT32, number=155)
    skillPerformPos = proto.RepeatedField(proto.INT32, number=156)
    skillFadeInTime = proto.Field(proto.INT32, number=157)
    skillFadeOutTime = proto.Field(proto.INT32, number=158)
    commonhinttipsDelaytime = proto.Field(proto.INT32, number=159)
    commonhintDelaytime = proto.Field(proto.INT32, number=160)
    commongradeName = proto.RepeatedField(proto.STRING, number=161)
    equipFactoryShowResID = proto.RepeatedField(proto.INT32, number=162)
    gunLevelUpItemAddSpeed = proto.Field(proto.STRING, number=163)
    mailMaxlimit = proto.Field(proto.INT32, number=164)
    hardmodeDailytimes = proto.Field(proto.INT32, number=165)
    selectedStoryPosition = proto.Field(proto.DOUBLE, number=166)
    selectedStoryForceposition = proto.Field(proto.DOUBLE, number=167)
    transitionDelay = proto.Field(proto.INT32, number=168)
    errorcheckMoveSpeed = proto.Field(proto.INT32, number=169)
    bannerGap = proto.Field(proto.INT32, number=170)
    bannerSpeed = proto.Field(proto.INT32, number=171)
    achieveTagName = proto.Field(proto.STRING, number=172)
    storeStartTag = proto.Field(proto.INT32, number=173)
    slgPreparationOpeningVideo = proto.Field(proto.STRING, number=174)
    slgPreparationOpeningStage = proto.Field(proto.INT32, number=175)
    colliderRadius = proto.Field(proto.DOUBLE, number=176)
    edgeColliderWidth = proto.Field(proto.DOUBLE, number=177)
    collisionRoleHeight = proto.Field(proto.DOUBLE, number=178)
    coverCollierHeight = proto.Field(proto.DOUBLE, number=179)
    gridborderColour = proto.RepeatedField(proto.STRING, number=180)
    slgDoubleClick = proto.Field(proto.DOUBLE, number=181)
    hpGunbarColor = proto.Field(proto.STRING, number=182)
    hpEnemybarColor = proto.Field(proto.STRING, number=183)
    hpGunbarbgColor = proto.Field(proto.STRING, number=184)
    hpEnemybarbgColor = proto.Field(proto.STRING, number=185)
    loungeTypeYourMessageTime = proto.Field(proto.INT32, number=186)
    loungeNextMessageTime = proto.Field(proto.INT32, number=187)
    loungeChangeTheName = proto.Field(proto.INT32, number=188)
    loungeOtherMessageTime = proto.Field(proto.INT32, number=189)
    loungeNpcNextMessageTime = proto.Field(proto.INT32, number=190)
    loungeNpcMessageNumber = proto.Field(proto.INT32, number=191)
    loungeNpcReplyMessageTime = proto.Field(proto.INT32, number=192)
    loungeNpcReplyMessageTimeMin = proto.Field(proto.INT32, number=193)
    loungeNpcReplyMessageTimeMax = proto.Field(proto.INT32, number=194)
    battleTraplist = proto.RepeatedField(proto.INT32, number=195)
    loungeFavorEverydayFirst = proto.Field(proto.INT32, number=196)
    loungeStoreBillboardTime = proto.Field(proto.INT32, number=197)
    loungeCost = proto.RepeatedField(proto.INT32, number=198)
    propertyPercentMap = proto.MapField(proto.STRING, proto.STRING, number=199)
    pvpLimitMax = proto.Field(proto.INT32, number=200)
    pvpLimitCoefficient = proto.Field(proto.DOUBLE, number=201)
    guideSlgFightPropertyPlayer2WillValue = proto.Field(proto.INT32, number=202)
    guideSlgFightPropertyPlayer1WillValue = proto.Field(proto.INT32, number=203)
    shaderEffectPriority = proto.RepeatedField(proto.INT32, number=204)
    exclusive = proto.Field(proto.DOUBLE, number=205)
    battlepassBase = proto.Field(proto.INT32, number=206)
    battlepassSenior = proto.Field(proto.INT32, number=207)
    battlepassGrade = proto.Field(proto.INT32, number=208)
    battlepassExperience = proto.Field(proto.INT32, number=209)
    battlepassUpgradation = proto.Field(proto.INT32, number=210)
    mailMaxlimitCustom = proto.Field(proto.INT32, number=211)
    mailMaxlimitTemplate = proto.Field(proto.INT32, number=212)
    stageHidePresetTag = proto.RepeatedField(proto.UINT32, number=213)
    stageForceCameraTypeShow = proto.RepeatedField(proto.INT32, number=214)
    godCameraGlobalSelectorLabel = proto.Field(proto.STRING, number=215)
    godCameraFirstPlayerSelectorLabel = proto.Field(proto.STRING, number=216)
    totalFootstepId = proto.RepeatedField(proto.INT32, number=217)
    totalClothId = proto.RepeatedField(proto.INT32, number=218)
    rechargeRebateMailTime = proto.Field(proto.INT64, number=219)
    weaponComposeLimit = proto.Field(proto.INT32, number=220)
    slgCinemashowPreroute = proto.Field(proto.BOOL, number=221)
    enemyExceedlevel = proto.Field(proto.BOOL, number=222)
    mailMaxAttachmentLen = proto.Field(proto.INT32, number=223)
    mailContantStringLen = proto.Field(proto.INT32, number=224)
    mailMaxPlaceholderNum = proto.Field(proto.INT32, number=225)
    mailMaxPlaceholderLen = proto.Field(proto.INT32, number=226)
    timeZoneNum = proto.Field(proto.INT32, number=227)
    gasSkillcheck = proto.Field(proto.STRING, number=228)
    weaponmodProperty = proto.RepeatedField(proto.INT32, number=229)
    crashLog = proto.Field(proto.INT32, number=230)

class GlobalDarkzoneData(proto.Message):
    darkzoneSp1Weight = proto.RepeatedField(proto.UINT32, number=1)
    darkzoneSp2Weight = proto.RepeatedField(proto.UINT32, number=2)
    darkzoneSp1Num = proto.Field(proto.UINT32, number=3)
    darkzoneSp2Num = proto.Field(proto.UINT32, number=4)
    leaveTime = proto.Field(proto.UINT32, number=5)
    leaveTimeWarning = proto.Field(proto.UINT32, number=6)
    leaveWeight = proto.Field(proto.UINT32, number=7)
    darkzoneFov = proto.RepeatedField(proto.UINT32, number=8)
    darkzoneGun = proto.RepeatedField(proto.UINT32, number=9)
    darkzoneGunArgs = proto.RepeatedField(proto.UINT32, number=10)
    leaveWait = proto.Field(proto.UINT32, number=11)
    darkzoneEnergylimit = proto.Field(proto.UINT32, number=12)
    darkzoneEnergyrecover = proto.Field(proto.UINT32, number=13)
    storehouse = proto.Field(proto.UINT32, number=14)
    darkzoneShunyiDistance = proto.Field(proto.DOUBLE, number=15)
    darkzoneShunyiTime = proto.Field(proto.UINT32, number=16)
    darkzoneStrengthShunyicost = proto.Field(proto.UINT32, number=17)
    darkzoneSLGStageId = proto.Field(proto.UINT32, number=18)
    darkzoneSLGXLength = proto.Field(proto.UINT32, number=19)
    darkzoneSLGZLength = proto.Field(proto.UINT32, number=20)
    darkzoneProtectTime = proto.Field(proto.UINT32, number=21)
    darkzoneWarningtime = proto.Field(proto.UINT32, number=22)
    darkzoneOpentime = proto.Field(proto.STRING, number=23)
    darkzonePvptimeCountdown = proto.Field(proto.UINT32, number=24)
    darkzonePvproundCountdown = proto.Field(proto.UINT32, number=25)
    darkzoneBattleMinreturntime = proto.Field(proto.UINT32, number=26)
    darkzoneBattleReturntimeproportion = proto.Field(proto.STRING, number=27)
    itemStatistics = proto.Field(proto.UINT32, number=28)
    itemValue = proto.Field(proto.UINT32, number=29)
    itemValueLimit = proto.Field(proto.UINT32, number=30)
    darkzoneMonsterBattle = proto.Field(proto.STRING, number=31)
    darkzoneDailyquestFinishLimit = proto.Field(proto.UINT32, number=32)
    questAcceptLimit = proto.MapField(proto.UINT32, proto.UINT32, number=33)
    questRefresh = proto.Field(proto.UINT32, number=34)
    matchBagSurplusLattice = proto.Field(proto.UINT32, number=35)
    darkzoneLeaveItemsequence = proto.RepeatedField(proto.UINT32, number=36)
    darkzoneLeaveDzitemsequence = proto.RepeatedField(proto.UINT32, number=37)
    darkzoneSlgPresetTime = proto.Field(proto.UINT32, number=38)
    darkzoneGriderrorInitialgrid = proto.Field(proto.UINT32, number=39)
    darkzoneGriderrorEmptygrid = proto.Field(proto.UINT32, number=40)
    darkzoneGriderrorConnectedregion = proto.Field(proto.UINT32, number=41)
    loadingTime = proto.Field(proto.UINT32, number=42)
    darkzoneNpcMaxFavorLevel = proto.Field(proto.UINT32, number=43)
    boxLimitOpenTime = proto.Field(proto.UINT32, number=44)
    batchSellLimit = proto.Field(proto.UINT32, number=45)
    darkzoneStorePileLimit = proto.Field(proto.UINT32, number=46)
    loadingTips = proto.Field(proto.STRING, number=47)
    darkzoneSupplydemand = proto.Field(proto.UINT32, number=48)
    darkzoneGrassSmoothTransition = proto.Field(proto.UINT32, number=49)
    transparentFadeValue = proto.Field(proto.DOUBLE, number=50)
    transparentFadeTime = proto.Field(proto.DOUBLE, number=51)
    sphereFadeRadius = proto.Field(proto.DOUBLE, number=52)
    speedClimbup = proto.Field(proto.UINT32, number=53)
    speedClimbdown = proto.Field(proto.UINT32, number=54)
    highlandVisionBoost = proto.Field(proto.UINT32, number=55)
    highlandCameraBoost = proto.Field(proto.UINT32, number=56)
    storehouseUnlock = proto.Field(proto.STRING, number=57)
    maxChaseNum = proto.Field(proto.UINT32, number=58)
    darkzoneNormalCameraview = proto.Field(proto.DOUBLE, number=59)
    darkzoneAimCameraview = proto.Field(proto.UINT32, number=60)
    darkzoneAimVisualadd = proto.Field(proto.DOUBLE, number=61)
    darkzoneMapOffset = proto.Field(proto.STRING, number=62)
    darkzoneMapScale = proto.Field(proto.DOUBLE, number=63)
    darkzoneMapZoomBenchmarkMax = proto.Field(proto.UINT32, number=64)
    darkzoneMapZoomBenchmarkMin = proto.Field(proto.UINT32, number=65)
    darkzoneMapZoomLimit = proto.Field(proto.STRING, number=66)
    darkzoneMapZoomDefault = proto.Field(proto.DOUBLE, number=67)
    darkzoneOfflineFailuretime = proto.Field(proto.UINT32, number=68)
    darkzoneAiSleepTime = proto.Field(proto.UINT32, number=69)
    darkzoneProductLimit = proto.Field(proto.UINT32, number=70)
    darkzoneFueladd = proto.Field(proto.UINT32, number=71)
    darkzoneAiSectorVisionHeight = proto.Field(proto.DOUBLE, number=72)
    darkzoneInteractObjInterval = proto.Field(proto.UINT32, number=73)
    darkzoneFloorObjInterval = proto.Field(proto.UINT32, number=74)
    darkzoneMinimapDefaultZoom = proto.Field(proto.DOUBLE, number=75)
    darkzoneMinimapRange = proto.Field(proto.DOUBLE, number=76)
    darkzoneMinimapIconZoom = proto.Field(proto.DOUBLE, number=77)
    darkzoneMapIconZoom = proto.Field(proto.DOUBLE, number=78)
    darkzoneAoiMaxRange = proto.Field(proto.INT32, number=79)
    darkzoneMapZoneRangeBase = proto.RepeatedField(proto.UINT32, number=80)
    darkzoneMapZoneRangeVertical = proto.RepeatedField(proto.UINT32, number=81)
    darkzoneMapZoneRangeHorizontal = proto.RepeatedField(proto.UINT32, number=82)
    darkzoneInteractObjCheckStrength = proto.Field(proto.UINT32, number=83)
    darkzoneMonsterLv = proto.Field(proto.STRING, number=84)
    dzProtectTime = proto.RepeatedField(proto.UINT32, number=85)
    aiTimeScale = proto.Field(proto.UINT32, number=86)
    dzDoorChanceTrans = proto.Field(proto.UINT32, number=87)
    dzDoorOpenMinEnergy = proto.Field(proto.UINT32, number=88)
    darkzoneEnemyWarn = proto.Field(proto.UINT32, number=89)
    sentinelValuesDown = proto.MapField(proto.UINT32, proto.UINT32, number=90)
    dzCoverDistance = proto.Field(proto.UINT32, number=91)
    dzShootBackRange = proto.Field(proto.INT32, number=92)
    dzShootRangeEffect = proto.RepeatedField(proto.UINT32, number=93)
    dzEntrySlgMonsterIcon = proto.Field(proto.STRING, number=94)
    dzFogSwitch = proto.Field(proto.UINT32, number=95)
    dzGlobalWarnValue = proto.Field(proto.UINT32, number=96)
    dzGlobalWarnMaxLevel = proto.Field(proto.UINT32, number=97)
    dzEnableCoverTransfer = proto.Field(proto.UINT32, number=98)
    dzDeployPlayerD1 = proto.Field(proto.UINT32, number=99)
    dzDeployPlayerD2 = proto.Field(proto.UINT32, number=100)
    dzChargeInSlgGridEffect = proto.Field(proto.STRING, number=101)
    dzChargeInSlgGridEffectLifetime = proto.Field(proto.STRING, number=102)
    dzChargeCameraMoveDuration = proto.Field(proto.UINT32, number=103)
    dzAttackCameraSwitch = proto.Field(proto.UINT32, number=104)
    dzEnemyCloseVision = proto.Field(proto.UINT32, number=105)
    dzGuideVerticalDistance = proto.Field(proto.UINT32, number=106)
    dzGuideHorizonDistance = proto.Field(proto.UINT32, number=107)
    dzGuideIconAlpha = proto.Field(proto.UINT32, number=108)
    dzCameraCutDistance = proto.Field(proto.UINT32, number=109)
    dzDeployTypeDefault = proto.Field(proto.UINT32, number=110)
    dzFogSwitchSeparate = proto.Field(proto.UINT32, number=111)
    dzEnemySwingAngle = proto.Field(proto.UINT32, number=112)
    dzEnemySwingPeriod = proto.Field(proto.UINT32, number=113)
    dzGuideInteractIcon = proto.Field(proto.STRING, number=114)
    dzGuideMonsterIcon = proto.Field(proto.STRING, number=115)
    dzGuideLocationIcon = proto.Field(proto.STRING, number=116)
    dzPlayerDropInteractionId = proto.Field(proto.UINT32, number=117)
    dzAutoPickInteractionId = proto.Field(proto.UINT32, number=118)
    dzMonsterDropInteractionId = proto.Field(proto.UINT32, number=119)
    dzShootBaseDamage = proto.MapField(proto.UINT32, proto.UINT32, number=120)
    playerShootSkillTest = proto.Field(proto.UINT32, number=121)
    dzCameraLengthMin = proto.Field(proto.UINT32, number=122)
    dzCameraLengthMax = proto.Field(proto.UINT32, number=123)
    dzCameraRangeMin = proto.Field(proto.UINT32, number=124)
    dzCameraRangeMax = proto.Field(proto.UINT32, number=125)
    questTroopsNum = proto.Field(proto.INT32, number=126)
    dzFireGridBarBuff = proto.Field(proto.STRING, number=127)
    dzIceGridBarBuff = proto.Field(proto.STRING, number=128)
    dzPoisonGridBarBuff = proto.Field(proto.STRING, number=129)
    dzWaterGridBarBuff = proto.Field(proto.STRING, number=130)
    dzElectricGridBarBuff = proto.Field(proto.STRING, number=131)
    playerBoxParam = proto.Field(proto.UINT32, number=132)
    absorbBoxParam = proto.Field(proto.STRING, number=133)
    dzCameraFarClipPlane = proto.Field(proto.UINT32, number=134)
    dzEscapeRoomBuff = proto.Field(proto.UINT32, number=135)
    dzBeaconDistanceMax = proto.Field(proto.UINT32, number=136)
    dzBeaconDistanceMin = proto.Field(proto.UINT32, number=137)
    dzKillNormalEnemyAddOxygen = proto.Field(proto.UINT32, number=138)
    dzKillEliteEnemyAddOxygen = proto.Field(proto.UINT32, number=139)
    dzKillBossEnemyAddOxygen = proto.Field(proto.UINT32, number=140)
    dzTutorialCameraParam = proto.Field(proto.UINT32, number=141)
    dzRoomDeceraseGlobalWarn = proto.MapField(proto.UINT32, proto.UINT32, number=142)
    dzGlobalWarnDecreaseByEnemyTypeThreshold = proto.MapField(proto.UINT32, proto.UINT32, number=143)
    dzGlobalWarnDecreaseByEnemyType = proto.MapField(proto.UINT32, proto.UINT32, number=144)
    dzPlayerRootmotionBaseSpeed = proto.Field(proto.UINT32, number=145)
    dzBuffReason = proto.MapField(proto.UINT32, proto.UINT32, number=146)
    dzCameraDragX = proto.Field(proto.UINT32, number=147)
    dzCameraDragY = proto.Field(proto.UINT32, number=148)
    dzCoverDistanceClient = proto.Field(proto.UINT32, number=149)
    dzCameraGrassSet = proto.Field(proto.UINT32, number=150)
    dzGlobalWarnLv4Hint = proto.RepeatedField(proto.UINT32, number=151)
    dzGlobalWarnLv3Hint = proto.RepeatedField(proto.UINT32, number=152)
    dzGlobalWarnLv2Hint = proto.RepeatedField(proto.UINT32, number=153)
    dzGlobalWarnLv1Hint = proto.RepeatedField(proto.UINT32, number=154)
    dzCoverShootEffect = proto.RepeatedField(proto.UINT32, number=155)
    dzTutorialTriggerRange = proto.Field(proto.UINT32, number=156)
    dzShootRangeEffectMin = proto.Field(proto.UINT32, number=157)
    frontCheckAngle = proto.Field(proto.UINT32, number=158)
    dzGuideRangeX = proto.Field(proto.DOUBLE, number=159)
    dzGuideRangeY = proto.Field(proto.DOUBLE, number=160)
    dzEventGuardBuff = proto.RepeatedField(proto.UINT32, number=161)
    dzAttackedEffect = proto.RepeatedField(proto.UINT32, number=162)
    dzAttackedRules = proto.Field(proto.UINT32, number=163)
    dzEnemyRadius = proto.Field(proto.UINT32, number=164)
    dzHighRisk = proto.RepeatedField(proto.UINT32, number=165)
    dzEnableSearch = proto.Field(proto.UINT32, number=166)
    dzMissionTimeLimit = proto.Field(proto.UINT32, number=167)
    dzSLGCameraAngle = proto.Field(proto.UINT32, number=168)
    dzLostProtectTime = proto.Field(proto.UINT32, number=169)
    dzCarrierGuide = proto.RepeatedField(proto.UINT32, number=170)
    dzBattleCameraLimit = proto.Field(proto.DOUBLE, number=171)
    dzCameraMoveProgram = proto.Field(proto.UINT32, number=172)
    dzBattleRange = proto.Field(proto.UINT32, number=173)
    dzCarrierReadyToWin = proto.Field(proto.UINT32, number=174)
    dzCarrierStop = proto.Field(proto.UINT32, number=175)
    dzCarrierLostRange = proto.Field(proto.UINT32, number=176)
    dzCarrierHotWarning = proto.Field(proto.UINT32, number=177)
    carrierInteractRange = proto.Field(proto.UINT32, number=178)
    carrierRangeDiffuse = proto.Field(proto.UINT32, number=179)
    chestWaitingTime = proto.Field(proto.UINT32, number=180)
    chestLimitShow = proto.Field(proto.UINT32, number=181)
    materialStripTime = proto.Field(proto.UINT32, number=182)
    dzCarpointShow = proto.Field(proto.UINT32, number=183)
    dzLostLimitTime = proto.Field(proto.UINT32, number=184)

class GlobalPerformData(proto.Message):
    turnCutinTime = proto.Field(proto.DOUBLE, number=1)
    minFramesOnHurt = proto.Field(proto.INT32, number=2)
    lgpLeftHand = proto.Field(proto.INT32, number=3)
    lgpRightHand = proto.Field(proto.INT32, number=4)
    lgpHead = proto.Field(proto.INT32, number=5)
    lgpChest = proto.Field(proto.INT32, number=6)
    lgpLeftWeapon = proto.Field(proto.INT32, number=7)
    lgpRightWeapon = proto.Field(proto.INT32, number=8)
    lgpLeftWeaponMuzzle = proto.Field(proto.INT32, number=9)
    lgpRightWeaponMuzzle = proto.Field(proto.INT32, number=10)
    lgpRoot = proto.Field(proto.INT32, number=11)
    lgpAimIk = proto.Field(proto.INT32, number=12)
    lgpMesh = proto.Field(proto.INT32, number=13)
    lgpHeadpoint = proto.Field(proto.INT32, number=14)
    lgpHppoint = proto.Field(proto.INT32, number=15)
    figuresClimbTime = proto.Field(proto.INT32, number=16)
    figuremClimbTime = proto.Field(proto.INT32, number=17)
    figurelClimbTime = proto.Field(proto.INT32, number=18)
    figuremsClimbTime = proto.Field(proto.INT32, number=19)
    figuremmClimbTime = proto.Field(proto.INT32, number=20)
    figuremlClimbTime = proto.Field(proto.INT32, number=21)
    figuremcClimbTime = proto.Field(proto.INT32, number=22)
    figuremfClimbTime = proto.Field(proto.INT32, number=23)
    figuresClimbdownTime = proto.Field(proto.INT32, number=24)
    figuremClimbdownTime = proto.Field(proto.INT32, number=25)
    figurelClimbdownTime = proto.Field(proto.INT32, number=26)
    figuremsClimbdownTime = proto.Field(proto.INT32, number=27)
    figuremmClimbdownTime = proto.Field(proto.INT32, number=28)
    figuremlClimbdownTime = proto.Field(proto.INT32, number=29)
    figuremcClimbdownTime = proto.Field(proto.INT32, number=30)
    figuremfClimbdownTime = proto.Field(proto.INT32, number=31)
    battleBornMinFrame = proto.Field(proto.INT32, number=32)
    battleBornMinBlendtime = proto.Field(proto.INT32, number=33)
    reinforceAirdropFrame = proto.Field(proto.INT32, number=34)
    slgCaptureCameraTime = proto.Field(proto.INT32, number=35)
    cameraClimbModiferAheadFrameUp = proto.Field(proto.INT32, number=36)
    cameraClimbModiferAheadFrameDown = proto.Field(proto.INT32, number=37)
    cameraClimbModiferTotalFrameUp = proto.Field(proto.INT32, number=38)
    cameraClimbModiferTotalFrameDown = proto.Field(proto.INT32, number=39)
    reloadTime = proto.Field(proto.INT32, number=40)
    switchTime = proto.Field(proto.INT32, number=41)
    onslayTime = proto.Field(proto.INT32, number=42)
    slgPreparationFov = proto.Field(proto.DOUBLE, number=43)
    slgPreparationXangle = proto.Field(proto.DOUBLE, number=44)
    slgPreparationIconSize = proto.Field(proto.DOUBLE, number=45)
    slgPreparationZoomRange = proto.RepeatedField(proto.DOUBLE, number=46)
    slgPreparationInitZoom = proto.Field(proto.DOUBLE, number=47)
    slgPreparationTurnSpeed = proto.Field(proto.DOUBLE, number=48)
    slgPreparationTurnLerpTime = proto.Field(proto.DOUBLE, number=49)
    slgPreparationSelectLerpTime = proto.Field(proto.DOUBLE, number=50)
    slgPreparationTransTime = proto.Field(proto.DOUBLE, number=51)
    transparentFadeValue = proto.Field(proto.DOUBLE, number=52)
    transparentFadeValueTps = proto.Field(proto.DOUBLE, number=53)
    transparentFadeTime = proto.Field(proto.DOUBLE, number=54)
    sphereFadeRadius = proto.Field(proto.DOUBLE, number=55)
    transitionTolerance = proto.Field(proto.INT32, number=56)
    xOffsetRange = proto.RepeatedField(proto.DOUBLE, number=57)
    yOffsetRange = proto.RepeatedField(proto.DOUBLE, number=58)
    zPlainOffsetRange = proto.RepeatedField(proto.DOUBLE, number=59)
    zHighlandOffsetRange = proto.RepeatedField(proto.DOUBLE, number=60)
    plainAdjustRange = proto.RepeatedField(proto.DOUBLE, number=61)
    highlandAdjustRange = proto.RepeatedField(proto.DOUBLE, number=62)
    transitionDelay = proto.Field(proto.INT32, number=63)
    godcamXAngleDis = proto.RepeatedField(proto.INT32, number=64)
    distanceInGod = proto.Field(proto.DOUBLE, number=65)
    godcamScaleSpd = proto.Field(proto.DOUBLE, number=66)
    godcamDisappearRange = proto.Field(proto.DOUBLE, number=67)
    godcamDisappearRefreshspd = proto.Field(proto.INT32, number=68)
    newOperatingmodeXAngleDis = proto.RepeatedField(proto.INT32, number=69)
    newOperatingmodeInitZoom = proto.Field(proto.DOUBLE, number=70)
    newOperatingmodeArea = proto.Field(proto.DOUBLE, number=71)
    newOperatingmodeAreaHorizontal = proto.Field(proto.DOUBLE, number=72)
    commandcamera1Range = proto.RepeatedField(proto.INT32, number=73)
    commandcamera1Speed = proto.Field(proto.UINT32, number=74)
    commandcamera1Delay = proto.Field(proto.UINT32, number=75)
    commandcamera2Range = proto.RepeatedField(proto.INT32, number=76)
    commandcamera2Speed = proto.Field(proto.UINT32, number=77)
    commandcamera2Delay = proto.Field(proto.UINT32, number=78)
    guideCamerafocusTime = proto.Field(proto.UINT32, number=79)
    singledeadTime = proto.Field(proto.INT32, number=80)
    multideadTime = proto.Field(proto.INT32, number=81)
    godHighlandHeight = proto.Field(proto.DOUBLE, number=82)
    dotdeadTime = proto.Field(proto.INT32, number=83)
    transparentTime = proto.Field(proto.INT32, number=84)
    godcamXAngleOption = proto.RepeatedField(proto.INT32, number=85)
    breakDuration = proto.Field(proto.UINT32, number=86)
    breakBuffDelay = proto.Field(proto.UINT32, number=87)
    orderPerformTime = proto.Field(proto.DOUBLE, number=88)
    freeCamAngle = proto.RepeatedField(proto.DOUBLE, number=89)
    freeCamUpoffest = proto.Field(proto.DOUBLE, number=90)
    movecamRectangleRange = proto.RepeatedField(proto.DOUBLE, number=91)
    godcamScreenOffset = proto.RepeatedField(proto.DOUBLE, number=92)
    longDistance = proto.Field(proto.INT32, number=93)
    trackFovRange = proto.RepeatedField(proto.DOUBLE, number=94)
    gridInTime = proto.Field(proto.DOUBLE, number=95)
    performanceWaitTime = proto.Field(proto.DOUBLE, number=96)
    slgCamerarotationAll = proto.Field(proto.INT32, number=97)
    slgCamerarotationDarkzone = proto.Field(proto.INT32, number=98)
    potentialAimTime = proto.Field(proto.DOUBLE, number=99)
    poptextFreezeTime = proto.Field(proto.INT32, number=100)
    darkzonetrackFovRange = proto.RepeatedField(proto.DOUBLE, number=101)
    gaussianblurMaxRadius = proto.Field(proto.DOUBLE, number=102)
    commandAdjutantCameraDefault = proto.RepeatedField(proto.DOUBLE, number=103)
    commandAssistantPosition1CameraDefault = proto.RepeatedField(proto.DOUBLE, number=104)
    commandAssistantPosition2CameraDefault = proto.RepeatedField(proto.DOUBLE, number=105)
    commandAssistantPosition3CameraDefault = proto.RepeatedField(proto.DOUBLE, number=106)
    commandBackgroundInsideCameraDefault = proto.RepeatedField(proto.DOUBLE, number=107)
    commandBackgroundOutsideCameraDefault = proto.RepeatedField(proto.DOUBLE, number=108)
    pVPSwitchTime = proto.Field(proto.INT32, number=109)
    interactionInfopanelCloseTime = proto.Field(proto.DOUBLE, number=110)
    playModeRatio = proto.RepeatedField(proto.DOUBLE, number=111)
    dzDistanceInGod = proto.Field(proto.INT32, number=112)
    unityFloatHeight1 = proto.Field(proto.DOUBLE, number=113)
    unityFloatHeight2 = proto.Field(proto.DOUBLE, number=114)
    floatingHeight = proto.Field(proto.DOUBLE, number=115)
    voidSpaceOffset = proto.Field(proto.DOUBLE, number=116)
    alarmStatusSwitchCamera = proto.Field(proto.DOUBLE, number=117)
    cameraBattleSpeed = proto.Field(proto.DOUBLE, number=118)
    cameraPremove = proto.Field(proto.DOUBLE, number=119)
    cameraDirectionSkill = proto.Field(proto.INT32, number=120)
    switchTimeMin = proto.Field(proto.INT32, number=121)
    cameraDirectionSkill3 = proto.Field(proto.INT32, number=122)
    cameraEnemyTogetherStart = proto.Field(proto.INT32, number=123)
    cameraEnemyTogetherEnd = proto.Field(proto.INT32, number=124)
    transparentLerpTime = proto.Field(proto.DOUBLE, number=125)
    transparentLerpColor = proto.Field(proto.STRING, number=126)
    fadeHeightTime = proto.Field(proto.DOUBLE, number=127)
    transparentFadeTimeTps = proto.Field(proto.DOUBLE, number=128)
    cameraPlayersOverChange = proto.Field(proto.BOOL, number=129)
    cameraTpsAim = proto.Field(proto.BOOL, number=130)
    cameraTpsFollowMindistance = proto.Field(proto.INT32, number=131)
    cameraBodyType = proto.RepeatedField(proto.STRING, number=132)
    o_JONAGGOPBMN = proto.Field(proto.DOUBLE, number=133)
    o_FGOFOOKIJOP = proto.Field(proto.INT32, number=134)

class GlobalSystemData(proto.Message):
    propertyDisplay = proto.RepeatedField(proto.STRING, number=1)
    playerTitleDefault = proto.Field(proto.UINT32, number=2)
    playerNameChangeCost = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    playerMedalDefault = proto.Field(proto.UINT32, number=4)
    playerAvatarFrameDefault = proto.Field(proto.UINT32, number=5)
    playerAvatarDefault = proto.Field(proto.UINT32, number=6)
    partBuffSeason = proto.RepeatedField(proto.UINT32, number=7)
    mottoLimit = proto.Field(proto.UINT32, number=8)
    gunMaxGrade = proto.Field(proto.UINT32, number=9)
    mentalRankLevellimit = proto.RepeatedField(proto.UINT32, number=10)
    mentalMixListSuppress = proto.RepeatedField(proto.UINT32, number=11)
    mentalMixListSniper = proto.RepeatedField(proto.UINT32, number=12)
    mentalMixListScout = proto.RepeatedField(proto.UINT32, number=13)
    mentalMixListGuard = proto.RepeatedField(proto.UINT32, number=14)
    mentalMixListBurst = proto.RepeatedField(proto.UINT32, number=15)
    mentalMixListAssist = proto.RepeatedField(proto.UINT32, number=16)
    repositorySoldRankWeapon = proto.RepeatedField(proto.UINT32, number=17)
    repositorySoldRankEquip = proto.RepeatedField(proto.UINT32, number=18)
    repositoryMax = proto.Field(proto.UINT32, number=19)
    weaponModLevelUpItem = proto.Field(proto.UINT32, number=20)
    weaponNearCamera = proto.RepeatedField(proto.DOUBLE, number=21)
    weaponUpgradeLevel = proto.Field(proto.UINT32, number=22)
    weaponUpgradeItemLimited = proto.Field(proto.UINT32, number=23)
    weaponTransformRate = proto.MapField(proto.UINT32, proto.UINT32, number=24)
    weaponTransformLevel = proto.Field(proto.UINT32, number=25)
    weaponTransformItem = proto.Field(proto.UINT32, number=26)
    weaponSkillUpLevel = proto.Field(proto.UINT32, number=27)
    weaponRank5BreakItem = proto.MapField(proto.UINT32, proto.UINT32, number=28)
    weaponRank4BreakItem = proto.MapField(proto.UINT32, proto.UINT32, number=29)
    weaponPackageStoreid = proto.Field(proto.UINT32, number=30)
    weaponModDisposalLimit = proto.Field(proto.UINT32, number=31)
    weaponLowRank = proto.Field(proto.UINT32, number=32)
    weaponLevelUpItem = proto.RepeatedField(proto.UINT32, number=33)
    weaponLevelPerBreak = proto.Field(proto.UINT32, number=34)
    weaponLevelBreakRank = proto.Field(proto.INT32, number=35)
    weaponLevelBreakItem = proto.Field(proto.UINT32, number=36)
    weaponExpReturn = proto.Field(proto.DOUBLE, number=37)
    weaponDisposalLimit = proto.Field(proto.UINT32, number=38)
    weaponDismantlingItem = proto.Field(proto.UINT32, number=39)

class GlobalTabByUiIdData(proto.Message):
    uiId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class GlobalTabData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    uiId = proto.Field(proto.UINT32, number=2)

class GmMacroData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.STRING, number=2)
    name = proto.Field(proto.STRING, number=3)
    arg = proto.Field(proto.STRING, number=4)
    argClient = proto.Field(proto.STRING, number=5)

class GradeShowData(proto.Message):
    gradeId = proto.Field(proto.UINT32, number=1)
    gradeName = proto.Field(LanguageStringData, number=2)
    gradeIcon = proto.Field(proto.STRING, number=3)
    itemIcon = proto.Field(proto.STRING, number=4)

class GraphicsOptionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    depthTexture = proto.Field(proto.INT32, number=3)
    opaqueTexture = proto.Field(proto.INT32, number=4)
    msaa = proto.Field(proto.INT32, number=5)
    renderScale = proto.Field(proto.DOUBLE, number=6)
    fsaa = proto.Field(proto.INT32, number=7)
    fsaaQuality = proto.Field(proto.INT32, number=8)
    volume = proto.RepeatedField(proto.INT32, number=9)
    volumeOption = proto.RepeatedField(proto.INT32, number=10)
    cameraPostProcess = proto.Field(proto.INT32, number=11)
    shadowDistance = proto.Field(proto.INT32, number=12)
    shadowCascadeOption = proto.Field(proto.INT32, number=13)

class GridExtraData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    gridHitRate = proto.Field(proto.INT32, number=2)
    gridDodgeRate = proto.Field(proto.INT32, number=3)

class GroundGridData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    gridId = proto.Field(proto.STRING, number=2)

class GroundTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    typeId = proto.Field(proto.STRING, number=2)

class GroupTalentEffectGeneData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    talentEffectGeneGroup = proto.Field(proto.UINT32, number=2)
    level = proto.Field(proto.UINT32, number=3)
    propertyId = proto.Field(proto.UINT32, number=4)
    skillId = proto.Field(proto.UINT32, number=5)
    itemId = proto.Field(proto.UINT32, number=6)
    geneIcon = proto.Field(proto.STRING, number=7)
    tpItemCost = proto.Field(proto.UINT32, number=8)
    cost = proto.MapField(proto.UINT32, proto.UINT32, number=9)

class GuideQuestByPhaseData(proto.Message):
    phase = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class GuideQuestData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    phase = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    rewardList = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    link = proto.Field(proto.STRING, number=5)
    description = proto.Field(LanguageStringData, number=6)
    preQuest = proto.Field(proto.UINT32, number=7)
    conditionClass = proto.Field(proto.UINT32, number=8)
    conditionNum = proto.Field(proto.UINT32, number=9)
    rewardShow = proto.Field(proto.STRING, number=10)
    name = proto.Field(LanguageStringData, number=11)

class GuideQuestPhaseData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rewardList = proto.Field(KvSortUintData, number=2)
    rewardShow = proto.Field(proto.STRING, number=3)
    des = proto.Field(LanguageStringData, number=4)
    commandRewardShow = proto.Field(proto.STRING, number=5)
    commandDes = proto.Field(LanguageStringData, number=6)

class GunCharacterData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    enName = proto.Field(proto.STRING, number=3)
    uienName = proto.Field(proto.STRING, number=4)
    rdrBg = proto.Field(proto.STRING, number=5)
    rdrImg = proto.Field(proto.STRING, number=6)
    color = proto.Field(proto.STRING, number=7)
    type = proto.Field(proto.INT32, number=8)
    unitId = proto.RepeatedField(proto.UINT32, number=9)
    avgList = proto.Field(proto.STRING, number=10)
    charInfo = proto.Field(LanguageStringData, number=11)
    cvCn = proto.Field(LanguageStringData, number=12)
    cvJp = proto.Field(LanguageStringData, number=13)
    cvEn = proto.Field(LanguageStringData, number=14)
    bodyId = proto.Field(LanguageStringData, number=15)
    brand = proto.Field(LanguageStringData, number=16)
    belong = proto.Field(LanguageStringData, number=17)
    petPhrase = proto.Field(LanguageStringData, number=18)
    sort = proto.Field(proto.UINT32, number=19)
    darkzoneAudio = proto.Field(proto.STRING, number=20)
    audioList = proto.RepeatedField(proto.UINT32, number=21)
    chatList = proto.RepeatedField(proto.UINT32, number=22)
    storyOpen = proto.Field(proto.BOOL, number=23)
    skinOpen = proto.Field(proto.BOOL, number=24)
    showOpen = proto.Field(proto.BOOL, number=25)
    gachaGetTimeline = proto.Field(proto.STRING, number=26)
    hide = proto.Field(proto.BOOL, number=27)
    spine = proto.Field(proto.STRING, number=28)
    unlockDorm = proto.RepeatedField(proto.UINT32, number=29)
    dormModle = proto.Field(proto.UINT32, number=30)
    gunHigh = proto.Field(proto.UINT32, number=31)

class GunClassByGunClassGroupIdData(proto.Message):
    gunClassGroupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class GunClassData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    gunClassGroupId = proto.Field(proto.UINT32, number=2)
    classLevel = proto.Field(proto.UINT32, number=3)
    className = proto.Field(proto.STRING, number=4)
    icon = proto.Field(proto.STRING, number=5)
    gunLevelMax = proto.Field(proto.UINT32, number=6)
    itemCost = proto.MapField(proto.UINT32, proto.UINT32, number=7)
    propertyId = proto.Field(proto.UINT32, number=8)

class GunData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    firstName = proto.Field(LanguageStringData, number=3)
    secondName = proto.Field(LanguageStringData, number=4)
    enName = proto.Field(LanguageStringData, number=5)
    introduce = proto.Field(LanguageStringData, number=6)
    dialogue = proto.Field(LanguageStringData, number=7)
    extra = proto.Field(LanguageStringData, number=8)
    code = proto.Field(proto.STRING, number=9)
    type = proto.Field(proto.INT32, number=10)
    characterId = proto.Field(proto.UINT32, number=11)
    getAudio = proto.Field(proto.UINT32, number=12)
    duty = proto.Field(proto.INT32, number=13)
    secondDuty = proto.Field(proto.UINT32, number=14)
    rank = proto.Field(proto.INT32, number=15)
    roleTemplateId = proto.Field(proto.UINT32, number=16)
    coreItemId = proto.Field(proto.UINT32, number=17)
    upgradeSpeech = proto.Field(LanguageStringData, number=18)
    skillNormalAttack = proto.Field(proto.UINT32, number=19)
    skillActiveExtra = proto.RepeatedField(proto.UINT32, number=20)
    skillTalentExtra = proto.RepeatedField(proto.UINT32, number=21)
    aiList = proto.RepeatedField(proto.INT32, number=22)
    element = proto.Field(proto.UINT32, number=23)
    weaponType = proto.Field(proto.UINT32, number=24)
    weaponPrivate = proto.RepeatedField(proto.UINT32, number=25)
    weaponPrivateShow = proto.RepeatedField(proto.UINT32, number=26)

class GunDutyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    enName = proto.Field(LanguageStringData, number=3)
    abbr = proto.Field(LanguageStringData, number=4)
    icon = proto.Field(proto.STRING, number=5)

class GunGlobalConfigData(proto.Message):
    gunId = proto.Field(proto.UINT32, number=1)
    overviewCameraPosition = proto.Field(proto.STRING, number=2)
    overviewCameraRotation = proto.Field(proto.STRING, number=3)
    gunHigh = proto.Field(proto.DOUBLE, number=4)
    cameraToGunDistance = proto.Field(proto.DOUBLE, number=5)
    gunGradeCamera = proto.Field(proto.STRING, number=6)
    gunGradeLookatPosition = proto.Field(proto.STRING, number=7)
    gunGradePosition = proto.Field(proto.STRING, number=8)
    targetTrainingShootTime = proto.RepeatedField(proto.UINT32, number=9)
    targetTrainingShootDistance = proto.Field(proto.UINT32, number=10)
    targetTrainingShootResource = proto.Field(proto.STRING, number=11)
    upgradeTrainingPreResource = proto.Field(proto.STRING, number=12)
    classTrainingPreResource = proto.Field(proto.STRING, number=13)
    barrackFormationExclusive = proto.Field(proto.UINT32, number=14)
    barrackFormationNormal01 = proto.Field(proto.UINT32, number=15)
    barrackFormationNormal02 = proto.Field(proto.UINT32, number=16)
    darkzoneUnitCamera = proto.Field(proto.UINT32, number=17)

class GunGradeByGradeData(proto.Message):
    grade = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class GunGradeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    grade = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    abbr = proto.RepeatedField(proto.UINT32, number=4)
    addAbbr = proto.RepeatedField(proto.UINT32, number=5)
    icon = proto.Field(proto.STRING, number=6)
    description = proto.Field(LanguageStringData, number=7)
    costPiece = proto.Field(proto.UINT32, number=8)
    capacity = proto.Field(proto.DOUBLE, number=9)
    btPath = proto.Field(proto.STRING, number=10)

class GunLevelExpData(proto.Message):
    level = proto.Field(proto.UINT32, number=1)
    exp = proto.Field(proto.UINT32, number=2)
    gold = proto.Field(proto.UINT32, number=3)
    propertyId = proto.Field(proto.UINT32, number=4)

class GunPresetData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)

class GunWeaponByTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class GunWeaponData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    description = proto.Field(LanguageStringData, number=3)
    type = proto.Field(proto.UINT32, number=4)
    modelstype = proto.Field(proto.UINT32, number=5)
    bullettype = proto.Field(proto.UINT32, number=6)
    element = proto.Field(proto.UINT32, number=7)
    resCode = proto.Field(proto.STRING, number=8)
    resPath = proto.Field(proto.STRING, number=9)
    brand = proto.Field(proto.STRING, number=10)
    rank = proto.Field(proto.INT32, number=11)
    elemenSkill = proto.Field(proto.UINT32, number=12)
    skill = proto.Field(proto.UINT32, number=13)
    buffSkill = proto.Field(proto.UINT32, number=14)
    slot = proto.RepeatedField(proto.UINT32, number=15)
    expRate = proto.Field(proto.UINT32, number=16)
    weaponOfferExp = proto.Field(proto.UINT32, number=17)
    weaponNeedCash = proto.Field(proto.UINT32, number=18)
    defaultMaxlv = proto.Field(proto.UINT32, number=19)
    maxBreak = proto.Field(proto.UINT32, number=20)
    soldDrop = proto.RepeatedField(proto.UINT32, number=21)
    soldGet = proto.MapField(proto.UINT32, proto.UINT32, number=22)
    propertyId = proto.Field(proto.UINT32, number=23)
    unlockCost = proto.MapField(proto.UINT32, proto.UINT32, number=24)
    privateSkill = proto.Field(proto.UINT32, number=25)
    capacityMax = proto.Field(proto.UINT32, number=26)
    weaponPolarityId = proto.Field(proto.UINT32, number=27)
    polarityCostRandom = proto.MapField(proto.UINT32, proto.UINT32, number=28)
    polarityCostCustom = proto.MapField(proto.UINT32, proto.UINT32, number=29)
    advanceWeapon = proto.RepeatedField(proto.UINT32, number=30)
    characterId = proto.Field(proto.UINT32, number=31)
    modNum = proto.Field(proto.UINT32, number=32)
    modTypeGroup = proto.RepeatedField(proto.UINT32, number=33)
    isHide = proto.Field(proto.BOOL, number=34)
    audio = proto.Field(proto.UINT32, number=35)
    weaponTag = proto.Field(proto.INT32, number=36)
    weaponSkill = proto.RepeatedField(proto.UINT32, number=37)

class GunWeaponExpData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    level = proto.Field(proto.UINT32, number=2)
    rank = proto.Field(proto.UINT32, number=3)
    weaponLevelMax = proto.Field(proto.UINT32, number=4)
    weaponExp = proto.Field(proto.UINT32, number=5)
    weaponCash = proto.Field(proto.UINT32, number=6)
    weaponExpTotal = proto.Field(proto.UINT32, number=7)
    weaponCashTotal = proto.Field(proto.UINT32, number=8)
    propertyId = proto.Field(proto.UINT32, number=9)
    costItem = proto.Field(proto.UINT32, number=10)
    extraCapacity = proto.Field(proto.UINT32, number=11)

class GunWeaponTypeData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    abbr = proto.Field(LanguageStringData, number=3)
    description = proto.Field(LanguageStringData, number=4)
    icon = proto.Field(proto.STRING, number=5)
    skinIcon = proto.Field(proto.STRING, number=6)

class HeadFrameData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    icon = proto.Field(proto.STRING, number=2)
    achievement = proto.Field(proto.UINT32, number=3)
    jump = proto.Field(proto.UINT32, number=4)
    unlockDes = proto.Field(LanguageStringData, number=5)
    displayConfig = proto.Field(proto.UINT32, number=6)
    displayArg = proto.Field(proto.UINT32, number=7)
    sort = proto.Field(proto.UINT32, number=8)

class HighPvpMapByMapGroupIdData(proto.Message):
    mapGroupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class HighPvpMapData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    mapGroupId = proto.Field(proto.UINT32, number=2)
    stageId = proto.Field(proto.UINT32, number=3)
    sortId = proto.Field(proto.UINT32, number=4)
    mapName = proto.Field(proto.STRING, number=5)
    mapPic = proto.Field(proto.STRING, number=6)

class HighPvpPointByPointGroupData(proto.Message):
    pointGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class HighPvpPointData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    pointGroup = proto.Field(proto.UINT32, number=2)
    pointSection = proto.RepeatedField(proto.UINT32, number=3)
    pointFormula = proto.Field(proto.UINT32, number=4)

class HighPvpRewardByRewardGroupData(proto.Message):
    rewardGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class HighPvpRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rewardGroup = proto.Field(proto.UINT32, number=2)
    rankSection = proto.RepeatedField(proto.UINT32, number=3)
    rankReward = proto.Field(KvSortUintData, number=4)
    rewardType = proto.Field(proto.UINT32, number=5)

class HighPvpRobotByRobotGroupData(proto.Message):
    robotGroup = proto.Field(proto.INT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class HighPvpRobotData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    robotGroup = proto.Field(proto.INT32, number=2)
    robotPoint = proto.Field(proto.INT32, number=3)
    robotLevel = proto.Field(proto.UINT32, number=4)
    robotName = proto.Field(proto.STRING, number=5)
    mapId = proto.Field(proto.UINT32, number=6)
    mapHumanoidPosition = proto.Field(proto.STRING, number=7)
    humanoidId = proto.RepeatedField(proto.UINT32, number=8)
    robotPic = proto.Field(proto.UINT32, number=9)
    robotScore = proto.Field(proto.UINT32, number=10)

class HighPvpSeasonBySeasonMapGroupData(proto.Message):
    seasonMapGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class HighPvpSeasonData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    seasonMapGroup = proto.Field(proto.UINT32, number=2)
    pointPlan = proto.Field(proto.UINT32, number=3)
    rewardGroup = proto.Field(proto.UINT32, number=4)
    replenishRobotId = proto.Field(proto.UINT32, number=5)
    guaranteeRobotId = proto.Field(proto.UINT32, number=6)
    seasonName = proto.Field(proto.STRING, number=7)
    o_PHLOAKDLGLO = proto.Field(proto.UINT32, number=8)

class HighPvpTimesRewardByRewardGroupData(proto.Message):
    rewardGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class HighPvpTimesRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rewardGroup = proto.Field(proto.UINT32, number=2)
    o_IPGFDDCFEGE = proto.Field(proto.INT32, number=3)
    reward = proto.Field(KvSortUintData, number=4)

class HintData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    chars = proto.Field(LanguageStringData, number=2)

class HolidayData(proto.Message):
    date = proto.Field(proto.UINT32, number=1)

class IdcardMedalData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    icon = proto.Field(proto.STRING, number=2)
    name = proto.Field(LanguageStringData, number=3)
    qualify = proto.Field(LanguageStringData, number=4)
    qualifySimplify = proto.Field(LanguageStringData, number=5)
    achievement = proto.Field(proto.UINT32, number=6)
    jump = proto.Field(proto.UINT32, number=7)
    sort = proto.Field(proto.UINT32, number=8)

class IdcardTitleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    icon = proto.Field(proto.STRING, number=2)
    name = proto.Field(LanguageStringData, number=3)
    title = proto.Field(LanguageStringData, number=4)
    qualify = proto.Field(LanguageStringData, number=5)
    achievement = proto.Field(proto.UINT32, number=6)
    jump = proto.Field(proto.UINT32, number=7)
    sort = proto.Field(proto.UINT32, number=8)

class InformationCsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    sort = proto.Field(proto.UINT32, number=3)
    code = proto.Field(LanguageStringData, number=4)
    icon = proto.Field(proto.STRING, number=5)
    listicon = proto.Field(proto.STRING, number=6)
    name = proto.Field(LanguageStringData, number=7)
    itemId = proto.Field(proto.UINT32, number=8)

class InformationData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sort = proto.Field(proto.UINT32, number=2)
    code = proto.Field(LanguageStringData, number=3)
    name = proto.Field(LanguageStringData, number=4)
    clueId = proto.RepeatedField(proto.UINT32, number=5)
    icon = proto.Field(proto.STRING, number=6)

class InformationDetailCsByGroupIdData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class InformationDetailCsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    sort = proto.Field(LanguageStringData, number=3)
    title = proto.Field(LanguageStringData, number=4)
    text = proto.Field(LanguageStringData, number=5)
    typeName = proto.Field(proto.STRING, number=6)
    type = proto.Field(proto.STRING, number=7)
    unlockItem = proto.MapField(proto.UINT32, proto.UINT32, number=8)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=9)
    stageId = proto.Field(proto.UINT32, number=10)
    jumpId = proto.Field(proto.UINT32, number=11)

class InformationDetailData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    title = proto.Field(LanguageStringData, number=2)
    text = proto.Field(LanguageStringData, number=3)
    type = proto.Field(proto.STRING, number=4)
    unlockItem = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    typeName = proto.Field(LanguageStringData, number=7)

class InteractionItemCreationData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    create = proto.Field(proto.INT32, number=2)
    lifetime = proto.Field(proto.INT32, number=3)
    manualType = proto.Field(proto.INT32, number=4)
    belongCamp = proto.Field(proto.INT32, number=5)
    userCamp = proto.Field(proto.INT32, number=6)
    setTrigger = proto.Field(proto.INT32, number=7)
    triggerCount = proto.Field(proto.INT32, number=8)

class InvitationData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    npcid = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    time = proto.Field(proto.UINT32, number=4)
    timelineStart = proto.Field(proto.UINT32, number=5)
    behaviorOne = proto.Field(proto.UINT32, number=6)
    timelineMid = proto.Field(proto.UINT32, number=7)
    behaviorTwo = proto.Field(proto.UINT32, number=8)
    timelineEnd = proto.Field(proto.UINT32, number=9)
    timelineLeave = proto.Field(proto.UINT32, number=10)
    messageId = proto.Field(proto.UINT32, number=11)

class ItemByTypeData(proto.Message):
    type = proto.Field(proto.INT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ItemCompoundData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sort = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    o_EHHBNALOPLD = proto.RepeatedField(proto.UINT32, number=4)

class ItemData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    introduction = proto.Field(LanguageStringData, number=3)
    description = proto.Field(LanguageStringData, number=4)
    type = proto.Field(proto.INT32, number=5)
    icon = proto.Field(proto.STRING, number=6)
    rank = proto.Field(proto.INT32, number=7)
    sort = proto.Field(proto.UINT32, number=8)
    howToGet = proto.Field(proto.STRING, number=9)
    getList = proto.Field(proto.STRING, number=10)
    goodsid = proto.Field(proto.UINT32, number=11)
    showType = proto.Field(proto.UINT32, number=12)
    canCoin = proto.Field(proto.INT32, number=13)
    goToStore = proto.Field(proto.UINT32, number=14)
    args = proto.RepeatedField(proto.INT32, number=15)
    argsStr = proto.Field(proto.STRING, number=16)
    timeLimit = proto.Field(proto.INT64, number=17)
    iconPath = proto.Field(proto.STRING, number=18)
    mixItemList = proto.Field(proto.STRING, number=19)
    mixCost = proto.Field(proto.UINT32, number=20)
    dismantlingList = proto.MapField(proto.UINT32, proto.UINT32, number=21)
    location = proto.Field(proto.UINT32, number=22)
    dropWeight = proto.RepeatedField(proto.STRING, number=23)
    compose = proto.MapField(proto.UINT32, proto.UINT32, number=24)
    skillShow = proto.RepeatedField(proto.UINT32, number=25)
    iconFullPath = proto.Field(proto.STRING, number=26)
    isFake = proto.Field(proto.BOOL, number=27)

class ItemGetListData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    title = proto.Field(LanguageStringData, number=3)
    canJump = proto.Field(proto.BOOL, number=4)
    jumpCode = proto.Field(proto.STRING, number=5)
    quicklyBuy = proto.Field(proto.INT32, number=6)

class ItemHowToGetData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    title = proto.Field(LanguageStringData, number=2)
    canJump = proto.Field(proto.BOOL, number=3)
    jumpCode = proto.Field(proto.STRING, number=4)

class ItemLimitData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    isBag = proto.Field(proto.BOOL, number=3)
    initNum = proto.Field(proto.UINT32, number=4)
    maxLimit = proto.Field(proto.UINT32, number=5)
    overflow = proto.Field(proto.BOOL, number=6)
    type = proto.Field(proto.INT32, number=7)

class ItemTypeDescData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    relatedItem = proto.Field(proto.UINT32, number=3)
    maxLimit = proto.Field(proto.UINT32, number=4)
    rank = proto.Field(proto.UINT32, number=5)
    pile = proto.Field(proto.UINT32, number=6)
    overflow = proto.Field(proto.BOOL, number=7)
    overflowName = proto.Field(LanguageStringData, number=8)
    jump = proto.Field(proto.UINT32, number=9)
    stockShow = proto.Field(proto.BOOL, number=10)
    dzbagOccupy = proto.Field(proto.BOOL, number=11)
    canLock = proto.Field(proto.BOOL, number=12)
    ifDefaultLock = proto.Field(proto.BOOL, number=13)
    defaultLockRank = proto.Field(proto.UINT32, number=14)
    use = proto.Field(proto.UINT32, number=15)

class JumpBehaviorData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    jumpScene = proto.Field(proto.STRING, number=2)
    jumpPrefab = proto.Field(proto.STRING, number=3)
    unlockId = proto.Field(proto.UINT32, number=4)

class JumpListContentnewData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    behavior = proto.Field(proto.UINT32, number=2)
    args = proto.Field(proto.STRING, number=3)
    isAdditive = proto.Field(proto.BOOL, number=4)
    unlockId = proto.Field(proto.UINT32, number=5)
    planOpen = proto.Field(proto.UINT32, number=6)
    planOpenHint = proto.Field(proto.UINT32, number=7)
    planOpenFunction = proto.Field(proto.UINT32, number=8)
    planOpenArgs = proto.Field(proto.UINT32, number=9)
    lastJump = proto.Field(proto.UINT32, number=10)

class LangPackageTableCnBuiltinData(proto.Message):
    id = proto.Field(proto.INT64, number=1)
    content = proto.Field(proto.STRING, number=2)

class LangPackageTableCnData(proto.Message):
    id = proto.Field(proto.INT64, number=1)
    content = proto.Field(proto.STRING, number=2)

class LangPackageTableData(proto.Message):
    id = proto.Field(proto.INT64, number=1)
    content = proto.Field(proto.STRING, number=2)

class LanguageElementData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    nameEn = proto.Field(proto.STRING, number=3)
    icon = proto.Field(proto.STRING, number=4)
    color = proto.Field(proto.STRING, number=5)
    barrackAvaliable = proto.Field(proto.UINT32, number=6)
    increase = proto.Field(proto.UINT32, number=7)
    resist = proto.Field(proto.UINT32, number=8)

class LanguagePropertyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    showType = proto.Field(proto.INT32, number=3)
    sysName = proto.Field(proto.STRING, number=4)
    showName = proto.Field(LanguageStringData, number=5)
    order = proto.Field(proto.UINT32, number=6)
    icon = proto.Field(proto.STRING, number=7)
    barrackShow = proto.Field(proto.UINT32, number=8)
    battleShow = proto.Field(proto.UINT32, number=9)
    battleChangeShow = proto.Field(proto.BOOL, number=10)
    noZeroShow = proto.Field(proto.BOOL, number=11)
    antiShow = proto.Field(proto.BOOL, number=12)
    statue = proto.Field(proto.UINT32, number=13)
    barrackShowDescription = proto.Field(proto.STRING, number=14)

class LanguageShieldData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    nameEn = proto.Field(proto.STRING, number=3)
    icon = proto.Field(proto.STRING, number=4)
    color = proto.Field(proto.STRING, number=5)

class LanguageWeaponElementData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    nameEn = proto.Field(proto.STRING, number=3)
    icon = proto.Field(proto.STRING, number=4)
    color = proto.Field(proto.STRING, number=5)
    barrackAvaliable = proto.Field(proto.UINT32, number=6)
    increase = proto.Field(proto.UINT32, number=7)
    resist = proto.Field(proto.UINT32, number=8)

class LeaderBoardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    step = proto.Field(proto.UINT32, number=3)
    stepNum = proto.Field(proto.UINT32, number=4)

class LevelPropertyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    maxHp = proto.Field(proto.INT32, number=2)
    pow = proto.Field(proto.INT32, number=3)
    hit = proto.Field(proto.INT32, number=4)
    dodge = proto.Field(proto.INT32, number=5)
    crit = proto.Field(proto.INT32, number=6)
    critMult = proto.Field(proto.INT32, number=7)
    armor = proto.Field(proto.INT32, number=8)
    scratch = proto.Field(proto.INT32, number=9)
    scratchReduction = proto.Field(proto.INT32, number=10)
    propertyGroup = proto.Field(proto.UINT32, number=11)
    enemyLevel = proto.Field(proto.UINT32, number=12)
    propertyId = proto.Field(proto.UINT32, number=13)
    hitDamage = proto.Field(proto.INT32, number=14)
    behitDamage = proto.Field(proto.INT32, number=15)
    releaseHeal = proto.Field(proto.INT32, number=16)
    acceptHeal = proto.Field(proto.INT32, number=17)
    potentialGain = proto.Field(proto.INT32, number=18)
    potentialCost = proto.Field(proto.INT32, number=19)
    maxWillValue = proto.Field(proto.INT32, number=20)
    willValue = proto.Field(proto.INT32, number=21)
    suppressValue = proto.Field(proto.INT32, number=22)
    physicalShield = proto.Field(proto.INT32, number=23)
    magicalShield = proto.Field(proto.INT32, number=24)
    weight = proto.Field(proto.UINT32, number=25)
    shieldArmor = proto.Field(proto.INT32, number=26)
    shieldHp = proto.Field(proto.INT32, number=27)
    shieldDamage = proto.Field(proto.INT32, number=28)

class LngGiftData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    itemName = proto.Field(proto.STRING, number=2)
    effect = proto.Field(proto.STRING, number=3)
    retroaction = proto.Field(proto.UINT32, number=4)
    size = proto.Field(proto.STRING, number=5)
    npc = proto.Field(proto.UINT32, number=6)
    storeCameraSetting = proto.Field(proto.STRING, number=7)
    storeCharacterType = proto.RepeatedField(proto.DOUBLE, number=8)
    storeScaleValue = proto.RepeatedField(proto.UINT32, number=9)

class LngGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    tag = proto.Field(proto.STRING, number=3)
    desp = proto.Field(LanguageStringData, number=4)
    pointId = proto.Field(proto.UINT32, number=5)
    npc = proto.Field(proto.UINT32, number=6)

class LngItemData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    itemName = proto.Field(proto.STRING, number=2)
    groupId = proto.Field(proto.UINT32, number=3)
    ifDynamic = proto.Field(proto.BOOL, number=4)
    animation = proto.Field(proto.STRING, number=5)
    npc = proto.Field(proto.UINT32, number=6)
    number = proto.Field(proto.UINT32, number=7)
    storeCameraSetting = proto.Field(proto.STRING, number=8)
    storeCharacterType = proto.RepeatedField(proto.DOUBLE, number=9)
    storeScaleValue = proto.RepeatedField(proto.UINT32, number=10)

class LngPointData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    cameraPositon = proto.RepeatedField(proto.DOUBLE, number=3)
    cameraRotation = proto.RepeatedField(proto.DOUBLE, number=4)
    icon = proto.Field(proto.STRING, number=5)

class LngPresetData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    desp = proto.Field(LanguageStringData, number=3)
    wall = proto.Field(proto.UINT32, number=4)
    bed = proto.Field(proto.UINT32, number=5)
    sofa = proto.Field(proto.UINT32, number=6)
    function = proto.Field(proto.UINT32, number=7)
    closet = proto.Field(proto.UINT32, number=8)
    bath = proto.Field(proto.UINT32, number=9)
    stair = proto.Field(proto.UINT32, number=10)
    table = proto.Field(proto.UINT32, number=11)
    weapon = proto.Field(proto.UINT32, number=12)
    enter = proto.Field(proto.UINT32, number=13)
    ornamentA = proto.Field(proto.UINT32, number=14)
    ornamentB = proto.Field(proto.UINT32, number=15)
    ornamentC = proto.Field(proto.UINT32, number=16)
    ornamentD = proto.Field(proto.UINT32, number=17)
    npc = proto.Field(proto.UINT32, number=18)

class LoadingTipsByStageData(proto.Message):
    stage = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class LoadingTipsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    description = proto.Field(LanguageStringData, number=2)
    bgPic = proto.Field(LanguageStringData, number=3)
    stage = proto.Field(proto.UINT32, number=4)

class LoungeActionSeatData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    icon = proto.Field(proto.STRING, number=3)
    coordinate = proto.RepeatedField(proto.DOUBLE, number=4)
    angleInitial = proto.RepeatedField(proto.DOUBLE, number=5)
    angleX = proto.RepeatedField(proto.DOUBLE, number=6)
    angleMaxX = proto.RepeatedField(proto.DOUBLE, number=7)
    angleY = proto.RepeatedField(proto.DOUBLE, number=8)
    angleMaxY = proto.RepeatedField(proto.DOUBLE, number=9)
    mirrorOperation = proto.Field(proto.STRING, number=10)
    tips = proto.Field(proto.STRING, number=11)
    tips1 = proto.Field(proto.STRING, number=12)
    tipsCoordinate = proto.RepeatedField(proto.DOUBLE, number=13)
    dofSwitch = proto.Field(proto.BOOL, number=14)
    cameraArg = proto.RepeatedField(proto.DOUBLE, number=15)
    lighting = proto.Field(proto.STRING, number=16)
    bubble = proto.Field(proto.STRING, number=17)

class LoungeClothesByNpcData(proto.Message):
    npc = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class LoungeClothesData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    npc = proto.Field(proto.UINT32, number=3)
    body = proto.Field(proto.STRING, number=4)
    head = proto.Field(proto.STRING, number=5)
    roomHead = proto.Field(proto.STRING, number=6)
    ui = proto.Field(proto.STRING, number=7)
    image = proto.Field(proto.UINT32, number=8)
    des = proto.Field(LanguageStringData, number=9)
    action = proto.Field(proto.UINT32, number=10)
    effect = proto.Field(proto.STRING, number=11)
    behavior = proto.RepeatedField(proto.UINT32, number=12)
    storeCameraSetting = proto.Field(proto.STRING, number=13)
    storeCharacterType = proto.RepeatedField(proto.DOUBLE, number=14)
    storeScaleValue = proto.RepeatedField(proto.UINT32, number=15)

class LoungeConsoleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    icon = proto.Field(proto.STRING, number=3)
    open = proto.Field(proto.UINT32, number=4)
    sort = proto.Field(proto.UINT32, number=5)
    icon1 = proto.Field(proto.STRING, number=6)
    open1 = proto.Field(proto.UINT32, number=7)
    sort1 = proto.Field(proto.UINT32, number=8)
    billboard = proto.Field(proto.STRING, number=9)
    billboardCoordinate = proto.RepeatedField(proto.DOUBLE, number=10)
    unlockid = proto.Field(proto.UINT32, number=11)

class LoungeDialogData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    dialog = proto.Field(LanguageStringData, number=4)
    time = proto.Field(proto.UINT32, number=5)
    voice = proto.Field(proto.UINT32, number=6)
    bgm = proto.Field(proto.UINT32, number=7)

class LoungeEmotionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    effect = proto.Field(proto.STRING, number=2)
    statement = proto.RepeatedField(proto.UINT32, number=3)

class LoungeGlobalSeatData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    coordinate = proto.RepeatedField(proto.DOUBLE, number=3)
    angleInitial = proto.RepeatedField(proto.DOUBLE, number=4)
    dofSwitch = proto.Field(proto.BOOL, number=5)
    cameraArg = proto.RepeatedField(proto.DOUBLE, number=6)
    lighting = proto.Field(proto.STRING, number=7)
    fadeTime = proto.Field(proto.DOUBLE, number=8)
    timeOnEnter = proto.Field(proto.DOUBLE, number=9)
    timeOnLeave = proto.Field(proto.DOUBLE, number=10)
    animStartPos = proto.RepeatedField(proto.DOUBLE, number=11)
    animEndPos = proto.RepeatedField(proto.DOUBLE, number=12)

class LoungePathData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    endPoint = proto.Field(proto.STRING, number=3)
    ifReturn = proto.Field(proto.BOOL, number=4)
    ifLoop = proto.Field(proto.BOOL, number=5)
    point = proto.Field(proto.STRING, number=6)
    mark = proto.Field(proto.STRING, number=7)

class LoungeStoreBillboardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    showTime = proto.Field(proto.STRING, number=3)
    closeTime = proto.Field(proto.STRING, number=4)
    perfabName = proto.Field(proto.STRING, number=5)

class MNgameConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    unlockId = proto.Field(proto.UINT32, number=2)
    activityType = proto.Field(proto.UINT32, number=3)
    activityId = proto.Field(proto.UINT32, number=4)
    name = proto.Field(LanguageStringData, number=5)
    activityDesc = proto.Field(LanguageStringData, number=6)
    bannerResource = proto.Field(proto.STRING, number=7)

class MNgameHocoldData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    scene = proto.Field(proto.STRING, number=4)
    collection = proto.Field(proto.UINT32, number=5)
    entranceIcon = proto.Field(proto.STRING, number=6)
    unlockCount = proto.Field(proto.UINT32, number=7)

class MailAddresserData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)

class MailTempData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    title = proto.Field(LanguageStringData, number=2)
    addresser = proto.Field(LanguageStringData, number=3)
    content = proto.Field(LanguageStringData, number=4)
    attachment = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    linkType = proto.Field(proto.INT32, number=6)
    linkAddr = proto.Field(proto.STRING, number=7)
    linkButtonTxt = proto.Field(LanguageStringData, number=8)
    shelfLife = proto.Field(proto.UINT32, number=9)
    hintText = proto.Field(LanguageStringData, number=10)

class MapTurnRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    turnRewardId = proto.Field(proto.UINT32, number=2)
    turnNum = proto.Field(proto.UINT32, number=3)
    monopolyRewardId = proto.Field(proto.UINT32, number=4)

class MentalCircuitData(proto.Message):
    pass

class MentalNodeData(proto.Message):
    pass

class MessageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    messageOpen = proto.Field(proto.UINT32, number=3)
    messageInformationId = proto.Field(proto.UINT32, number=4)

class MessageGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    messageContent = proto.RepeatedField(proto.UINT32, number=2)

class MessageInformationData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    textId = proto.Field(proto.UINT32, number=2)
    limitOption = proto.Field(proto.UINT32, number=3)
    priority = proto.Field(proto.UINT32, number=4)
    weight = proto.Field(proto.INT32, number=5)
    firstMsg = proto.RepeatedField(proto.UINT32, number=6)
    messageEffect = proto.MapField(proto.INT32, proto.UINT32, number=7)
    people = proto.Field(proto.INT32, number=8)
    messageInformationId = proto.RepeatedField(proto.UINT32, number=9)

class MessageTextData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    text = proto.Field(LanguageStringData, number=2)

class MinigameCByGroupIdData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class MinigameCData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    weight = proto.Field(proto.UINT32, number=3)
    cMode = proto.Field(proto.UINT32, number=4)
    defaultDirection = proto.Field(proto.UINT32, number=5)
    changeDirectionNum = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    defaultSpeed = proto.Field(proto.UINT32, number=7)
    changeSpeedType = proto.MapField(proto.UINT32, proto.UINT32, number=8)
    changeSpeedNum = proto.Field(proto.UINT32, number=9)
    finishTime = proto.Field(proto.UINT32, number=10)
    waringTime = proto.Field(proto.UINT32, number=11)

class MinigameGByGroupIdData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class MinigameGData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    gameType = proto.Field(proto.UINT32, number=2)
    groupId = proto.Field(proto.UINT32, number=3)
    weight = proto.Field(proto.UINT32, number=4)
    finishTime = proto.Field(proto.UINT32, number=5)
    waringTime = proto.Field(proto.UINT32, number=6)
    difficultyMin = proto.Field(proto.UINT32, number=7)
    difficultyMax = proto.Field(proto.UINT32, number=8)

class MissionAffixByOrderData(proto.Message):
    order = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class MissionAffixData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    order = proto.Field(proto.UINT32, number=2)
    gunId = proto.Field(proto.UINT32, number=3)
    battleBuff = proto.Field(proto.STRING, number=4)
    battleSkill = proto.Field(proto.STRING, number=5)

class MnShootConfigData(proto.Message):
    originexp = proto.Field(proto.UINT32, number=1)
    expvariable = proto.Field(proto.DOUBLE, number=2)
    equation = proto.Field(proto.STRING, number=3)

class MnShootMonsterData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    skinid = proto.Field(proto.STRING, number=2)
    spine = proto.Field(proto.STRING, number=3)

class MnShootMonsterInfoData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    baseAtk = proto.Field(proto.DOUBLE, number=2)
    baseDef = proto.Field(proto.DOUBLE, number=3)
    speed = proto.Field(proto.DOUBLE, number=4)
    hp = proto.Field(proto.INT32, number=5)
    mass = proto.Field(proto.DOUBLE, number=6)
    rotationType = proto.Field(proto.INT32, number=7)

class MnShootMonsterSkillData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    type = proto.Field(proto.DOUBLE, number=3)
    cd = proto.Field(proto.DOUBLE, number=4)
    playerDistance = proto.Field(proto.INT32, number=5)
    damage = proto.Field(proto.INT32, number=6)
    waitTime = proto.Field(proto.DOUBLE, number=7)
    shootSpeed = proto.Field(proto.DOUBLE, number=8)
    range = proto.Field(proto.DOUBLE, number=9)

class MnShootPlayerData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    spine = proto.Field(proto.STRING, number=3)
    playeratt = proto.Field(proto.DOUBLE, number=4)
    playerattName = proto.Field(LanguageStringData, number=5)
    playerspd = proto.Field(proto.DOUBLE, number=6)
    playerspdName = proto.Field(LanguageStringData, number=7)
    playeras = proto.Field(proto.DOUBLE, number=8)
    playerasName = proto.Field(LanguageStringData, number=9)
    hp = proto.Field(proto.DOUBLE, number=10)
    ballisticSpeed = proto.Field(proto.DOUBLE, number=11)
    linearDrag = proto.Field(proto.DOUBLE, number=12)
    proAngle = proto.Field(proto.DOUBLE, number=13)
    projectiles = proto.Field(proto.DOUBLE, number=14)
    shootRange = proto.Field(proto.DOUBLE, number=15)
    bulletSize = proto.Field(proto.DOUBLE, number=16)
    impulse = proto.Field(proto.DOUBLE, number=17)
    repelSize = proto.Field(proto.DOUBLE, number=18)
    ui = proto.Field(proto.STRING, number=19)
    uicode = proto.Field(proto.STRING, number=20)

class MnShootSkillByTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class MnShootSkillData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    skillName = proto.Field(LanguageStringData, number=3)
    des = proto.Field(LanguageStringData, number=4)
    img = proto.Field(proto.STRING, number=5)
    fixedAttack = proto.Field(proto.INT32, number=6)
    ballisticSpeed = proto.Field(proto.DOUBLE, number=7)
    recoilSpeed = proto.Field(proto.DOUBLE, number=8)
    fireRate = proto.Field(proto.DOUBLE, number=9)
    reloadTime = proto.Field(proto.DOUBLE, number=10)
    proAngle = proto.Field(proto.INT32, number=11)
    projectiles = proto.Field(proto.INT32, number=12)
    maxAmmo = proto.Field(proto.INT32, number=13)
    elementType = proto.Field(proto.INT32, number=14)
    probability = proto.Field(proto.DOUBLE, number=15)
    damageBonus = proto.Field(proto.DOUBLE, number=16)
    fixedDamageBonus = proto.Field(proto.DOUBLE, number=17)
    timeDuration = proto.Field(proto.DOUBLE, number=18)
    damageFrequency = proto.Field(proto.DOUBLE, number=19)
    size = proto.Field(proto.DOUBLE, number=20)
    moveSpeed = proto.Field(proto.DOUBLE, number=21)
    health = proto.Field(proto.INT32, number=22)
    attack = proto.Field(proto.DOUBLE, number=23)
    bulletSize = proto.Field(proto.DOUBLE, number=24)
    bodyAroundRadius = proto.Field(proto.DOUBLE, number=25)
    shootRange = proto.Field(proto.DOUBLE, number=26)
    skillProbability = proto.Field(proto.UINT32, number=27)

class ModAspectData(proto.Message):
    aspectId = proto.Field(proto.UINT32, number=1)
    fatherType = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    modelIdGroup = proto.RepeatedField(proto.INT32, number=4)

class ModCalibrationAttributeByCalibrationTimesData(proto.Message):
    calibrationTimes = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ModCalibrationAttributeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    calibrationTimes = proto.Field(proto.UINT32, number=2)
    calibrationAttribute = proto.Field(proto.UINT32, number=3)
    order = proto.Field(proto.INT32, number=4)

class ModEffectTypeData(proto.Message):
    effectId = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    description = proto.Field(LanguageStringData, number=3)
    icon = proto.Field(proto.STRING, number=4)

class ModExpData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rank = proto.Field(proto.UINT32, number=2)
    quality = proto.Field(proto.UINT32, number=3)
    level = proto.Field(proto.UINT32, number=4)
    exp = proto.Field(proto.UINT32, number=5)
    expTotal = proto.Field(proto.UINT32, number=6)
    money = proto.Field(proto.UINT32, number=7)

class ModFixData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    effectType = proto.RepeatedField(proto.UINT32, number=2)
    suggestEffectType = proto.Field(proto.UINT32, number=3)

class ModPolarityPlanData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    polarityPlanId = proto.Field(proto.UINT32, number=2)
    polarityTag = proto.Field(proto.UINT32, number=3)

class ModPowerBySuitPlanIdData(proto.Message):
    suitPlanId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ModPowerData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    suitPlanId = proto.Field(proto.UINT32, number=2)
    powerId = proto.Field(proto.UINT32, number=3)

class ModPowerEffectData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    powerSuit = proto.MapField(proto.UINT32, proto.UINT32, number=2)
    powerSkill = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    name = proto.Field(LanguageStringData, number=4)
    image = proto.Field(proto.STRING, number=5)

class ModRankData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    description = proto.Field(LanguageStringData, number=3)

class ModUpgradeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    upgradeId = proto.Field(proto.UINT32, number=2)
    level = proto.Field(proto.UINT32, number=3)
    value = proto.Field(proto.INT32, number=4)

class ModelChildConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    childModel = proto.Field(proto.STRING, number=2)
    hurtPerformType = proto.Field(proto.INT32, number=3)
    additionalDamageEffect = proto.Field(proto.STRING, number=4)
    darkzoneAc = proto.Field(proto.STRING, number=5)
    coverRendering = proto.Field(proto.BOOL, number=6)

class ModelConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    model = proto.Field(proto.STRING, number=2)
    figureType = proto.Field(proto.INT32, number=3)
    scaleValue = proto.Field(proto.STRING, number=4)
    particleScale = proto.Field(proto.STRING, number=5)
    loadFromRes = proto.Field(proto.UINT32, number=6)
    wieldType = proto.Field(proto.INT32, number=7)
    dieDirectionPb = proto.Field(proto.INT32, number=8)
    crtDieDirectionPb = proto.Field(proto.INT32, number=9)
    dissolveStartDelay = proto.Field(proto.UINT32, number=10)
    dissolveDuration = proto.Field(proto.UINT32, number=11)
    gunType = proto.Field(proto.UINT32, number=12)
    characterType = proto.Field(proto.STRING, number=13)
    moveLookat = proto.Field(proto.BOOL, number=14)
    hurtLookat = proto.Field(proto.BOOL, number=15)
    hurtTurn = proto.Field(proto.BOOL, number=16)
    characterBodyType = proto.Field(proto.INT32, number=17)
    darkzone = proto.RepeatedField(proto.DOUBLE, number=18)
    darkzoneAc = proto.Field(proto.STRING, number=19)
    darkzoneSpeed = proto.Field(proto.UINT32, number=20)
    delayDie = proto.Field(proto.BOOL, number=21)
    resultDirection = proto.Field(proto.STRING, number=22)
    controllerName = proto.Field(proto.STRING, number=23)
    darkzoneAimspeed = proto.Field(proto.UINT32, number=24)
    hurtPerformType = proto.Field(proto.INT32, number=25)
    typeCode = proto.Field(proto.UINT32, number=26)
    additionalDamageEffect = proto.Field(proto.STRING, number=27)
    coverRendering = proto.Field(proto.BOOL, number=28)

class ModelParentConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    typeCode = proto.Field(proto.UINT32, number=2)
    parentModel = proto.Field(proto.STRING, number=3)
    prefabType = proto.Field(proto.INT32, number=4)
    figureType = proto.Field(proto.INT32, number=5)
    hurtPerformType = proto.Field(proto.INT32, number=6)
    additionalDamageEffect = proto.Field(proto.STRING, number=7)
    delayDie = proto.Field(proto.BOOL, number=8)
    dissolveStartDelay = proto.Field(proto.UINT32, number=9)
    dissolveDuration = proto.Field(proto.UINT32, number=10)
    darkzoneAc = proto.Field(proto.STRING, number=11)
    coverRendering = proto.Field(proto.BOOL, number=12)

class ModificationGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    maxHpPresetType = proto.Field(proto.UINT32, number=2)
    maxHpPresetValue = proto.Field(proto.STRING, number=3)
    powPresetType = proto.Field(proto.UINT32, number=4)
    powPresetValue = proto.Field(proto.STRING, number=5)
    shieldArmorPresetType = proto.Field(proto.UINT32, number=6)
    shieldArmorPresetValue = proto.Field(proto.STRING, number=7)
    maxWillValuePresetType = proto.Field(proto.UINT32, number=8)
    maxWillValuePresetValue = proto.Field(proto.STRING, number=9)
    suppressValuePresetType = proto.Field(proto.UINT32, number=10)
    suppressValuePresetValue = proto.Field(proto.STRING, number=11)
    critPresetType = proto.Field(proto.UINT32, number=12)
    critPresetValue = proto.Field(proto.STRING, number=13)
    critMultPresetType = proto.Field(proto.UINT32, number=14)
    critMultPresetValue = proto.Field(proto.STRING, number=15)
    maxApPresetType = proto.Field(proto.UINT32, number=16)
    maxApPresetValue = proto.Field(proto.STRING, number=17)
    elementWeaknessPresetType = proto.Field(proto.UINT32, number=18)
    elementWeaknessPresetValue = proto.Field(proto.STRING, number=19)
    weaponWeaknessPresetType = proto.Field(proto.UINT32, number=20)
    weaponWeaknessPresetValue = proto.Field(proto.STRING, number=21)

class MonopolyConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    activitySubmodule = proto.Field(proto.UINT32, number=2)
    gameTpye = proto.Field(proto.UINT32, number=3)
    monopolyPhase = proto.RepeatedField(proto.UINT32, number=4)
    teamNumber = proto.Field(proto.UINT32, number=5)
    teamColor = proto.MapField(proto.UINT32, proto.STRING, number=6)
    uiImage = proto.Field(proto.STRING, number=7)
    sequenceMode = proto.Field(proto.UINT32, number=8)
    speed = proto.MapField(proto.UINT32, proto.UINT32, number=9)
    themeColor = proto.Field(proto.STRING, number=10)
    supColor = proto.Field(proto.STRING, number=11)
    logoColor = proto.Field(proto.STRING, number=12)
    picResoures = proto.Field(proto.STRING, number=13)
    monopolyName = proto.Field(LanguageStringData, number=14)
    monopolyDes = proto.Field(LanguageStringData, number=15)
    spineRotation = proto.Field(proto.STRING, number=16)
    spineHudOffset = proto.Field(proto.STRING, number=17)
    spineLeftOffset = proto.Field(proto.STRING, number=18)
    spineRightOffset = proto.Field(proto.STRING, number=19)
    spineSize = proto.Field(proto.DOUBLE, number=20)
    spinePosition = proto.RepeatedField(proto.DOUBLE, number=21)
    unlock = proto.Field(proto.UINT32, number=22)
    gameSpeed = proto.Field(proto.DOUBLE, number=23)
    monopolyTask = proto.Field(proto.UINT32, number=24)
    monopolyOrderGuide = proto.Field(proto.UINT32, number=25)
    battleOrder = proto.Field(proto.UINT32, number=26)

class MonopolyDifficultyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    stageIcon = proto.Field(proto.STRING, number=3)
    dropShow = proto.RepeatedField(proto.UINT32, number=4)
    sugLevel = proto.Field(proto.UINT32, number=5)
    enemyLevel = proto.Field(proto.UINT32, number=6)
    frontStageId = proto.Field(proto.UINT32, number=7)
    unlockItemNum = proto.MapField(proto.UINT32, proto.UINT32, number=8)
    unlockDayNum = proto.Field(proto.UINT32, number=9)
    firstRewardItem = proto.MapField(proto.UINT32, proto.UINT32, number=10)
    rewardItem = proto.MapField(proto.UINT32, proto.UINT32, number=11)
    maxRound = proto.Field(proto.UINT32, number=12)
    promptRound = proto.Field(proto.UINT32, number=13)
    token = proto.Field(proto.UINT32, number=14)
    maxOrderNumber = proto.Field(proto.UINT32, number=15)
    initialPoint = proto.Field(proto.UINT32, number=16)
    roundPoint = proto.Field(proto.UINT32, number=17)
    doll = proto.Field(proto.UINT32, number=18)
    mapId = proto.Field(proto.UINT32, number=19)
    rewardRule = proto.Field(proto.UINT32, number=20)
    cost = proto.MapField(proto.UINT32, proto.UINT32, number=21)
    canSweep = proto.Field(proto.BOOL, number=22)
    pptId = proto.Field(proto.UINT32, number=23)
    roundOccupyPoint = proto.Field(proto.UINT32, number=24)
    sweepUnlock = proto.RepeatedField(proto.UINT32, number=25)
    sweepCost = proto.MapField(proto.UINT32, proto.UINT32, number=26)
    sweepReward = proto.MapField(proto.UINT32, proto.UINT32, number=27)
    sweepTimes = proto.Field(proto.UINT32, number=28)
    maxRewardPoint = proto.Field(proto.UINT32, number=29)

class MonopolyEffectData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    buffType = proto.Field(proto.UINT32, number=2)
    triggerTime = proto.Field(proto.UINT32, number=3)
    triggerParam = proto.RepeatedField(proto.UINT32, number=4)
    buffGet = proto.Field(proto.UINT32, number=5)
    effectType = proto.Field(proto.UINT32, number=6)
    param = proto.Field(proto.UINT32, number=7)
    turn = proto.Field(proto.UINT32, number=8)
    triggerSlg = proto.Field(proto.UINT32, number=9)
    relationBuff = proto.Field(proto.UINT32, number=10)
    name = proto.Field(LanguageStringData, number=11)
    icon = proto.Field(proto.STRING, number=12)
    desc = proto.Field(LanguageStringData, number=13)
    descTime = proto.Field(LanguageStringData, number=14)
    triggerdesc = proto.Field(LanguageStringData, number=15)
    triggerEffect = proto.Field(proto.UINT32, number=16)
    obtainDesc = proto.Field(LanguageStringData, number=17)

class MonopolyEnemyAiByAiIdData(proto.Message):
    aiId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class MonopolyEnemyAiData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    aiId = proto.Field(proto.UINT32, number=2)
    turn = proto.Field(proto.UINT32, number=3)
    orderId = proto.Field(proto.UINT32, number=4)

class MonopolyEnemyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    des = proto.Field(LanguageStringData, number=3)
    chessIcon = proto.Field(proto.STRING, number=4)
    spine = proto.Field(proto.STRING, number=5)
    monsterType = proto.Field(proto.UINT32, number=6)
    region = proto.Field(proto.UINT32, number=7)
    emenySpeed = proto.Field(proto.UINT32, number=8)
    orientation = proto.Field(proto.UINT32, number=9)
    sight = proto.Field(proto.UINT32, number=10)
    attack = proto.Field(proto.UINT32, number=11)
    skillId = proto.MapField(proto.UINT32, proto.UINT32, number=12)
    status = proto.Field(proto.UINT32, number=13)
    emenyInitialPoint = proto.Field(proto.UINT32, number=14)
    emenyRoundPoint = proto.Field(proto.UINT32, number=15)
    emenyOccupyPoint = proto.Field(proto.UINT32, number=16)
    lockAttack = proto.RepeatedField(proto.UINT32, number=17)
    lockSkill = proto.MapField(proto.UINT32, proto.UINT32, number=18)
    aiId = proto.Field(proto.UINT32, number=19)
    spineSize = proto.Field(proto.DOUBLE, number=20)
    spineHudOffset = proto.Field(proto.STRING, number=21)
    spineLeftOffset = proto.Field(proto.STRING, number=22)
    spineRightOffset = proto.Field(proto.STRING, number=23)
    slgBgPic = proto.Field(proto.STRING, number=24)
    spinePosition = proto.RepeatedField(proto.DOUBLE, number=25)

class MonopolyEnemyGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    enemyId = proto.Field(proto.UINT32, number=3)

class MonopolyEventData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    eventName = proto.Field(LanguageStringData, number=2)
    eventIcon = proto.Field(proto.STRING, number=3)
    eventDesc = proto.Field(LanguageStringData, number=4)
    eventType = proto.Field(proto.UINT32, number=5)
    eventParam1 = proto.Field(proto.UINT32, number=6)
    eventParam2 = proto.Field(proto.UINT32, number=7)
    spineExpression = proto.Field(proto.STRING, number=8)

class MonopolyEventGroupByEventGroupData(proto.Message):
    eventGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class MonopolyEventGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    eventGroup = proto.Field(proto.UINT32, number=2)
    eventId = proto.Field(proto.UINT32, number=3)
    groupName = proto.Field(LanguageStringData, number=4)

class MonopolyLoseHintData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    des = proto.Field(LanguageStringData, number=2)

class MonopolyMapData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    scene = proto.Field(proto.STRING, number=2)
    mapImage = proto.Field(proto.STRING, number=3)
    mapName = proto.Field(proto.STRING, number=4)
    orderGroup = proto.Field(proto.UINT32, number=5)
    baseElement = proto.Field(proto.UINT32, number=6)
    mapDes = proto.Field(proto.STRING, number=7)
    cameraArea = proto.Field(proto.STRING, number=8)
    foundationDesc = proto.Field(LanguageStringData, number=9)
    speed = proto.Field(proto.DOUBLE, number=10)
    winCondition = proto.RepeatedField(proto.UINT32, number=11)
    failCondition = proto.RepeatedField(proto.UINT32, number=12)

class MonopolyMapFunctionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    type = proto.Field(proto.UINT32, number=3)
    param = proto.RepeatedField(proto.UINT32, number=4)
    param2 = proto.Field(proto.UINT32, number=5)
    targetType = proto.Field(proto.UINT32, number=6)
    triggerTime = proto.Field(proto.UINT32, number=7)
    priority = proto.Field(proto.UINT32, number=8)
    open = proto.Field(proto.BOOL, number=9)
    remove = proto.Field(proto.BOOL, number=10)
    mapRemove = proto.Field(proto.BOOL, number=11)
    desc = proto.Field(LanguageStringData, number=12)
    note = proto.Field(LanguageStringData, number=13)
    rank = proto.Field(proto.UINT32, number=14)
    isShow = proto.Field(proto.UINT32, number=15)
    mapImage = proto.Field(proto.UINT32, number=16)
    sortId = proto.Field(proto.UINT32, number=17)
    triggerIcon = proto.Field(proto.STRING, number=18)
    triggerDes = proto.Field(LanguageStringData, number=19)
    closeMapImage = proto.Field(proto.UINT32, number=20)

class MonopolyMapPointByMapIdData(proto.Message):
    mapId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class MonopolyMapPointData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    mapId = proto.Field(proto.UINT32, number=2)
    pointId = proto.Field(proto.UINT32, number=3)
    nextPoint = proto.Field(proto.STRING, number=4)
    function = proto.RepeatedField(proto.UINT32, number=5)
    movementPoint = proto.Field(proto.UINT32, number=6)
    team = proto.Field(proto.INT32, number=7)
    creatType = proto.MapField(proto.UINT32, proto.UINT32, number=8)
    enemyGroup = proto.Field(proto.UINT32, number=9)
    occupyCost = proto.MapField(proto.UINT32, proto.UINT32, number=10)
    enable = proto.Field(proto.UINT32, number=11)
    element = proto.Field(proto.UINT32, number=12)
    functionType = proto.Field(proto.INT32, number=13)
    building = proto.Field(proto.UINT32, number=14)
    yaxis = proto.Field(proto.DOUBLE, number=15)
    rotation = proto.Field(proto.DOUBLE, number=16)
    ishidden = proto.Field(proto.UINT32, number=17)
    enemyTergetPoint = proto.MapField(proto.UINT32, proto.UINT32, number=18)

class MonopolyMapSkillData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    targetType = proto.Field(proto.UINT32, number=2)
    targetNum = proto.RepeatedField(proto.UINT32, number=3)
    targetFilter = proto.RepeatedField(proto.UINT32, number=4)
    range = proto.RepeatedField(proto.INT32, number=5)
    mapSkillType = proto.Field(proto.UINT32, number=6)
    mapSkillParam = proto.Field(proto.UINT32, number=7)
    targetTips = proto.Field(LanguageStringData, number=8)

class MonopolyOrderData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    orderClass = proto.Field(proto.UINT32, number=2)
    className = proto.Field(LanguageStringData, number=3)
    name = proto.Field(LanguageStringData, number=4)
    orderDesc = proto.Field(LanguageStringData, number=5)
    orderIcon = proto.Field(proto.STRING, number=6)
    level = proto.Field(proto.UINT32, number=7)
    nextLevelOrder = proto.Field(proto.UINT32, number=8)
    upClass = proto.MapField(proto.UINT32, proto.UINT32, number=9)
    orderContent = proto.Field(proto.STRING, number=10)
    section = proto.MapField(proto.UINT32, proto.INT32, number=11)
    minMove = proto.Field(proto.UINT32, number=12)
    maxMove = proto.Field(proto.UINT32, number=13)
    sold = proto.Field(proto.UINT32, number=14)
    orderDesc2 = proto.Field(LanguageStringData, number=15)
    orderType = proto.Field(proto.INT32, number=16)

class MonopolyOrderGuideByGuideIdData(proto.Message):
    guideId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class MonopolyOrderGuideData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    guideId = proto.Field(proto.UINT32, number=2)
    orderId = proto.Field(proto.UINT32, number=3)
    orderIndex = proto.Field(proto.UINT32, number=4)

class MonopolyPhaseData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    unlockItemNum = proto.MapField(proto.UINT32, proto.UINT32, number=2)
    unlockDayNum = proto.Field(proto.UINT32, number=3)
    monopolyDifficulty = proto.RepeatedField(proto.UINT32, number=4)
    modelTitle = proto.Field(proto.STRING, number=5)

class MonopolyPointResourcesData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    pointIcon = proto.Field(proto.STRING, number=3)
    mapIcon = proto.Field(proto.STRING, number=4)
    model = proto.Field(proto.STRING, number=5)
    effect = proto.Field(proto.STRING, number=6)
    disappearEffect = proto.Field(proto.STRING, number=7)
    activationEffect = proto.Field(proto.STRING, number=8)
    element = proto.Field(proto.STRING, number=9)
    material = proto.Field(proto.STRING, number=10)
    building = proto.Field(proto.STRING, number=11)

class MonopolyRepositoryData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rewardRepository = proto.Field(proto.UINT32, number=2)
    rewardGroup = proto.Field(proto.UINT32, number=3)
    rewardType = proto.Field(proto.UINT32, number=4)
    rewardId = proto.Field(proto.UINT32, number=5)
    rewardNum = proto.Field(proto.UINT32, number=6)
    rewardRate = proto.Field(proto.UINT32, number=7)

class MonopolyRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rewardRepositoryId = proto.Field(proto.UINT32, number=2)
    rewardChooseNum = proto.Field(proto.UINT32, number=3)
    rewardTitle = proto.Field(LanguageStringData, number=4)

class MonopolyShopData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    token = proto.Field(proto.STRING, number=2)
    refreshItemId = proto.Field(proto.UINT32, number=3)
    refreshCost = proto.Field(proto.STRING, number=4)
    shopItemId = proto.Field(proto.UINT32, number=5)

class MonopolyShopItemData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    shopItemId = proto.Field(proto.UINT32, number=2)
    productPos = proto.Field(proto.UINT32, number=3)
    productType = proto.Field(proto.UINT32, number=4)
    productId = proto.Field(proto.UINT32, number=5)
    stockLevel = proto.Field(proto.UINT32, number=6)
    cashId = proto.Field(proto.UINT32, number=7)
    price = proto.Field(proto.UINT32, number=8)
    weight = proto.Field(proto.UINT32, number=9)

class MonopolySkillData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    targetType = proto.Field(proto.UINT32, number=2)
    targetTypeParam = proto.Field(proto.UINT32, number=3)
    range = proto.RepeatedField(proto.INT32, number=4)
    skillParam = proto.Field(proto.UINT32, number=5)
    skillParamPlayer = proto.Field(proto.UINT32, number=6)
    skillParamEnemy1 = proto.Field(proto.UINT32, number=7)
    skillParamEnemy2 = proto.Field(proto.UINT32, number=8)
    skillParamEnemy3 = proto.Field(proto.UINT32, number=9)
    targetTips = proto.Field(LanguageStringData, number=10)
    skillDesc = proto.Field(proto.STRING, number=11)

class MonopolySkillParamData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    hpChange = proto.Field(proto.INT32, number=2)
    shieldChange = proto.Field(proto.INT32, number=3)
    addEffect = proto.RepeatedField(proto.UINT32, number=4)
    delEffect = proto.RepeatedField(proto.UINT32, number=5)
    delEffectType = proto.RepeatedField(proto.UINT32, number=6)
    revive = proto.Field(proto.UINT32, number=7)
    battle = proto.Field(proto.UINT32, number=8)
    stealOrder = proto.Field(proto.UINT32, number=9)
    sfxType = proto.Field(proto.UINT32, number=10)
    sfxRes = proto.Field(proto.STRING, number=11)

class MonopolyWinConditionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    des = proto.Field(LanguageStringData, number=3)
    conditionId = proto.Field(proto.UINT32, number=4)
    conditionNum = proto.Field(proto.UINT32, number=5)
    conditionArg0 = proto.Field(proto.INT32, number=6)
    conditionArg1 = proto.Field(proto.INT32, number=7)
    conditionArg2 = proto.Field(proto.INT32, number=8)
    conditionArg3 = proto.Field(proto.INT32, number=9)
    counterType = proto.Field(proto.UINT32, number=10)
    controlType = proto.Field(proto.UINT32, number=11)
    loseHint = proto.Field(proto.UINT32, number=12)

class MonthCardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rewardOnce = proto.MapField(proto.UINT32, proto.UINT32, number=2)
    rewardDaily = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    mail = proto.Field(proto.UINT32, number=4)
    itemFreshInit = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    activate = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    maxduration = proto.Field(proto.UINT32, number=7)
    descBrief = proto.Field(proto.STRING, number=8)
    descDetail = proto.Field(proto.STRING, number=9)
    title = proto.Field(proto.STRING, number=10)
    duration = proto.Field(proto.UINT32, number=11)
    uiDisplay = proto.Field(proto.BOOL, number=12)

class NCharmDefinitionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    loungeStage = proto.RepeatedField(proto.UINT32, number=3)
    loungeObtain = proto.RepeatedField(proto.UINT32, number=4)

class NCharmObtainData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    conditionKey = proto.Field(proto.UINT64, number=2)
    conditionClass = proto.Field(proto.INT32, number=3)
    conditionArg0 = proto.Field(proto.UINT32, number=4)
    conditionArg1 = proto.Field(proto.UINT32, number=5)
    conditionArg2 = proto.Field(proto.UINT32, number=6)
    conditionArg3 = proto.Field(proto.UINT32, number=7)
    charmValue = proto.Field(proto.UINT32, number=8)

class NFavorDefinitionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    icon = proto.Field(proto.STRING, number=3)
    favorStage = proto.Field(proto.UINT32, number=4)
    appointmentStep = proto.RepeatedField(proto.UINT32, number=5)
    appointmentProbability = proto.RepeatedField(proto.UINT32, number=6)

class NLoungeNpcData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    favorDefinitionId = proto.Field(proto.UINT32, number=3)
    moodDefinitionId = proto.Field(proto.UINT32, number=4)
    moodLikeId = proto.Field(proto.UINT32, number=5)
    roomId = proto.Field(proto.UINT32, number=6)
    messageOpen = proto.Field(proto.UINT32, number=7)
    roomOpen = proto.Field(proto.UINT32, number=8)
    open = proto.Field(proto.UINT32, number=9)
    dress = proto.Field(proto.UINT32, number=10)
    invitation = proto.Field(proto.UINT32, number=11)
    roomGun = proto.RepeatedField(proto.UINT32, number=12)
    roomCost = proto.Field(proto.UINT32, number=13)

class NLowerOfflineData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    time = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    condition = proto.RepeatedField(proto.UINT32, number=4)
    message = proto.Field(proto.UINT32, number=5)
    pusher = proto.Field(proto.UINT32, number=6)

class NMoodDefinitionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    icon = proto.Field(proto.STRING, number=3)
    moodStage = proto.Field(proto.UINT32, number=4)
    appointmentStep = proto.RepeatedField(proto.UINT32, number=5)
    appointmentProbability = proto.RepeatedField(proto.UINT32, number=6)
    daily = proto.RepeatedField(proto.INT32, number=7)
    random = proto.Field(proto.INT32, number=8)
    stateId = proto.Field(proto.UINT32, number=9)

class NMoodLikeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    des = proto.Field(LanguageStringData, number=3)
    favorAdd = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    moodAdd = proto.MapField(proto.UINT32, proto.UINT32, number=5)

class NPCstatementData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    numTouch = proto.Field(proto.UINT32, number=3)
    moodChange = proto.Field(proto.INT32, number=4)
    favorChange = proto.Field(proto.INT32, number=5)
    stateChange = proto.Field(proto.UINT32, number=6)

class NpcData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    desc = proto.Field(LanguageStringData, number=4)
    resoureceCode = proto.Field(proto.STRING, number=5)

class NrtpvpLevelByTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class NrtpvpLevelData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    levelId = proto.Field(proto.UINT32, number=3)
    section = proto.Field(proto.UINT32, number=4)
    name = proto.Field(LanguageStringData, number=5)
    icon = proto.Field(proto.UINT32, number=6)
    lowerLimitPoints = proto.Field(proto.INT32, number=7)
    upperLimitPoints = proto.Field(proto.INT32, number=8)
    upgradeReward = proto.Field(KvSortUintData, number=9)
    atkWinReward = proto.Field(KvSortUintData, number=10)
    atkLoseReward = proto.Field(KvSortUintData, number=11)
    seasonReward = proto.Field(KvSortUintData, number=12)
    weekReward = proto.Field(KvSortUintData, number=13)

class NrtpvpMapByMapGroupData(proto.Message):
    mapGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class NrtpvpMapData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    mapName = proto.Field(proto.STRING, number=2)
    mapGroup = proto.Field(proto.UINT32, number=3)
    nameResources = proto.Field(proto.STRING, number=4)
    mapType = proto.Field(proto.UINT32, number=5)
    mapDoubleArray = proto.Field(proto.BOOL, number=6)
    barrierId = proto.RepeatedField(proto.UINT32, number=7)
    mapOpenLevel = proto.Field(proto.UINT32, number=8)
    mapNum = proto.Field(proto.UINT32, number=9)
    mapUpgrade = proto.Field(proto.UINT32, number=10)
    mapUpgradeId = proto.Field(proto.UINT32, number=11)
    mapRobotnum = proto.Field(proto.UINT32, number=12)
    mapLevel = proto.Field(proto.UINT32, number=13)
    seasonBuffTime = proto.RepeatedField(proto.UINT32, number=14)
    seasonBuffEffect = proto.RepeatedField(proto.UINT32, number=15)

class NrtpvpMatchingData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    matchingPlayer1 = proto.RepeatedField(proto.UINT32, number=2)
    matchingPlayer2 = proto.RepeatedField(proto.UINT32, number=3)
    matchingPlayer3 = proto.RepeatedField(proto.UINT32, number=4)
    matchingPlayer4 = proto.RepeatedField(proto.UINT32, number=5)
    matchingPlayer5 = proto.RepeatedField(proto.UINT32, number=6)
    matchingPlayer1Type = proto.Field(proto.UINT32, number=7)
    matchingPlayer2Type = proto.Field(proto.UINT32, number=8)
    matchingPlayer3Type = proto.Field(proto.UINT32, number=9)
    matchingPlayer4Type = proto.Field(proto.UINT32, number=10)
    matchingPlayer5Type = proto.Field(proto.UINT32, number=11)
    matchingCover1 = proto.Field(proto.UINT32, number=12)
    matchingCover2 = proto.Field(proto.UINT32, number=13)
    matchingCover3 = proto.Field(proto.UINT32, number=14)
    matchingCover4 = proto.Field(proto.UINT32, number=15)
    matchingCover5 = proto.Field(proto.UINT32, number=16)
    hignRange = proto.RepeatedField(proto.UINT32, number=17)
    lowRange = proto.RepeatedField(proto.UINT32, number=18)
    matchingPointsmin = proto.Field(proto.UINT32, number=19)
    matchingPointsmax = proto.Field(proto.UINT32, number=20)
    matchingRank = proto.Field(proto.BOOL, number=21)

class NrtpvpMatchingRankData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rank1 = proto.Field(proto.UINT32, number=2)
    rank2 = proto.Field(proto.UINT32, number=3)
    rangingRange1 = proto.RepeatedField(proto.INT32, number=4)
    rangingCover1 = proto.Field(proto.UINT32, number=5)
    rangingRange2 = proto.RepeatedField(proto.INT32, number=6)
    rangingCover2 = proto.Field(proto.UINT32, number=7)
    rangingRange3 = proto.RepeatedField(proto.INT32, number=8)
    rangingCover3 = proto.Field(proto.UINT32, number=9)
    rangingRange4 = proto.RepeatedField(proto.INT32, number=10)
    rangingCover4 = proto.Field(proto.UINT32, number=11)
    rangingRange5 = proto.RepeatedField(proto.INT32, number=12)
    rangingCover5 = proto.Field(proto.UINT32, number=13)
    rankingSupplementary1 = proto.RepeatedField(proto.INT32, number=14)
    rankingSupplementary2 = proto.RepeatedField(proto.INT32, number=15)

class NrtpvpMatchinglimitData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    matchinglimitMin = proto.Field(proto.UINT32, number=2)
    matchinglimitMax = proto.Field(proto.UINT32, number=3)

class NrtpvpPointsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    pointsPlayer1Add = proto.Field(proto.INT32, number=2)
    pointsPlayer1Cost = proto.Field(proto.INT32, number=3)
    pointsPlayer2Add = proto.Field(proto.INT32, number=4)
    pointsPlayer2Cost = proto.Field(proto.INT32, number=5)
    pointsPlayer3Add = proto.Field(proto.INT32, number=6)
    pointsPlayer3Cost = proto.Field(proto.INT32, number=7)
    pointsPlayer4Add = proto.Field(proto.INT32, number=8)
    pointsPlayer4Cost = proto.Field(proto.INT32, number=9)
    pointsPlayer5Add = proto.Field(proto.INT32, number=10)
    pointsPlayer5Cost = proto.Field(proto.INT32, number=11)
    defenderAdd = proto.Field(proto.INT32, number=12)
    defenderCost = proto.Field(proto.INT32, number=13)

class NrtpvpRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    value = proto.Field(proto.UINT32, number=2)
    rewardList = proto.Field(KvSortUintData, number=3)
    hide = proto.RepeatedField(proto.UINT32, number=4)

class NrtpvpSeasonData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    levelType = proto.Field(proto.UINT32, number=2)
    seasonId = proto.Field(proto.UINT32, number=3)
    name = proto.Field(LanguageStringData, number=4)
    type = proto.Field(proto.UINT32, number=5)
    seasonItem = proto.Field(proto.UINT32, number=6)
    cost = proto.Field(proto.UINT32, number=7)
    coin1 = proto.Field(proto.UINT32, number=8)
    changeDetail1 = proto.RepeatedField(proto.UINT32, number=9)
    coin2 = proto.Field(proto.UINT32, number=10)
    changeDetail2 = proto.RepeatedField(proto.UINT32, number=11)
    seasonMapGroup = proto.Field(proto.UINT32, number=12)
    seasonMapIsolateGroup = proto.RepeatedField(proto.UINT32, number=13)
    resettingReward = proto.Field(proto.UINT32, number=14)

class NrtpvpTaskData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    phase = proto.Field(proto.UINT32, number=2)
    rewardList = proto.Field(KvSortUintData, number=3)
    link = proto.Field(proto.STRING, number=4)
    description = proto.Field(LanguageStringData, number=5)
    conditionClass = proto.Field(proto.UINT32, number=6)
    conditionNum = proto.Field(proto.UINT32, number=7)

class NrtpvpTaskGuideData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rewardList = proto.Field(KvSortUintData, number=2)
    name = proto.Field(LanguageStringData, number=3)

class OpenFunctionsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    open = proto.Field(proto.UINT32, number=2)

class OrderStrongholdTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    orderName = proto.Field(LanguageStringData, number=2)
    orderDetail = proto.Field(LanguageStringData, number=3)
    specialOrderType = proto.Field(proto.UINT32, number=4)
    effectPath = proto.Field(proto.STRING, number=5)
    skillId = proto.Field(proto.UINT32, number=6)

class PlanBySystemData(proto.Message):
    system = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class PlanData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    system = proto.Field(proto.UINT32, number=2)
    systemType = proto.Field(proto.INT32, number=3)
    openTime = proto.Field(proto.INT64, number=4)
    closeTime = proto.Field(proto.INT64, number=5)
    args = proto.RepeatedField(proto.UINT32, number=6)

class PlayerAvatarData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    icon = proto.Field(proto.STRING, number=2)
    iconFemale = proto.Field(proto.STRING, number=3)
    bust = proto.Field(proto.STRING, number=4)
    bustFemale = proto.Field(proto.STRING, number=5)
    itemId = proto.Field(proto.UINT32, number=6)
    jump = proto.Field(proto.UINT32, number=7)
    unlockDes = proto.Field(LanguageStringData, number=8)
    displayConfig = proto.Field(proto.UINT32, number=9)
    displayArg = proto.Field(proto.UINT32, number=10)
    sort = proto.Field(proto.UINT32, number=11)

class PlayerLevelData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    exp = proto.Field(proto.UINT32, number=2)
    upgradeReward = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    extaStamina = proto.Field(proto.UINT32, number=4)
    rewardShow = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    gunLevel = proto.Field(proto.UINT32, number=6)
    weaponLevel = proto.Field(proto.UINT32, number=7)

class PlayerNameData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)

class PlotDormParagraphData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    paragraph = proto.RepeatedField(proto.UINT32, number=2)
    responsetype = proto.Field(proto.UINT32, number=3)
    triggertime = proto.RepeatedField(proto.UINT32, number=4)
    endtime = proto.Field(proto.UINT32, number=5)
    bgm = proto.Field(proto.STRING, number=6)
    bgmStartEnd = proto.RepeatedField(proto.UINT32, number=7)
    condition = proto.Field(proto.STRING, number=8)

class PlotDormSentenceData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    perform = proto.RepeatedField(proto.UINT32, number=2)
    startaciton = proto.Field(proto.UINT32, number=3)
    performactions = proto.RepeatedField(proto.UINT32, number=4)
    endaction = proto.Field(proto.UINT32, number=5)
    timeline = proto.Field(proto.STRING, number=6)
    character = proto.Field(proto.UINT32, number=7)
    line = proto.Field(LanguageStringData, number=8)
    voice = proto.Field(proto.STRING, number=9)
    enablemouth = proto.Field(proto.UINT32, number=10)

class PolarityAffixData(proto.Message):
    polarityEffectId = proto.Field(proto.UINT32, number=1)
    polarityPlanRate = proto.Field(proto.UINT32, number=2)
    polarityValue = proto.Field(proto.STRING, number=3)

class PolarityAffixDecomposeByRankData(proto.Message):
    rank = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class PolarityAffixDecomposeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rank = proto.Field(proto.UINT32, number=2)
    propertyType = proto.Field(proto.UINT32, number=3)
    value = proto.MapField(proto.UINT32, proto.UINT32, number=4)

class PolarityExpData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    effectId = proto.Field(proto.UINT32, number=2)
    rank = proto.Field(proto.UINT32, number=3)
    quality = proto.Field(proto.UINT32, number=4)
    exp = proto.Field(proto.UINT32, number=5)
    money = proto.Field(proto.UINT32, number=6)

class PolarityPromoteByPromotGroupData(proto.Message):
    promotGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class PolarityPromoteData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    promotGroup = proto.Field(proto.UINT32, number=2)
    type = proto.RepeatedField(proto.UINT32, number=3)
    value = proto.RepeatedField(proto.INT32, number=4)
    level = proto.Field(proto.UINT32, number=5)

class PolarityTagData(proto.Message):
    polarityId = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    icon = proto.Field(proto.STRING, number=3)

class PotentialSetData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    maxPotential = proto.Field(proto.UINT32, number=2)
    huntPotential = proto.Field(proto.UINT32, number=3)
    initPotential = proto.Field(proto.UINT32, number=4)
    potentialSection = proto.Field(proto.STRING, number=5)
    description = proto.Field(proto.STRING, number=6)
    workSkill = proto.Field(proto.INT32, number=7)
    potentialRound = proto.Field(proto.INT32, number=8)

class PowerSkillCsByPowerSkillData(proto.Message):
    powerSkill = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class PowerSkillCsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    powerSkill = proto.Field(proto.UINT32, number=2)
    rank = proto.Field(proto.UINT32, number=3)
    type = proto.RepeatedField(proto.UINT32, number=4)
    basicValue = proto.RepeatedField(proto.INT32, number=5)
    promoteGroup = proto.Field(proto.UINT32, number=6)
    level = proto.Field(proto.UINT32, number=7)
    capacity = proto.Field(proto.DOUBLE, number=8)

class PrizeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    itemIds = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    introduction = proto.Field(LanguageStringData, number=4)

class PropertyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    pow = proto.Field(proto.INT32, number=2)
    maxHp = proto.Field(proto.INT32, number=3)
    maxShieldHp = proto.Field(proto.INT32, number=4)
    shieldArmor = proto.Field(proto.INT32, number=5)
    shieldDamage = proto.Field(proto.INT32, number=6)
    maxAp = proto.Field(proto.INT32, number=7)
    maxWillValue = proto.Field(proto.INT32, number=8)
    crit = proto.Field(proto.INT32, number=9)
    critMult = proto.Field(proto.INT32, number=10)
    hit = proto.Field(proto.INT32, number=11)
    dodge = proto.Field(proto.INT32, number=12)
    hitPercentage = proto.Field(proto.INT32, number=13)
    dodgePercentage = proto.Field(proto.INT32, number=14)
    scratch = proto.Field(proto.INT32, number=15)
    scratchReduction = proto.Field(proto.INT32, number=16)
    hitDamage = proto.Field(proto.INT32, number=17)
    behitDamage = proto.Field(proto.INT32, number=18)
    releaseHeal = proto.Field(proto.INT32, number=19)
    acceptHeal = proto.Field(proto.INT32, number=20)
    lifeSteal = proto.Field(proto.INT32, number=21)
    potentialGain = proto.Field(proto.INT32, number=22)
    potentialCost = proto.Field(proto.INT32, number=23)
    weight = proto.Field(proto.INT32, number=24)
    suppressDamage = proto.Field(proto.INT32, number=25)
    beSuppressedDamage = proto.Field(proto.INT32, number=26)
    releaseWillHeal = proto.Field(proto.INT32, number=27)
    acceptWillHeal = proto.Field(proto.INT32, number=28)
    powPercent = proto.Field(proto.INT32, number=29)
    maxHpPercent = proto.Field(proto.INT32, number=30)
    maxWillValuePercent = proto.Field(proto.INT32, number=31)
    shieldArmorPercent = proto.Field(proto.INT32, number=32)
    maxShieldHpPercent = proto.Field(proto.INT32, number=33)
    suppressDefend = proto.Field(proto.INT32, number=34)
    elementAddFire = proto.Field(proto.INT32, number=35)
    elementAddElectric = proto.Field(proto.INT32, number=36)
    elementAddIce = proto.Field(proto.INT32, number=37)
    elementAddPoison = proto.Field(proto.INT32, number=38)
    elementAddPhysics = proto.Field(proto.INT32, number=39)
    elementAddSoil = proto.Field(proto.INT32, number=40)
    elementAddGrass = proto.Field(proto.INT32, number=41)
    elementAddWater = proto.Field(proto.INT32, number=42)
    elementAgainstFire = proto.Field(proto.INT32, number=43)
    elementAgainstElectric = proto.Field(proto.INT32, number=44)
    elementAgainstIce = proto.Field(proto.INT32, number=45)
    elementAgainstPoison = proto.Field(proto.INT32, number=46)
    elementAgainstPhysics = proto.Field(proto.INT32, number=47)
    elementAgainstSoil = proto.Field(proto.INT32, number=48)
    elementAgainstGrass = proto.Field(proto.INT32, number=49)
    elementAgainstWater = proto.Field(proto.INT32, number=50)
    maxPotential = proto.Field(proto.INT32, number=51)
    roundPotential = proto.Field(proto.INT32, number=52)
    darkzoneLevel = proto.Field(proto.INT32, number=53)
    startPotential = proto.Field(proto.INT32, number=54)
    beginDamagepercent = proto.Field(proto.INT32, number=55)
    outroundDam = proto.Field(proto.INT32, number=56)
    potentialDam = proto.Field(proto.INT32, number=57)
    aoeDam = proto.Field(proto.INT32, number=58)
    singleDam = proto.Field(proto.INT32, number=59)
    cdDam = proto.Field(proto.INT32, number=60)
    healReverse = proto.Field(proto.INT32, number=61)
    potentialBehitDam = proto.Field(proto.INT32, number=62)
    aoeBehitDam = proto.Field(proto.INT32, number=63)
    singleBehitDam = proto.Field(proto.INT32, number=64)
    cdBehitDam = proto.Field(proto.INT32, number=65)
    suppressDamAddrate = proto.Field(proto.INT32, number=66)
    suppressDamTimes = proto.Field(proto.INT32, number=67)
    suppressResist = proto.Field(proto.INT32, number=68)
    suppressResistRate = proto.Field(proto.INT32, number=69)
    suppressResistIgnore = proto.Field(proto.INT32, number=70)
    coverResistRate = proto.Field(proto.INT32, number=71)
    coverResistIgnore = proto.Field(proto.INT32, number=72)
    critResist = proto.Field(proto.INT32, number=73)
    outroundBehitDam = proto.Field(proto.INT32, number=74)

class PropertyDescData(proto.Message):
    propertyId = proto.Field(proto.UINT32, number=1)
    icon = proto.Field(LanguageStringData, number=2)
    name = proto.Field(LanguageStringData, number=3)
    name2 = proto.Field(LanguageStringData, number=4)

class PunctuationsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    punctuations = proto.Field(proto.STRING, number=2)
    language = proto.RepeatedField(proto.UINT32, number=3)
    property = proto.RepeatedField(proto.UINT32, number=4)

class PvpDummyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    points = proto.Field(proto.INT32, number=2)
    sectionName = proto.Field(proto.STRING, number=3)
    section = proto.Field(proto.UINT32, number=4)
    name = proto.Field(proto.STRING, number=5)
    portrait = proto.Field(proto.UINT32, number=6)
    mapId = proto.Field(proto.UINT32, number=7)
    mapHumanoidPosition = proto.Field(proto.STRING, number=8)
    humanoidId = proto.RepeatedField(proto.UINT32, number=9)
    mapRobotPosition = proto.Field(proto.STRING, number=10)
    robotId = proto.RepeatedField(proto.UINT32, number=11)
    level = proto.Field(proto.UINT32, number=12)

class ReadmeData(proto.Message):
    readmeId = proto.Field(proto.UINT32, number=1)
    tagId = proto.RepeatedField(proto.UINT32, number=2)

class ReadmeTagData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    tagName = proto.Field(LanguageStringData, number=2)
    bannerName = proto.Field(proto.STRING, number=3)
    titleName = proto.Field(LanguageStringData, number=4)
    imgName = proto.Field(proto.STRING, number=5)
    hintDetail = proto.Field(LanguageStringData, number=6)

class RebateData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    range = proto.RepeatedField(proto.UINT32, number=2)
    percentage = proto.Field(proto.UINT32, number=3)
    itemId = proto.RepeatedField(proto.UINT32, number=4)

class RecordRoomData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sort = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    des = proto.Field(LanguageStringData, number=4)
    icon = proto.Field(proto.STRING, number=5)
    unlock = proto.Field(proto.UINT32, number=6)

class RedeemCodeHintData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    chars = proto.Field(LanguageStringData, number=2)

class ReplaceSkillData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    beforeSkillGroupId1 = proto.RepeatedField(proto.UINT32, number=2)
    nowSkillGroupId1 = proto.RepeatedField(proto.UINT32, number=3)
    beforeSkillGroupId2 = proto.RepeatedField(proto.UINT32, number=4)
    nowSkillGroupId2 = proto.RepeatedField(proto.UINT32, number=5)
    beforeSkillGroupId3 = proto.RepeatedField(proto.UINT32, number=6)
    nowSkillGroupId3 = proto.RepeatedField(proto.UINT32, number=7)
    beforeSkillGroupId4 = proto.RepeatedField(proto.UINT32, number=8)
    nowSkillGroupId4 = proto.RepeatedField(proto.UINT32, number=9)

class RepositoryCategoryData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    title = proto.Field(LanguageStringData, number=2)
    titleEn = proto.Field(LanguageStringData, number=3)
    icon = proto.Field(proto.STRING, number=4)
    itemType = proto.RepeatedField(proto.UINT32, number=5)

class RepositoryTagData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sequence = proto.Field(proto.UINT32, number=2)
    title = proto.Field(LanguageStringData, number=3)
    unlock = proto.Field(proto.INT32, number=4)
    soldCheckbox = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    soldHint = proto.RepeatedField(proto.UINT32, number=6)
    canSold = proto.RepeatedField(proto.UINT32, number=7)
    toptag = proto.RepeatedField(proto.UINT32, number=8)

class RepositoryTitleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    title = proto.Field(LanguageStringData, number=2)

class RepositoryToptagData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sequence = proto.Field(proto.UINT32, number=2)
    title = proto.Field(LanguageStringData, number=3)
    icon = proto.Field(proto.STRING, number=4)
    itemType = proto.RepeatedField(proto.UINT32, number=5)
    args = proto.RepeatedField(proto.UINT32, number=6)

class ResourcesBarData(proto.Message):
    interfaceId = proto.Field(proto.UINT32, number=1)
    resources = proto.Field(proto.STRING, number=2)
    system = proto.Field(proto.STRING, number=3)
    systemIcon = proto.Field(proto.STRING, number=4)
    color = proto.Field(proto.UINT32, number=5)
    homeButton = proto.Field(proto.UINT32, number=6)
    ruleButton = proto.Field(proto.UINT32, number=7)
    ruleTitle = proto.Field(proto.STRING, number=8)
    ruleDescription = proto.Field(proto.STRING, number=9)
    ppt = proto.Field(proto.UINT32, number=10)

class RobotEnemyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    robotRank = proto.Field(proto.UINT32, number=3)
    robotType = proto.Field(proto.STRING, number=4)
    robotTypeHint = proto.Field(proto.UINT32, number=5)
    robotCombat = proto.Field(proto.UINT32, number=6)
    robotProperty = proto.Field(proto.UINT32, number=7)
    description = proto.Field(proto.STRING, number=8)
    textIndex = proto.RepeatedField(proto.UINT32, number=9)
    characterPic = proto.Field(proto.STRING, number=10)
    occupySize = proto.Field(proto.INT32, number=11)
    modelCode = proto.Field(proto.UINT32, number=12)
    propertyGroup = proto.Field(proto.UINT32, number=13)
    displacement = proto.Field(proto.UINT32, number=14)
    addLevel = proto.Field(proto.INT32, number=15)
    camp = proto.Field(proto.INT32, number=16)
    enemyCamp = proto.Field(proto.INT32, number=17)
    breakGage = proto.Field(proto.INT32, number=18)
    skillNormalAttack = proto.Field(proto.UINT32, number=19)
    skillActive = proto.Field(proto.UINT32, number=20)
    skillActiveExtra = proto.Field(proto.STRING, number=21)
    skillSuper = proto.Field(proto.UINT32, number=22)
    skillTalent = proto.Field(proto.UINT32, number=23)
    skillTalentExtra = proto.Field(proto.STRING, number=24)
    skillFaction = proto.Field(proto.UINT32, number=25)
    skillFaction2 = proto.Field(proto.UINT32, number=26)
    breakSkill = proto.RepeatedField(proto.UINT32, number=27)
    beSuppressedConfig = proto.RepeatedField(proto.INT32, number=28)
    actionChance = proto.Field(proto.UINT32, number=29)
    aiOrderClass = proto.Field(proto.INT32, number=30)
    aiList = proto.RepeatedField(proto.INT32, number=31)
    btPath = proto.Field(proto.STRING, number=32)
    useFakeAttack = proto.Field(proto.BOOL, number=33)
    shieldForDeploy = proto.Field(proto.INT32, number=34)
    tag = proto.Field(proto.STRING, number=35)
    attackType = proto.Field(proto.INT32, number=36)
    shieldType = proto.Field(proto.INT32, number=37)
    shieldEffectId = proto.Field(proto.INT32, number=38)
    shieldBrokenEffectId = proto.Field(proto.INT32, number=39)
    shape = proto.Field(proto.UINT32, number=40)
    shapeParam = proto.Field(proto.STRING, number=41)
    shapeIcon = proto.Field(proto.STRING, number=42)
    shapeTerrain = proto.Field(proto.UINT32, number=43)
    maxPotenial = proto.Field(proto.UINT32, number=44)
    element = proto.Field(proto.UINT32, number=45)
    robotRetrieve = proto.MapField(proto.UINT32, proto.UINT32, number=46)

class RobotLevelData(proto.Message):
    level = proto.Field(proto.UINT32, number=1)
    propertyId = proto.Field(proto.UINT32, number=2)

class RogueBuffCofigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    level = proto.Field(proto.UINT32, number=3)
    quality = proto.Field(proto.UINT32, number=4)
    name = proto.Field(proto.STRING, number=5)
    battleSkills = proto.RepeatedField(proto.UINT32, number=6)
    buffDescription = proto.Field(proto.STRING, number=7)
    iconPath = proto.Field(proto.STRING, number=8)

class RogueBuffPlanData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    buffList = proto.RepeatedField(proto.UINT32, number=2)

class RogueBuffUpgradeGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)

class RogueChapterCofigByRogueLevelData(proto.Message):
    rogueLevel = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class RogueChapterCofigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rogueLevel = proto.Field(proto.UINT32, number=2)
    mode = proto.Field(proto.INT32, number=3)
    groupNum = proto.Field(proto.UINT32, number=4)
    name = proto.Field(proto.STRING, number=5)
    des = proto.Field(proto.STRING, number=6)
    stagePlan = proto.MapField(proto.UINT32, proto.UINT32, number=7)
    passReward = proto.MapField(proto.UINT32, proto.UINT32, number=8)
    passRestoreHealth = proto.Field(proto.STRING, number=9)
    passBuffPlan = proto.MapField(proto.UINT32, proto.UINT32, number=10)
    exStagePlan = proto.Field(proto.STRING, number=11)

class RogueLevelCofigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    chapter = proto.Field(proto.STRING, number=3)
    iconPath = proto.Field(proto.STRING, number=4)
    normalModeStageDes = proto.Field(proto.STRING, number=5)
    challengeModeStageDes = proto.Field(proto.STRING, number=6)
    challengeModeGunsList = proto.RepeatedField(proto.UINT32, number=7)
    challengeModeFirstBuffPlan = proto.MapField(proto.UINT32, proto.UINT32, number=8)
    challengeModeCoinInit = proto.Field(proto.UINT32, number=9)
    inheritCoinCofig = proto.Field(proto.STRING, number=10)
    exStageMaxNum = proto.Field(proto.UINT32, number=11)
    gunShopArgs = proto.MapField(proto.UINT32, proto.INT32, number=12)
    buffShopArgs = proto.MapField(proto.UINT32, proto.INT32, number=13)
    challengeModeMinGunsNum = proto.Field(proto.UINT32, number=14)
    buffMaxNum = proto.RepeatedField(proto.UINT32, number=15)
    checkFloorToShopsellList = proto.RepeatedField(proto.UINT32, number=16)
    enemyListNormalMode = proto.RepeatedField(proto.UINT32, number=17)
    enemyListChallengeMode = proto.RepeatedField(proto.UINT32, number=18)
    stageClass = proto.RepeatedField(proto.UINT32, number=19)

class RogueShopPlanCofigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rogueLimitArgs = proto.Field(proto.STRING, number=2)
    rogueUnlockArgs = proto.MapField(proto.UINT32, proto.UINT32, number=3)

class RogueShopPlanData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rogueShopGoodIdList = proto.RepeatedField(proto.UINT32, number=2)

class RogueShopSellCofigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rogueLevel = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.INT32, number=3)
    sellGoods = proto.Field(proto.UINT32, number=4)
    sort = proto.Field(proto.UINT32, number=5)
    sellPrice = proto.MapField(proto.UINT32, proto.UINT32, number=6)

class RogueShopTypeDescData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)

class RogueStageCofigData(proto.Message):
    stageId = proto.Field(proto.UINT32, number=1)
    difficulty = proto.Field(proto.UINT32, number=2)
    challengeModeGunPresetBanList = proto.RepeatedField(proto.UINT32, number=3)

class RogueStageDifficultyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    iconPath = proto.Field(proto.STRING, number=3)
    quality = proto.Field(proto.UINT32, number=4)

class RogueStageModeDescData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)

class RogueStagePlanData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    stagePlan = proto.RepeatedField(proto.UINT32, number=2)

class RoleTemplateData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    description = proto.Field(LanguageStringData, number=3)
    occupySize = proto.Field(proto.INT32, number=4)
    modelCode = proto.Field(proto.UINT32, number=5)

class RoleTypeCData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    enName = proto.Field(proto.STRING, number=3)

class SandboxBossBattleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    o_LLKGDDMIOAL = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    des = proto.Field(proto.STRING, number=4)
    icon = proto.Field(proto.STRING, number=5)
    o_PLLDEDEJIIB = proto.Field(proto.UINT32, number=6)
    o_GKOKCBAHKDA = proto.Field(proto.UINT32, number=7)

class SandboxContractData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    des = proto.Field(proto.STRING, number=3)
    point = proto.Field(proto.UINT32, number=4)
    duration = proto.Field(proto.UINT32, number=5)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    o_NCIFNGEKIOE = proto.MapField(proto.UINT32, proto.UINT32, number=7)
    o_APABEMHIBGF = proto.Field(proto.UINT32, number=8)
    o_PNADAKIGFGL = proto.Field(proto.UINT32, number=9)
    o_EKFICDHPEIC = proto.Field(proto.UINT32, number=10)

class SandboxMapData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    enable = proto.Field(proto.BOOL, number=2)
    o_EBLCENJBEBF = proto.Field(proto.INT64, number=3)
    o_CACMMLKDABC = proto.Field(proto.INT64, number=4)
    o_JIOCAOGBCMN = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    o_EMNIEAACMOG = proto.Field(proto.UINT32, number=6)
    eventId = proto.Field(proto.UINT32, number=7)
    function = proto.MapField(proto.UINT32, proto.UINT32, number=8)

class SandboxMapResourceData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    building = proto.Field(proto.STRING, number=3)

class SandboxRaidData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    o_LLKGDDMIOAL = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    des = proto.Field(proto.STRING, number=4)
    icon = proto.Field(proto.STRING, number=5)
    o_PLLDEDEJIIB = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    o_GKOKCBAHKDA = proto.Field(proto.UINT32, number=7)

class SandboxTicketRaidBySandboxIdData(proto.Message):
    o_DPFKLBCEKAG = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class SandboxTicketRaidData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    o_DPFKLBCEKAG = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    des = proto.Field(proto.STRING, number=4)
    icon = proto.Field(proto.STRING, number=5)
    o_IBHCNONLJCH = proto.RepeatedField(proto.UINT32, number=6)

class SecondDutyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    description = proto.Field(LanguageStringData, number=3)
    icon = proto.Field(proto.STRING, number=4)

class ShortcutKeyByTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class ShortcutKeyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    value = proto.RepeatedField(proto.STRING, number=4)

class ShortcutKeyTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)

class SimCoffeeTaskByTaskGroupData(proto.Message):
    taskGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class SimCoffeeTaskData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    taskGroup = proto.Field(proto.UINT32, number=2)
    preTask = proto.Field(proto.UINT32, number=3)
    title = proto.Field(proto.STRING, number=4)
    desc = proto.Field(proto.STRING, number=5)
    conditionId = proto.Field(proto.UINT32, number=6)
    conditionNum = proto.Field(proto.UINT32, number=7)
    conditionArg0 = proto.Field(proto.UINT32, number=8)
    conditionArg1 = proto.Field(proto.UINT32, number=9)
    conditionArg2 = proto.Field(proto.UINT32, number=10)
    conditionArg3 = proto.Field(proto.UINT32, number=11)
    counterType = proto.Field(proto.UINT32, number=12)
    resetType = proto.Field(proto.UINT32, number=13)
    reward = proto.Field(KvSortUintData, number=14)

class SimCombatEntranceData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    image = proto.Field(proto.STRING, number=3)
    icon = proto.Field(proto.STRING, number=4)
    bgPath = proto.Field(proto.STRING, number=5)
    openTime = proto.Field(LanguageStringData, number=6)
    dropItem = proto.Field(proto.UINT32, number=7)
    labelId = proto.RepeatedField(proto.UINT32, number=8)
    unlock = proto.Field(proto.UINT32, number=9)
    extraDropCost = proto.Field(proto.UINT32, number=10)
    itemId = proto.Field(proto.UINT32, number=11)
    extraDropTimes = proto.Field(proto.UINT32, number=12)
    displayName = proto.Field(proto.UINT32, number=13)
    itemTimes = proto.Field(proto.UINT32, number=14)
    unlockDescribe = proto.Field(LanguageStringData, number=15)

class SimCombatMythicBuffData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    skillId = proto.Field(proto.UINT32, number=3)

class SimCombatMythicConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    stage = proto.RepeatedField(proto.UINT32, number=2)
    bossIcon = proto.Field(proto.STRING, number=3)

class SimCombatMythicGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupType = proto.Field(proto.UINT32, number=2)
    o_ANJIHPIMEOM = proto.Field(proto.UINT32, number=3)
    goupName = proto.Field(LanguageStringData, number=4)
    groupBg = proto.Field(proto.STRING, number=5)
    groupDesc = proto.Field(LanguageStringData, number=6)
    config = proto.RepeatedField(proto.UINT32, number=7)
    level = proto.Field(proto.UINT32, number=8)

class SimCombatMythicLevelData(proto.Message):
    levelId = proto.Field(proto.UINT32, number=1)
    levelName = proto.Field(proto.STRING, number=2)
    levelDesc = proto.Field(proto.STRING, number=3)
    baseRequire = proto.Field(proto.UINT32, number=4)
    recommendLevel = proto.Field(proto.UINT32, number=5)
    mainEnemy = proto.Field(proto.STRING, number=6)

class SimCombatMythicMainData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    enchantment = proto.RepeatedField(proto.UINT32, number=2)
    buffGroup = proto.Field(proto.UINT32, number=3)
    rewardList = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    bossStage = proto.Field(proto.UINT32, number=5)
    bossIcon = proto.Field(proto.STRING, number=6)
    bossId = proto.Field(proto.UINT32, number=7)
    bossElement = proto.Field(proto.INT32, number=8)
    levelList = proto.RepeatedField(proto.UINT32, number=9)
    imageBg = proto.Field(proto.STRING, number=10)
    imageTheme = proto.Field(proto.STRING, number=11)

class SimCombatMythicPlanData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    stagePlan = proto.Field(proto.STRING, number=2)

class SimCombatMythicStageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    stage = proto.Field(proto.UINT32, number=2)
    bossElement = proto.Field(proto.INT32, number=3)
    difficulty = proto.Field(proto.UINT32, number=4)

class SimCombatMythicStagesData(proto.Message):
    stageId = proto.Field(proto.UINT32, number=1)
    requireDesc = proto.Field(LanguageStringData, number=2)
    reward = proto.Field(KvSortUintData, number=3)

class SimCombatResourceData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    simType = proto.Field(proto.UINT32, number=2)
    unlockDetail = proto.Field(proto.UINT32, number=3)
    stageIcon = proto.Field(proto.STRING, number=4)
    unlockLevel = proto.Field(proto.UINT32, number=5)
    name = proto.Field(LanguageStringData, number=6)
    cashGroupId = proto.RepeatedField(proto.UINT32, number=7)
    modSuitDrop = proto.RepeatedField(proto.UINT32, number=8)
    modSuitDropOn = proto.Field(proto.UINT32, number=9)
    suitPlanDes = proto.Field(LanguageStringData, number=10)

class SimCombatRunesData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    stageId = proto.Field(proto.UINT32, number=3)
    unlock = proto.Field(proto.INT32, number=4)
    unlockDetail = proto.Field(proto.UINT32, number=5)
    sequence = proto.Field(proto.STRING, number=6)

class SimCombatTutorialChapterData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    chapterName = proto.Field(LanguageStringData, number=2)
    chapterIcon = proto.Field(proto.STRING, number=3)
    chapterBg = proto.Field(proto.STRING, number=4)
    chapterLevels = proto.RepeatedField(proto.UINT32, number=5)
    chapterUnlock = proto.Field(proto.UINT32, number=6)
    chapterRelation = proto.RepeatedField(proto.UINT32, number=7)
    unlcokTips = proto.Field(LanguageStringData, number=8)
    chapterMission = proto.Field(LanguageStringData, number=9)
    chapterReward = proto.MapField(proto.UINT32, proto.UINT32, number=10)

class SimCombatTutorialLevelsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    simType = proto.Field(proto.UINT32, number=2)
    unlockStage = proto.Field(proto.UINT32, number=3)
    number = proto.Field(LanguageStringData, number=4)
    tutorials = proto.RepeatedField(proto.UINT32, number=5)
    tutorialsMark = proto.Field(proto.UINT32, number=6)

class SimCombatTutorialProgressData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    pptProgress = proto.Field(proto.UINT32, number=2)
    progressReward = proto.MapField(proto.UINT32, proto.UINT32, number=3)

class SimCombatTutorialSectionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sectionName = proto.Field(LanguageStringData, number=2)
    sectionChapters = proto.RepeatedField(proto.UINT32, number=3)
    sectionUnlock = proto.Field(proto.UINT32, number=4)
    unlcokTips = proto.Field(LanguageStringData, number=5)

class SimCombatTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    labelName = proto.Field(LanguageStringData, number=2)
    extraDropCost = proto.Field(proto.UINT32, number=3)
    extraDropTimer = proto.Field(proto.UINT32, number=4)
    labelSequence = proto.Field(proto.INT32, number=5)
    icon = proto.Field(proto.STRING, number=6)
    bg = proto.Field(proto.STRING, number=7)
    unlock = proto.Field(proto.UINT32, number=8)
    dutyId = proto.Field(proto.UINT32, number=9)

class SimConfigData(proto.Message):
    submoduleId = proto.Field(proto.UINT32, number=1)
    planId = proto.Field(proto.UINT32, number=2)
    unlockId = proto.Field(proto.UINT32, number=3)
    unlockDayNum = proto.Field(proto.UINT32, number=4)
    tokenItem = proto.Field(proto.UINT32, number=5)
    sceneGroup = proto.Field(proto.UINT32, number=6)
    scenePath = proto.Field(proto.STRING, number=7)
    avatarGroup = proto.Field(proto.UINT32, number=8)
    gradeGroup = proto.Field(proto.UINT32, number=9)
    idleGroup = proto.Field(proto.UINT32, number=10)
    menuGroup = proto.Field(proto.UINT32, number=11)
    shopGroup = proto.Field(proto.UINT32, number=12)
    synthesisGroup = proto.Field(proto.UINT32, number=13)
    synthesisOrder = proto.Field(proto.UINT32, number=14)
    name = proto.Field(LanguageStringData, number=15)

class SimGradeByGradeGroupData(proto.Message):
    gradeGroup = proto.Field(proto.UINT32, number=1)
    gradeId = proto.RepeatedField(proto.UINT32, number=2)

class SimGradeData(proto.Message):
    gradeId = proto.Field(proto.UINT32, number=1)
    gradeGroup = proto.Field(proto.UINT32, number=2)
    level = proto.Field(proto.UINT32, number=3)
    taskGroup = proto.Field(proto.UINT32, number=4)
    idleLevel = proto.Field(proto.UINT32, number=5)
    avatarCd = proto.Field(proto.UINT32, number=6)
    avatarId = proto.RepeatedField(proto.UINT32, number=7)
    menuMax = proto.Field(proto.UINT32, number=8)
    shopMax = proto.Field(proto.UINT32, number=9)
    dailyLimit = proto.Field(proto.UINT32, number=10)
    uavMax = proto.Field(proto.UINT32, number=11)
    gradeName = proto.Field(LanguageStringData, number=12)
    packageLimit = proto.Field(proto.UINT32, number=13)

class SimIdleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    idleGroup = proto.Field(proto.UINT32, number=2)
    idleLevel = proto.Field(proto.UINT32, number=3)
    idleArticle = proto.Field(proto.UINT32, number=4)
    idleItem = proto.Field(proto.UINT32, number=5)
    idleNum = proto.Field(proto.UINT32, number=6)
    idleAlarm = proto.Field(proto.UINT32, number=7)
    outerItem = proto.Field(proto.UINT32, number=8)
    outerNum = proto.Field(proto.UINT32, number=9)
    outerCd = proto.Field(proto.UINT32, number=10)
    synthesisItem = proto.Field(proto.UINT32, number=11)
    synthesisTime = proto.Field(proto.UINT32, number=12)
    synthesisRate = proto.Field(proto.UINT32, number=13)
    synthesisNum = proto.Field(proto.UINT32, number=14)
    idleAvatar = proto.RepeatedField(proto.UINT32, number=15)

class SimMenuData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    menuGroup = proto.Field(proto.UINT32, number=2)
    coffeeLevel = proto.Field(proto.UINT32, number=3)
    itemNum = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    recipeId = proto.RepeatedField(proto.UINT32, number=5)
    upList = proto.RepeatedField(proto.UINT32, number=6)
    saleShow = proto.Field(proto.UINT32, number=7)

class SimRecipeByMenuGroupData(proto.Message):
    menuGroup = proto.Field(proto.UINT32, number=1)
    recipeId = proto.RepeatedField(proto.UINT32, number=2)

class SimRecipeData(proto.Message):
    recipeId = proto.Field(proto.UINT32, number=1)
    menuGroup = proto.Field(proto.UINT32, number=2)
    recipeName = proto.Field(LanguageStringData, number=3)
    recipeIcon = proto.Field(proto.STRING, number=4)
    itemMaterial = proto.Field(proto.UINT32, number=5)
    materialNum = proto.Field(proto.UINT32, number=6)
    itemCoffee = proto.Field(proto.UINT32, number=7)
    coffeeNum = proto.Field(proto.UINT32, number=8)
    time = proto.Field(proto.UINT32, number=9)
    value = proto.Field(proto.UINT32, number=10)

class SimRecipeMaterialByItemMaterialData(proto.Message):
    itemMaterial = proto.Field(proto.UINT32, number=1)
    recipeId = proto.RepeatedField(proto.UINT32, number=2)

class SimRecipeMaterialData(proto.Message):
    recipeId = proto.Field(proto.UINT32, number=1)
    itemMaterial = proto.Field(proto.UINT32, number=2)

class SimStoreByShopGroupData(proto.Message):
    shopGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class SimStoreData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    shopGroup = proto.Field(proto.UINT32, number=2)
    shopLevel = proto.Field(proto.UINT32, number=3)
    itemNum = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    tabId = proto.Field(proto.UINT32, number=5)

class SimSynthesisOrderBySynthesisOrderData(proto.Message):
    synthesisOrder = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class SimSynthesisOrderData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    synthesisOrder = proto.Field(proto.UINT32, number=2)
    synthesisItem = proto.Field(proto.UINT32, number=3)
    nextItem = proto.Field(proto.UINT32, number=4)
    synthesisNumBase = proto.Field(proto.UINT32, number=5)
    outerNumBase = proto.Field(proto.UINT32, number=6)
    synthesisNumExtra = proto.Field(proto.UINT32, number=7)
    outerNumExtra = proto.Field(proto.UINT32, number=8)
    extraBonus = proto.MapField(proto.UINT32, proto.UINT32, number=9)

class SimSynthesisTransferData(proto.Message):
    synthesisGroup = proto.Field(proto.UINT32, number=1)
    transferItem = proto.Field(proto.UINT32, number=2)
    transferLimit = proto.Field(proto.UINT32, number=3)
    singleTransfer = proto.Field(proto.UINT32, number=4)
    transferItemN = proto.RepeatedField(proto.STRING, number=5)
    transferLimitN = proto.RepeatedField(proto.UINT32, number=6)
    transferNum = proto.RepeatedField(proto.UINT32, number=7)

class SimTaskConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    unlockDayNum = proto.Field(proto.UINT32, number=2)
    rewardGroup = proto.Field(proto.UINT32, number=3)
    taskGroup = proto.Field(proto.UINT32, number=4)
    pointIcon = proto.Field(proto.STRING, number=5)
    sceneGroup = proto.Field(proto.UINT32, number=6)
    scenePath = proto.Field(proto.STRING, number=7)
    avatarGroup = proto.Field(proto.UINT32, number=8)
    name = proto.Field(LanguageStringData, number=9)

class SimTaskIndexData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    desc = proto.Field(LanguageStringData, number=3)
    taskIcon = proto.Field(proto.STRING, number=4)
    material = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    point = proto.Field(proto.UINT32, number=6)

class SimTaskListByTaskGroupData(proto.Message):
    taskGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class SimTaskListData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    taskGroup = proto.Field(proto.UINT32, number=2)
    dayId = proto.Field(proto.UINT32, number=3)
    group = proto.RepeatedField(proto.UINT32, number=4)

class SimTaskRewardByRewardGroupData(proto.Message):
    rewardGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class SimTaskRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rewardGroup = proto.Field(proto.UINT32, number=2)
    rank = proto.Field(proto.UINT32, number=3)
    point = proto.Field(proto.UINT32, number=4)
    rewardItem = proto.Field(KvSortUintData, number=5)
    rewardName = proto.Field(LanguageStringData, number=6)

class SimWeeklyAByRouteData(proto.Message):
    route = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class SimWeeklyAData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    stageId = proto.Field(proto.UINT32, number=2)
    route = proto.Field(proto.UINT32, number=3)
    type = proto.Field(proto.UINT32, number=4)
    buff = proto.Field(proto.UINT32, number=5)
    preshortcutId = proto.RepeatedField(proto.UINT32, number=6)
    nextshortcutId = proto.RepeatedField(proto.UINT32, number=7)
    showType = proto.Field(proto.UINT32, number=8)
    position = proto.Field(proto.STRING, number=9)
    startPoint = proto.Field(proto.UINT32, number=10)
    shortcutstartPoint = proto.Field(proto.STRING, number=11)

class SimWeeklyCycleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    aId = proto.RepeatedField(proto.UINT32, number=2)
    bId = proto.Field(proto.UINT32, number=3)
    maxTeam = proto.Field(proto.UINT32, number=4)
    buffId = proto.Field(proto.UINT32, number=5)
    bMainId = proto.Field(proto.UINT32, number=6)
    rankingGroup = proto.Field(proto.UINT32, number=7)
    name = proto.Field(LanguageStringData, number=8)
    des = proto.Field(LanguageStringData, number=9)
    bossId = proto.Field(proto.STRING, number=10)
    showList = proto.MapField(proto.UINT32, proto.STRING, number=11)
    questType = proto.Field(proto.UINT32, number=12)
    questLevel = proto.Field(proto.UINT32, number=13)
    bCost = proto.MapField(proto.UINT32, proto.UINT32, number=14)
    bReward = proto.MapField(proto.UINT32, proto.UINT32, number=15)
    bBossId = proto.Field(proto.STRING, number=16)
    rankItem = proto.Field(proto.UINT32, number=17)
    gunId = proto.RepeatedField(proto.UINT32, number=18)

class SimWeeklyQuestByTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class SimWeeklyQuestData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    description = proto.Field(LanguageStringData, number=4)
    conditionKey = proto.Field(proto.UINT64, number=5)
    conditionClass = proto.Field(proto.UINT32, number=6)
    conditionNum = proto.Field(proto.UINT32, number=7)
    conditionArg0 = proto.Field(proto.UINT32, number=8)
    conditionArg1 = proto.Field(proto.UINT32, number=9)
    conditionArg2 = proto.Field(proto.UINT32, number=10)
    conditionArg3 = proto.Field(proto.UINT32, number=11)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=12)

class SimWeeklyQuestScheduleByTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class SimWeeklyQuestScheduleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    rank = proto.Field(proto.UINT32, number=3)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=4)

class SimWeeklyRankingByGroupIdData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    rankId = proto.RepeatedField(proto.UINT32, number=2)

class SimWeeklyRankingData(proto.Message):
    rankId = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    rankType = proto.Field(proto.UINT32, number=3)
    upperRankDetail = proto.Field(proto.UINT32, number=4)
    lowerRankDetail = proto.Field(proto.UINT32, number=5)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=6)

class SkillBlockData(proto.Message):
    coverType = proto.Field(proto.UINT32, number=1)
    blockType = proto.Field(proto.UINT32, number=2)

class SkillConfigData(proto.Message):
    animctrlId = proto.Field(proto.UINT32, number=1)
    frames = proto.RepeatedField(proto.INT64, number=2)

class SkillEventConfigData(proto.Message):
    uuid = proto.Field(proto.INT64, number=1)
    eventType = proto.Field(proto.INT32, number=2)
    eventId = proto.Field(proto.UINT32, number=3)
    paramIds = proto.RepeatedField(proto.INT64, number=4)

class SkillEventParamData(proto.Message):
    uuid = proto.Field(proto.INT64, number=1)
    name = proto.Field(proto.INT32, number=2)
    value = proto.Field(proto.STRING, number=3)

class SkillFrameConfigData(proto.Message):
    uuid = proto.Field(proto.INT64, number=1)
    frame = proto.Field(proto.INT32, number=2)
    eventConfigId = proto.RepeatedField(proto.INT64, number=3)

class SkillGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    skillLevel = proto.Field(proto.INT32, number=3)
    skillList = proto.RepeatedField(proto.UINT32, number=4)
    skillDescription = proto.Field(LanguageStringData, number=5)
    lvupDescription = proto.Field(LanguageStringData, number=6)
    itemConsumption = proto.MapField(proto.UINT32, proto.UINT32, number=7)

class SkillGroupTacticData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    skillLevel = proto.Field(proto.INT32, number=3)
    skillList = proto.Field(proto.STRING, number=4)
    skillDescription = proto.Field(LanguageStringData, number=5)
    lvupDescription = proto.Field(LanguageStringData, number=6)
    itemConsumption = proto.Field(proto.STRING, number=7)

class SkinTypeByTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class SkinTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)

class Slg2dzBuffConvertData(proto.Message):
    slgtodzBuffId = proto.Field(proto.UINT32, number=1)
    inDzBuffId = proto.Field(proto.UINT32, number=2)
    timeScale = proto.Field(proto.UINT32, number=3)
    takeOutRule = proto.Field(proto.UINT32, number=4)

class Slg2dzBuffConvertEnemyData(proto.Message):
    slgtodzBuffId = proto.Field(proto.UINT32, number=1)
    inDzBuffId = proto.Field(proto.UINT32, number=2)
    timeScale = proto.Field(proto.UINT32, number=3)
    takeOutRule = proto.Field(proto.UINT32, number=4)

class Slg2dzCellConvertData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    gridCanExit = proto.Field(proto.UINT32, number=2)

class Slg2dzCoverConvertData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    coverCanExit = proto.Field(proto.UINT32, number=2)
    coverCanExitList = proto.RepeatedField(proto.UINT32, number=3)

class SoundTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    model = proto.Field(proto.STRING, number=2)
    soundType = proto.Field(proto.UINT32, number=3)
    soundPath = proto.Field(proto.UINT32, number=4)

class SpawnCutsceneData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.INT32, number=2)
    cutsceneName = proto.Field(proto.STRING, number=3)
    cutsceneDuration = proto.Field(proto.DOUBLE, number=4)
    cameraLookAtTime = proto.Field(proto.DOUBLE, number=5)

class SquadTalentGroupData(proto.Message):
    pointId = proto.Field(proto.INT64, number=1)
    squadTalentTreeGroup = proto.Field(proto.UINT32, number=2)
    perPoint = proto.RepeatedField(proto.INT64, number=3)
    openType = proto.Field(proto.UINT32, number=4)
    unlockCondition = proto.Field(proto.UINT32, number=5)
    pointType = proto.Field(proto.UINT32, number=6)
    talentEffectGeneGroup = proto.Field(proto.UINT32, number=7)
    traverseTalentEffectGeneGroup = proto.RepeatedField(proto.UINT64, number=8)
    level = proto.Field(proto.UINT32, number=9)
    maxLevel = proto.Field(proto.UINT32, number=10)
    tpItemCost = proto.Field(proto.UINT32, number=11)
    cost = proto.MapField(proto.UINT32, proto.UINT32, number=12)

class SquadTalentGunData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    talentName = proto.Field(LanguageStringData, number=2)
    gunType = proto.Field(proto.UINT32, number=3)
    talentTips = proto.Field(LanguageStringData, number=4)
    achievementDetailId = proto.Field(proto.UINT32, number=5)
    tpItemId = proto.Field(proto.UINT32, number=6)
    maxTpNum = proto.Field(proto.UINT32, number=7)
    squadTalentTreeId = proto.Field(proto.UINT32, number=8)
    traverseSquadTalentTreeId = proto.RepeatedField(proto.UINT64, number=9)
    initialTalentKeyId = proto.Field(proto.UINT32, number=10)
    unlockSheet = proto.Field(proto.UINT32, number=11)
    unlockId = proto.Field(proto.UINT32, number=12)
    fullyActiveItemId = proto.Field(proto.UINT32, number=13)
    talentBonusGroup = proto.Field(proto.UINT32, number=14)
    privateSlotNumber = proto.Field(proto.UINT32, number=15)
    publicSlotNumber = proto.Field(proto.UINT32, number=16)

class SquadTalentProfessionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    talentName = proto.Field(LanguageStringData, number=2)
    dutyType = proto.Field(proto.UINT32, number=3)
    talentIcon = proto.Field(proto.STRING, number=4)
    talentBg = proto.Field(proto.STRING, number=5)
    talentLeftIcon = proto.Field(proto.STRING, number=6)
    talentLeftBg = proto.Field(proto.STRING, number=7)
    talentRightIcon = proto.Field(proto.STRING, number=8)
    talentRightBg = proto.Field(proto.STRING, number=9)
    talentTips = proto.Field(LanguageStringData, number=10)
    achievementDetailId = proto.Field(proto.UINT32, number=11)
    tpItemId = proto.Field(proto.UINT32, number=12)
    maxTpNum = proto.Field(proto.UINT32, number=13)
    squadTalentTreeId = proto.Field(proto.UINT32, number=14)
    traverseSquadTalentTreeId = proto.RepeatedField(proto.UINT64, number=15)
    talentType = proto.Field(proto.UINT32, number=16)

class SquadTalentTreeData(proto.Message):
    squadTalentTreeGroupId = proto.Field(proto.UINT32, number=1)
    squadTalentTreeId = proto.Field(proto.UINT32, number=2)
    perGroup = proto.RepeatedField(proto.UINT32, number=3)
    openPoijnt = proto.RepeatedField(proto.UINT64, number=4)
    openType = proto.Field(proto.UINT32, number=5)
    name = proto.Field(LanguageStringData, number=6)
    icon = proto.Field(proto.STRING, number=7)
    traversePointId = proto.RepeatedField(proto.UINT64, number=8)

class StageAdditionalGridData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    grid = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    args = proto.Field(proto.STRING, number=4)

class StageAdditionalGridInfoData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    description = proto.Field(proto.STRING, number=3)
    showType = proto.Field(proto.STRING, number=4)
    args = proto.Field(proto.STRING, number=5)
    objPath = proto.Field(proto.STRING, number=6)
    effectPath = proto.Field(proto.STRING, number=7)
    extraEffectPath = proto.Field(proto.STRING, number=8)
    extraObjPath = proto.Field(proto.STRING, number=9)
    button = proto.Field(LanguageStringData, number=10)
    upperLimit = proto.Field(LanguageStringData, number=11)

class StageAdditionalMapData(proto.Message):
    stageId = proto.Field(proto.UINT32, number=1)
    mapId = proto.Field(proto.UINT32, number=2)
    gridNum = proto.RepeatedField(proto.UINT32, number=3)

class StageCellChangeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    changeCellType = proto.Field(proto.UINT32, number=2)
    endState = proto.Field(proto.UINT32, number=3)
    propertyBase = proto.Field(proto.UINT32, number=4)
    triggerSkillId = proto.Field(proto.UINT32, number=5)
    changeEffectRange = proto.Field(proto.UINT32, number=6)
    changeName = proto.Field(proto.STRING, number=7)
    changeEffectId = proto.Field(proto.STRING, number=8)
    cellTrigger = proto.RepeatedField(proto.INT32, number=9)

class StageCellTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cellName = proto.Field(proto.STRING, number=2)
    cellEffectPath = proto.Field(proto.UINT32, number=3)
    cellEffectIconPath = proto.Field(proto.STRING, number=4)
    cellEffectBasePath = proto.Field(proto.STRING, number=5)
    isCellEffectLink = proto.Field(proto.UINT32, number=6)
    stageCellAudio = proto.Field(proto.UINT32, number=7)
    stateSkillId = proto.Field(proto.UINT32, number=8)
    spreadType = proto.Field(proto.UINT32, number=9)
    spreadTime = proto.Field(proto.UINT32, number=10)
    spreadFrequency = proto.Field(proto.STRING, number=11)
    cellGroup = proto.Field(proto.UINT32, number=12)
    cellPriority = proto.Field(proto.UINT32, number=13)
    cellTime = proto.Field(proto.STRING, number=14)
    cellChangeId = proto.Field(proto.STRING, number=15)
    gridText = proto.Field(proto.STRING, number=16)
    canShow = proto.Field(proto.UINT32, number=17)
    skillReleaser = proto.Field(proto.UINT32, number=18)
    banInteration = proto.Field(proto.STRING, number=19)
    cellCertainCover = proto.Field(proto.INT32, number=20)
    cellCertainExclude = proto.Field(proto.INT32, number=21)
    cellSkillId = proto.Field(proto.STRING, number=22)
    skillTime = proto.Field(proto.STRING, number=23)
    canShowEstimates = proto.Field(proto.UINT32, number=24)
    enemyShowType = proto.Field(proto.UINT32, number=25)
    enemyShowText = proto.Field(proto.STRING, number=26)
    friendShowType = proto.Field(proto.UINT32, number=27)
    friendShowText = proto.Field(proto.STRING, number=28)
    neutralShowType = proto.Field(proto.UINT32, number=29)
    neutralShowText = proto.Field(proto.STRING, number=30)
    withdrawShow = proto.Field(proto.UINT32, number=31)
    o_EGPGOAIJFOG = proto.Field(proto.UINT32, number=32)

class StageChallengeConditionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    chargetime = proto.Field(proto.STRING, number=2)
    chargetimeParm = proto.RepeatedField(proto.STRING, number=3)
    chargetimeFail = proto.Field(proto.STRING, number=4)
    chargetimeFailParm = proto.RepeatedField(proto.STRING, number=5)
    condition = proto.Field(proto.STRING, number=6)
    conditionFail = proto.Field(proto.STRING, number=7)

class StageChallengeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    args = proto.RepeatedField(proto.STRING, number=3)
    argsFail = proto.RepeatedField(proto.STRING, number=4)
    title = proto.Field(LanguageStringData, number=5)
    description = proto.Field(LanguageStringData, number=6)
    reward = proto.MapField(proto.UINT32, proto.UINT32, number=7)

class StageConfigData(proto.Message):
    stageId = proto.Field(proto.UINT32, number=1)
    avgId = proto.Field(proto.UINT32, number=2)
    gunBirthPoints = proto.Field(proto.STRING, number=3)
    enemies = proto.RepeatedField(proto.UINT32, number=4)
    initialEnemies = proto.Field(proto.STRING, number=5)
    gunMinCount = proto.Field(proto.UINT32, number=6)
    gunLimit = proto.Field(proto.UINT32, number=7)
    mapId = proto.Field(proto.UINT32, number=8)
    enemyIds = proto.RepeatedField(proto.UINT32, number=9)
    enemyGroups = proto.RepeatedField(proto.UINT32, number=10)
    events = proto.RepeatedField(proto.UINT32, number=11)
    strongholds = proto.RepeatedField(proto.UINT32, number=12)
    triggers = proto.RepeatedField(proto.UINT32, number=13)
    defendGunLimit = proto.Field(proto.UINT32, number=14)
    defendBirthPoints = proto.Field(proto.STRING, number=15)
    defaultGuns = proto.Field(proto.STRING, number=16)
    limitedGun = proto.Field(proto.STRING, number=17)
    performanceId = proto.Field(proto.UINT32, number=18)
    gunPresetIds = proto.RepeatedField(proto.UINT32, number=19)
    expandSkill = proto.RepeatedField(proto.UINT32, number=20)
    expandWaveId = proto.Field(proto.STRING, number=21)

class StageCounterData(proto.Message):
    id = proto.Field(proto.INT32, number=1)
    stageConfigId = proto.Field(proto.INT32, number=2)
    value = proto.Field(proto.INT32, number=3)
    initValue = proto.Field(proto.INT32, number=4)
    maxValue = proto.Field(proto.INT32, number=5)
    minValue = proto.Field(proto.INT32, number=6)

class StageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    chapter = proto.Field(proto.UINT32, number=2)
    code = proto.Field(LanguageStringData, number=3)
    name = proto.Field(LanguageStringData, number=4)
    synopsis = proto.Field(LanguageStringData, number=5)
    goal = proto.Field(LanguageStringData, number=6)
    recommandedPlayerlevel = proto.Field(proto.UINT32, number=7)
    costItem = proto.Field(proto.UINT32, number=8)
    staminaCost = proto.Field(proto.UINT32, number=9)
    gunExp = proto.Field(proto.UINT32, number=10)
    exp = proto.Field(proto.UINT32, number=11)
    specialMark = proto.Field(proto.UINT32, number=12)
    desPic = proto.Field(proto.STRING, number=13)
    challengeList = proto.RepeatedField(proto.UINT32, number=14)
    firstReward = proto.MapField(proto.UINT32, proto.UINT32, number=15)
    coin = proto.Field(proto.UINT32, number=16)
    expReward = proto.MapField(proto.UINT32, proto.UINT32, number=17)
    normalDropList = proto.RepeatedField(proto.UINT32, number=18)
    normalDropViewList = proto.MapField(proto.UINT32, proto.UINT32, number=19)
    type = proto.Field(proto.INT32, number=20)
    slgtype = proto.Field(proto.INT32, number=21)
    timeCountdown = proto.Field(proto.UINT32, number=22)
    roundCountdown = proto.Field(proto.UINT32, number=23)
    showCountdown = proto.Field(proto.UINT32, number=24)
    scene = proto.Field(proto.STRING, number=25)
    stageConfig = proto.Field(proto.UINT32, number=26)
    stageGuideGroupid = proto.Field(proto.UINT32, number=27)
    gunIntroGroupid = proto.Field(proto.UINT32, number=28)
    stageClass = proto.Field(proto.UINT32, number=29)
    stageBalance = proto.Field(proto.UINT32, number=30)
    xRange = proto.Field(proto.INT32, number=31)
    yRange = proto.Field(proto.INT32, number=32)
    cameraXozRange = proto.Field(proto.STRING, number=33)
    maxCoverNum = proto.Field(proto.UINT32, number=34)
    perloadCutscene = proto.Field(proto.STRING, number=35)
    climate = proto.Field(proto.UINT32, number=36)
    suit = proto.Field(proto.UINT32, number=37)
    pollution = proto.Field(proto.BOOL, number=38)
    pollutionSuit = proto.Field(proto.UINT32, number=39)
    pollutionBattleSkill = proto.Field(proto.UINT32, number=40)
    weather = proto.Field(proto.UINT32, number=41)
    stageTime = proto.Field(proto.INT32, number=42)
    victoryPerformanceEnvironment = proto.Field(proto.STRING, number=43)
    canAuto = proto.Field(proto.BOOL, number=44)
    canRaid = proto.Field(proto.UINT32, number=45)
    canReconnect = proto.Field(proto.UINT32, number=46)
    cameraDirection = proto.RepeatedField(proto.INT32, number=47)
    gamestartshowName = proto.Field(proto.UINT32, number=48)
    sceneLightingTimeSuffix = proto.Field(proto.INT32, number=49)
    sceneLightingWeatherSuffix = proto.Field(proto.INT32, number=50)
    overrideTimeScene = proto.Field(proto.STRING, number=51)
    stagePotentialTag = proto.Field(proto.INT32, number=52)
    bgmId = proto.Field(proto.INT32, number=53)
    soundId = proto.RepeatedField(proto.INT32, number=54)
    godId = proto.Field(proto.STRING, number=55)
    preBgmId = proto.Field(proto.INT32, number=56)
    blockFunction = proto.Field(proto.STRING, number=57)
    roundCutin = proto.RepeatedField(proto.INT32, number=58)
    timelineType = proto.Field(proto.UINT32, number=59)
    timelineSuffix = proto.Field(proto.STRING, number=60)
    disableKeyboard = proto.Field(proto.BOOL, number=61)
    isSequenceAct = proto.Field(proto.BOOL, number=62)
    moreDropList = proto.RepeatedField(proto.UINT32, number=63)
    moreDropViewList = proto.MapField(proto.UINT32, proto.UINT32, number=64)
    weaponExp = proto.Field(proto.UINT32, number=65)
    weaponExpFirst = proto.Field(proto.UINT32, number=66)
    recommandedCe = proto.Field(proto.UINT32, number=67)
    expFirst = proto.Field(proto.UINT32, number=68)
    gunExpFirst = proto.Field(proto.UINT32, number=69)
    rewardShow = proto.Field(proto.UINT32, number=70)
    skipResult = proto.Field(proto.UINT32, number=71)
    firstCostItem = proto.Field(proto.UINT32, number=72)
    firstStaminaCost = proto.Field(proto.UINT32, number=73)
    cameraPoint = proto.Field(proto.STRING, number=74)
    cameraDis = proto.Field(proto.DOUBLE, number=75)
    battleCameraDirection = proto.Field(proto.STRING, number=76)
    battleCameraPoint = proto.Field(proto.STRING, number=77)
    battleCameraDis = proto.Field(proto.DOUBLE, number=78)
    skipReady = proto.Field(proto.BOOL, number=79)
    skipAllresult = proto.Field(proto.BOOL, number=80)
    reconnectEnterBattle = proto.Field(proto.BOOL, number=81)
    cannotGiveUp = proto.Field(proto.BOOL, number=82)
    simulateEffect = proto.Field(proto.UINT32, number=83)
    withdrawStageCount = proto.Field(proto.INT32, number=84)
    withdrawBgmId = proto.Field(proto.UINT32, number=85)
    goalShow = proto.Field(proto.BOOL, number=86)
    levelDifficulty = proto.Field(proto.UINT32, number=87)
    withdrawFailedOpen = proto.Field(proto.INT32, number=88)
    roundOrder = proto.RepeatedField(proto.INT32, number=89)
    isBattleCheck = proto.Field(proto.BOOL, number=90)
    dynamicLevel = proto.Field(proto.INT32, number=91)
    cameraLimit = proto.Field(proto.DOUBLE, number=92)

class StageDisplacementData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    relative = proto.Field(proto.UINT32, number=3)
    distance = proto.Field(proto.UINT32, number=4)
    drop = proto.Field(proto.INT32, number=5)
    moveCode = proto.Field(proto.UINT32, number=6)
    blindageBreak = proto.Field(proto.INT32, number=7)
    collisionPlayer = proto.Field(proto.UINT32, number=8)
    collisionEnemy = proto.Field(proto.UINT32, number=9)
    effectTypeTarget = proto.Field(proto.INT32, number=10)
    resultUnitTarget = proto.Field(proto.STRING, number=11)
    resultCollisionCover = proto.Field(proto.STRING, number=12)
    resultDrop = proto.Field(proto.STRING, number=13)
    displacementId = proto.Field(proto.UINT32, number=14)
    effectCollision = proto.Field(proto.STRING, number=15)
    effectTrailing = proto.Field(proto.STRING, number=16)

class StageEnemyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    enemyId = proto.Field(proto.UINT32, number=2)
    rotation = proto.Field(proto.STRING, number=3)
    birthPoint = proto.RepeatedField(proto.UINT32, number=4)
    showSkill = proto.Field(proto.BOOL, number=5)
    specifyId = proto.RepeatedField(proto.UINT32, number=6)
    showDeadCamera = proto.Field(proto.BOOL, number=7)
    elementId = proto.Field(proto.UINT32, number=8)
    args = proto.RepeatedField(proto.STRING, number=9)
    modification = proto.Field(proto.UINT32, number=10)
    isMulti = proto.Field(proto.BOOL, number=11)
    guardradius = proto.Field(proto.INT32, number=12)
    expandSkill = proto.Field(proto.UINT32, number=13)

class StageEnemyGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    enemies = proto.RepeatedField(proto.UINT32, number=2)
    isWatchSpawn = proto.Field(proto.UINT32, number=3)
    expandWaveId = proto.Field(proto.UINT32, number=4)

class StageEventData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    type = proto.Field(proto.UINT32, number=3)
    func = proto.Field(proto.INT32, number=4)
    args = proto.Field(proto.STRING, number=5)
    sort = proto.Field(proto.UINT32, number=6)
    eventSide = proto.Field(proto.INT32, number=7)
    delayEnabled = proto.Field(proto.BOOL, number=8)
    delaySide = proto.Field(proto.UINT32, number=9)
    delayTurn = proto.Field(proto.UINT32, number=10)
    delayTime = proto.Field(proto.UINT32, number=11)
    lookPoint = proto.Field(proto.UINT32, number=12)
    lookTime = proto.Field(proto.DOUBLE, number=13)

class StageExtendData(proto.Message):
    stageType = proto.Field(proto.UINT32, number=1)
    maximumDuration = proto.Field(proto.UINT32, number=2)

class StageGridData(proto.Message):
    uuid = proto.Field(proto.UINT32, number=1)
    id = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    height = proto.Field(proto.DOUBLE, number=4)
    shiled = proto.Field(proto.UINT32, number=5)
    connectPt = proto.Field(proto.STRING, number=6)
    centerCover = proto.Field(proto.STRING, number=7)
    edgeCovers = proto.Field(proto.STRING, number=8)
    coverconnectPt = proto.Field(proto.STRING, number=9)
    gridExtra = proto.Field(proto.UINT32, number=10)
    depths = proto.Field(proto.STRING, number=11)

class StageIndexData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    nameEn = proto.Field(LanguageStringData, number=3)
    rank = proto.Field(proto.UINT32, number=4)
    type = proto.Field(proto.UINT32, number=5)
    detailId = proto.RepeatedField(proto.UINT32, number=6)
    underId = proto.RepeatedField(proto.UINT32, number=7)
    background = proto.Field(proto.STRING, number=8)
    unlock = proto.Field(proto.UINT32, number=9)
    globalTab = proto.Field(proto.UINT32, number=10)
    activityId = proto.RepeatedField(proto.UINT32, number=11)

class StageMapData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    xmin = proto.Field(proto.UINT32, number=2)
    ymin = proto.Field(proto.UINT32, number=3)
    xmax = proto.Field(proto.UINT32, number=4)
    ymax = proto.Field(proto.UINT32, number=5)
    gridNum = proto.Field(proto.INT32, number=6)
    airwall = proto.Field(proto.STRING, number=7)

class StagePreparationCountdownData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    preparationCountdown = proto.Field(proto.UINT32, number=2)
    canReconnect = proto.Field(proto.BOOL, number=3)
    canReconnectText = proto.Field(proto.UINT32, number=4)

class StageSceneMatchData(proto.Message):
    sceneId = proto.Field(proto.INT32, number=1)
    scene = proto.Field(proto.STRING, number=2)
    levelNode = proto.Field(proto.STRING, number=3)
    isDarkzone = proto.Field(proto.BOOL, number=4)

class StageSceneShiftData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    route = proto.Field(proto.STRING, number=2)
    routePc = proto.Field(proto.STRING, number=3)
    routeMb = proto.Field(proto.STRING, number=4)

class StageStepData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    stepId = proto.Field(proto.UINT32, number=2)
    stageId = proto.Field(proto.UINT32, number=3)
    stepDetail = proto.Field(LanguageStringData, number=4)
    stepType = proto.Field(proto.INT32, number=5)
    phaseId = proto.Field(proto.UINT32, number=6)

class StageStrongholdData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    initSide = proto.Field(proto.UINT32, number=2)
    points = proto.RepeatedField(proto.UINT32, number=3)

class StageTriggerData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    triggerName = proto.Field(proto.STRING, number=2)
    type = proto.Field(proto.UINT32, number=3)
    func = proto.Field(proto.INT32, number=4)
    args = proto.Field(proto.STRING, number=5)
    events = proto.RepeatedField(proto.UINT32, number=6)
    maxTimes = proto.Field(proto.UINT32, number=7)
    stepId = proto.Field(proto.UINT32, number=8)
    side = proto.Field(proto.UINT32, number=9)
    delayTurn = proto.Field(proto.UINT32, number=10)
    triggerTime = proto.Field(proto.UINT32, number=11)
    isOnceTurnTrigger = proto.Field(proto.UINT32, number=12)
    isIncompleteTrigger = proto.Field(proto.UINT32, number=13)

class StoreAffectionData(proto.Message):
    level = proto.Field(proto.UINT32, number=1)
    affection = proto.Field(proto.UINT32, number=2)
    dailyDrop = proto.Field(proto.UINT32, number=3)
    mailId = proto.Field(proto.UINT32, number=4)

class StoreCashInteractData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    interType = proto.RepeatedField(proto.UINT32, number=2)
    start = proto.Field(proto.STRING, number=3)
    circle = proto.Field(proto.STRING, number=4)
    transition = proto.Field(proto.STRING, number=5)
    circleTimes = proto.Field(proto.UINT32, number=6)
    text = proto.Field(LanguageStringData, number=7)
    audio = proto.Field(proto.UINT32, number=8)
    audioStart = proto.Field(proto.UINT32, number=9)
    affectionLevel = proto.Field(proto.UINT32, number=10)

class StoreCashRewardData(proto.Message):
    level = proto.Field(proto.UINT32, number=1)
    affection = proto.Field(proto.UINT32, number=2)
    dailyDrop = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    extraDrop = proto.MapField(proto.UINT32, proto.UINT32, number=4)

class StoreCashSingleactData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    actType = proto.Field(proto.UINT32, number=2)
    action = proto.Field(proto.STRING, number=3)
    text = proto.Field(LanguageStringData, number=4)
    audio = proto.Field(proto.UINT32, number=5)
    audioStart = proto.Field(proto.UINT32, number=6)
    affectionLevel = proto.Field(proto.UINT32, number=7)
    specarg = proto.Field(proto.STRING, number=8)

class StoreGoodByTagData(proto.Message):
    tag = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class StoreGoodData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    goodsType = proto.Field(proto.INT32, number=2)
    tag = proto.Field(proto.UINT32, number=3)
    priceType = proto.Field(proto.UINT32, number=4)
    price = proto.Field(proto.DOUBLE, number=5)
    priceArgsType = proto.Field(proto.UINT32, number=6)
    priceArgs = proto.RepeatedField(proto.STRING, number=7)
    reward = proto.Field(proto.STRING, number=8)
    buyReward = proto.MapField(proto.UINT32, proto.UINT32, number=9)
    firstBuyReward = proto.MapField(proto.UINT32, proto.UINT32, number=10)
    limit = proto.Field(proto.UINT32, number=11)
    limitArgs = proto.RepeatedField(proto.STRING, number=12)
    showTime = proto.Field(proto.INT64, number=13)
    closeTime = proto.Field(proto.INT64, number=14)
    showCondition = proto.RepeatedField(proto.UINT32, number=15)
    closeCondition = proto.Field(proto.UINT32, number=16)
    specArgs = proto.Field(proto.STRING, number=17)
    name = proto.Field(LanguageStringData, number=18)
    featureCode = proto.RepeatedField(proto.UINT32, number=19)
    description = proto.Field(LanguageStringData, number=20)
    firstBuyDescription = proto.Field(LanguageStringData, number=21)
    icon = proto.Field(proto.STRING, number=22)
    itemtype = proto.Field(proto.UINT32, number=23)
    frame = proto.Field(proto.UINT32, number=24)
    sort = proto.Field(proto.INT32, number=25)
    rank = proto.Field(proto.INT32, number=26)
    preShow = proto.Field(proto.INT32, number=27)
    refreshType = proto.Field(proto.UINT32, number=28)
    soldoutShow = proto.Field(proto.UINT32, number=29)
    postGoods = proto.Field(proto.STRING, number=30)
    refreshTimer = proto.Field(proto.STRING, number=31)
    duration = proto.Field(proto.UINT32, number=32)
    closeTips = proto.Field(proto.BOOL, number=33)

class StorePayData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    productId = proto.Field(proto.STRING, number=2)
    name = proto.Field(proto.STRING, number=3)
    describe = proto.Field(proto.STRING, number=4)
    price = proto.Field(proto.UINT32, number=5)
    limitBuy = proto.Field(proto.UINT32, number=6)
    storeId = proto.Field(proto.UINT32, number=7)

class StoreSidetagBySidetagTypeData(proto.Message):
    sidetagType = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class StoreSidetagData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    sidetagType = proto.Field(proto.UINT32, number=3)
    includeTag = proto.RepeatedField(proto.UINT32, number=4)
    npc = proto.Field(proto.INT32, number=5)
    unlock = proto.Field(proto.INT32, number=6)
    globalTab = proto.Field(proto.UINT32, number=7)
    sort = proto.Field(proto.UINT32, number=8)

class StoreTagData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    hintname = proto.Field(LanguageStringData, number=3)
    showtype = proto.Field(proto.INT32, number=4)
    icon = proto.Field(proto.STRING, number=5)
    tradeItemList = proto.Field(proto.STRING, number=6)
    type = proto.Field(proto.INT32, number=7)
    unlock = proto.Field(proto.UINT32, number=8)
    playerRefresh = proto.Field(proto.BOOL, number=9)
    refreshCurrency = proto.Field(proto.UINT32, number=10)
    refreshPrice = proto.Field(proto.STRING, number=11)

class StoryByChapterData(proto.Message):
    chapter = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class StoryData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    chapter = proto.Field(proto.UINT32, number=2)
    stageGroup = proto.Field(proto.UINT32, number=3)
    stageId = proto.Field(proto.UINT32, number=4)
    preId = proto.RepeatedField(proto.UINT32, number=5)
    nextId = proto.RepeatedField(proto.UINT32, number=6)
    position = proto.Field(proto.STRING, number=7)
    name = proto.Field(LanguageStringData, number=8)
    icon = proto.Field(proto.STRING, number=9)
    code = proto.Field(LanguageStringData, number=10)
    type = proto.Field(proto.UINT32, number=11)
    unlockLevel = proto.Field(proto.UINT32, number=12)
    camp = proto.Field(proto.UINT32, number=13)
    cover = proto.Field(proto.STRING, number=14)
    startPoint = proto.Field(proto.UINT32, number=15)
    dailyTimes = proto.Field(proto.UINT32, number=16)
    hidePoint = proto.Field(proto.BOOL, number=17)
    battleGroupId = proto.Field(proto.UINT32, number=18)
    extraBonus = proto.Field(proto.STRING, number=19)

class StoryRoomData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sort = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    des = proto.Field(LanguageStringData, number=4)
    unlock = proto.Field(proto.UINT32, number=5)

class SummonedModelData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    model = proto.Field(proto.STRING, number=2)
    materialType = proto.Field(proto.UINT32, number=3)
    dissolveStartDelay = proto.Field(proto.UINT32, number=4)
    dissolveDuration = proto.Field(proto.UINT32, number=5)
    bytesConfig = proto.Field(proto.STRING, number=6)

class SummonedModelLgpData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    model = proto.Field(proto.STRING, number=2)
    featureCode = proto.Field(proto.UINT32, number=3)
    lgpType = proto.Field(proto.UINT32, number=4)
    lgpPath = proto.Field(proto.STRING, number=5)

class SupplyData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    type = proto.Field(proto.UINT32, number=3)
    supplyLevel = proto.Field(proto.UINT32, number=4)
    isNormalSupply = proto.Field(proto.BOOL, number=5)
    propertySkillId = proto.RepeatedField(proto.UINT32, number=6)
    propertySkillDes = proto.Field(LanguageStringData, number=7)
    resPath = proto.Field(proto.STRING, number=8)
    condition = proto.RepeatedField(proto.UINT32, number=9)
    autoBuyCofig = proto.Field(proto.UINT32, number=10)

class SupplytypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    enName = proto.Field(proto.STRING, number=3)

class SweepCondtionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    conditionId = proto.Field(proto.UINT32, number=2)
    conditionNum = proto.Field(proto.UINT32, number=3)
    conditionArg0 = proto.Field(proto.INT32, number=4)
    conditionArg1 = proto.Field(proto.INT32, number=5)
    conditionArg2 = proto.Field(proto.INT32, number=6)
    conditionArg3 = proto.Field(proto.INT32, number=7)
    resetType = proto.Field(proto.UINT32, number=8)
    counterType = proto.Field(proto.UINT32, number=9)
    name = proto.Field(proto.STRING, number=10)
    des = proto.Field(proto.STRING, number=11)

class SystemClientConditionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    param1 = proto.Field(proto.STRING, number=3)
    param2 = proto.Field(proto.STRING, number=4)

class SystemTutorialGroupByTimingData(proto.Message):
    timing = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class SystemTutorialGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    lastTutorialGroup = proto.RepeatedField(proto.UINT32, number=2)
    condition = proto.RepeatedField(proto.UINT32, number=3)
    clientCondition = proto.RepeatedField(proto.UINT32, number=4)
    priority = proto.Field(proto.UINT32, number=5)
    timing = proto.Field(proto.UINT32, number=6)
    globalTab = proto.Field(proto.UINT32, number=7)
    tabPaths = proto.RepeatedField(proto.STRING, number=8)
    finishCondition = proto.Field(proto.UINT32, number=9)
    finishConditionList = proto.RepeatedField(proto.UINT32, number=10)
    finishGroup = proto.RepeatedField(proto.UINT32, number=11)
    skipFinishGroup = proto.RepeatedField(proto.UINT32, number=12)

class SystemTutorialMainData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupIdList = proto.RepeatedField(proto.UINT32, number=2)
    noSkip = proto.Field(proto.BOOL, number=3)
    itemPageList = proto.RepeatedField(proto.UINT32, number=4)

class SystemTutorialPageByGroupData(proto.Message):
    group = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class SystemTutorialPageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    canSkip = proto.Field(proto.BOOL, number=3)
    avatar = proto.Field(proto.STRING, number=4)
    avatarFemale = proto.Field(proto.STRING, number=5)
    name = proto.Field(proto.STRING, number=6)
    textPosition = proto.Field(proto.STRING, number=7)
    text = proto.Field(LanguageStringData, number=8)
    clickType = proto.Field(proto.INT32, number=9)
    clickActionType = proto.Field(proto.INT32, number=10)
    clickActionTypeParam = proto.Field(proto.UINT32, number=11)
    clickActionTypeParam2 = proto.Field(proto.INT64, number=12)
    awakePath = proto.Field(proto.STRING, number=13)
    globalTab = proto.Field(proto.UINT32, number=14)
    model = proto.Field(proto.STRING, number=15)
    clickAreaPositionNew = proto.RepeatedField(proto.STRING, number=16)
    clickAreaPosition = proto.Field(proto.STRING, number=17)
    clickAreaPositionByid = proto.Field(proto.STRING, number=18)
    virtualListItemId = proto.MapField(proto.STRING, proto.STRING, number=19)
    notTriggerClickEvent = proto.Field(proto.BOOL, number=20)
    nextButton = proto.Field(proto.BOOL, number=21)
    giveItem = proto.MapField(proto.UINT32, proto.UINT32, number=22)
    delay = proto.Field(proto.DOUBLE, number=23)
    finishPage = proto.Field(proto.UINT32, number=24)
    pptGroup = proto.Field(proto.UINT32, number=25)
    avg = proto.Field(proto.UINT32, number=26)
    jump = proto.Field(proto.UINT32, number=27)
    clickAreaEffectHide = proto.Field(proto.BOOL, number=28)
    clickAreaEffectType = proto.Field(proto.UINT32, number=29)
    clickAreaEffectRate = proto.Field(proto.UINT32, number=30)

class SystemVersionOpenData(proto.Message):
    freePayCredit = proto.Field(proto.UINT32, number=1)
    waterMark = proto.Field(proto.UINT32, number=2)
    tutorial = proto.Field(proto.UINT32, number=3)
    wihtdrawnSystemOpen = proto.Field(proto.UINT32, number=4)

class TalentBonusByTalentBonusGroupData(proto.Message):
    talentBonusGroup = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class TalentBonusData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    talentBonusGroup = proto.Field(proto.UINT32, number=2)
    unlockCount = proto.Field(proto.UINT32, number=3)
    propertyId = proto.Field(proto.UINT32, number=4)

class TalentEffectResetData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    costResetItem = proto.MapField(proto.UINT32, proto.UINT32, number=2)

class TalentKeyData(proto.Message):
    talentKeyId = proto.Field(proto.UINT32, number=1)
    talentKeyType = proto.Field(proto.UINT32, number=2)
    isEquip = proto.Field(proto.UINT32, number=3)
    talentKeyName = proto.Field(LanguageStringData, number=4)
    propertyId = proto.Field(proto.UINT32, number=5)
    battleSkillId = proto.Field(proto.UINT32, number=6)
    keyName = proto.Field(LanguageStringData, number=7)
    keyTips = proto.Field(LanguageStringData, number=8)
    gunId = proto.RepeatedField(proto.UINT32, number=9)
    steadyState = proto.Field(proto.UINT32, number=10)
    requireJob = proto.Field(proto.UINT32, number=11)
    capacity = proto.Field(proto.DOUBLE, number=12)
    isSwitch = proto.Field(proto.UINT32, number=13)
    replaceId = proto.Field(proto.UINT32, number=14)

class TargetTrainingLevelData(proto.Message):
    level = proto.Field(proto.UINT32, number=1)
    costTime = proto.Field(proto.UINT32, number=2)
    seeTime = proto.Field(proto.UINT32, number=3)
    reduceTime = proto.Field(proto.UINT32, number=4)
    seeTimeCd = proto.Field(proto.UINT32, number=5)
    icon = proto.Field(proto.STRING, number=6)
    startDes = proto.Field(proto.STRING, number=7)
    roundDes = proto.Field(proto.STRING, number=8)
    overDes = proto.Field(proto.STRING, number=9)
    failDes = proto.Field(proto.STRING, number=10)
    getDes1 = proto.Field(proto.STRING, number=11)
    getDes2 = proto.Field(proto.STRING, number=12)
    helpSuccessDes = proto.Field(proto.STRING, number=13)
    helpDes = proto.Field(proto.STRING, number=14)
    helpCd = proto.Field(proto.UINT32, number=15)
    stopDesCd = proto.Field(proto.UINT32, number=16)

class TaskTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    typeName = proto.Field(LanguageStringData, number=2)
    typeEnglishName = proto.Field(proto.STRING, number=3)
    typeBg = proto.Field(proto.STRING, number=4)
    typeBgIcon = proto.Field(proto.STRING, number=5)
    typeTaskIcon = proto.Field(proto.STRING, number=6)
    sequence = proto.Field(proto.UINT32, number=7)
    unlock = proto.Field(proto.UINT32, number=8)

class TerrainConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    crossCode = proto.Field(proto.INT32, number=2)
    blockIdletype = proto.Field(proto.INT32, number=3)
    passiveBlocktype = proto.Field(proto.INT32, number=4)
    grideffectRange = proto.Field(proto.UINT32, number=5)
    gridEffect = proto.Field(proto.INT32, number=6)
    terrainName = proto.Field(proto.STRING, number=7)
    terrainInfo = proto.Field(proto.STRING, number=8)
    showTerrainType = proto.Field(proto.STRING, number=9)
    canShowTerrainInfo = proto.Field(proto.STRING, number=10)

class TicketRaidStageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    mapId = proto.Field(proto.UINT32, number=2)
    pointId = proto.Field(proto.UINT32, number=3)
    enable = proto.Field(proto.BOOL, number=4)
    o_AMKNCHOLNKE = proto.Field(proto.BOOL, number=5)
    pointType = proto.Field(proto.UINT32, number=6)
    o_GCJNFJCFJNP = proto.MapField(proto.INT32, proto.UINT32, number=7)
    o_DLBIICLPJLA = proto.Field(proto.UINT32, number=8)
    o_LLKGDDMIOAL = proto.Field(proto.UINT32, number=9)
    o_PKKCHAOBJIL = proto.Field(proto.STRING, number=10)

class TimelineConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.STRING, number=2)
    args = proto.Field(proto.STRING, number=3)

class TimerData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    title = proto.Field(LanguageStringData, number=2)
    type = proto.Field(proto.INT32, number=3)
    args1 = proto.Field(proto.STRING, number=4)
    args2 = proto.Field(proto.STRING, number=5)
    recoveryItems = proto.MapField(proto.UINT32, proto.UINT32, number=6)

class TimingTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    uiId = proto.Field(proto.UINT32, number=2)

class TreasureConfigData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rewardId = proto.RepeatedField(proto.UINT32, number=2)
    taskId = proto.RepeatedField(proto.UINT32, number=3)
    maxLevel = proto.Field(proto.UINT32, number=4)
    upgradeExp = proto.Field(proto.UINT32, number=5)
    itemId = proto.Field(proto.UINT32, number=6)
    price = proto.Field(proto.UINT32, number=7)
    itemlvId = proto.Field(proto.UINT32, number=8)
    price2 = proto.Field(proto.UINT32, number=9)

class TreasureMainData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    bpId = proto.Field(proto.UINT32, number=2)
    bingoId = proto.Field(proto.UINT32, number=3)
    gameId = proto.Field(proto.UINT32, number=4)
    gameIcon = proto.Field(proto.STRING, number=5)
    gameSpec = proto.Field(proto.STRING, number=6)
    closeType = proto.Field(proto.UINT32, number=7)

class TreasureRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    levelId = proto.Field(proto.UINT32, number=2)
    baseReward = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    advancedReward = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    baseRewardStr = proto.Field(proto.STRING, number=5)
    advancedRewardStr = proto.Field(proto.STRING, number=6)

class TreasureTaskData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    name = proto.Field(proto.STRING, number=3)
    des = proto.Field(proto.STRING, number=4)
    rewardItem = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    rewardExp = proto.Field(proto.UINT32, number=6)
    conditionClass = proto.Field(proto.UINT32, number=7)
    conditionNum = proto.Field(proto.UINT32, number=8)
    resetType = proto.Field(proto.UINT32, number=9)
    link = proto.Field(proto.STRING, number=10)

class TutorialGroupByTimingData(proto.Message):
    timing = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class TutorialGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    condition = proto.RepeatedField(proto.UINT32, number=2)
    priority = proto.Field(proto.UINT32, number=3)
    timing = proto.Field(proto.UINT32, number=4)
    finishCondition = proto.Field(proto.UINT32, number=5)
    isPause = proto.Field(proto.UINT32, number=6)
    finishGroup = proto.RepeatedField(proto.UINT32, number=7)
    deployHide = proto.Field(proto.BOOL, number=8)

class TutorialGunData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    sourceGunid = proto.Field(proto.UINT32, number=2)
    gunTags = proto.Field(proto.STRING, number=3)
    briefIntro = proto.Field(LanguageStringData, number=4)
    iconSkill1 = proto.Field(proto.UINT32, number=5)
    textSkill1 = proto.Field(LanguageStringData, number=6)
    iconSkill2 = proto.Field(proto.UINT32, number=7)
    textSkill2 = proto.Field(LanguageStringData, number=8)
    iconSkill3 = proto.Field(proto.UINT32, number=9)
    textSkill3 = proto.Field(LanguageStringData, number=10)
    iconSkill4 = proto.Field(proto.UINT32, number=11)
    textSkill4 = proto.Field(LanguageStringData, number=12)

class TutorialPageByGroupData(proto.Message):
    group = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class TutorialPageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    canSkip = proto.Field(proto.BOOL, number=3)
    name = proto.Field(proto.STRING, number=4)
    avatar = proto.Field(proto.STRING, number=5)
    avatarFemale = proto.Field(proto.STRING, number=6)
    textPosition = proto.Field(proto.STRING, number=7)
    textDifference = proto.Field(proto.STRING, number=8)
    text = proto.Field(LanguageStringData, number=9)
    pcText = proto.Field(LanguageStringData, number=10)
    consoleText = proto.Field(LanguageStringData, number=11)
    clickType = proto.Field(proto.INT32, number=12)
    keyButton = proto.Field(proto.UINT32, number=13)
    clickAreaPosition = proto.Field(proto.STRING, number=14)
    clickAreaSize = proto.RepeatedField(proto.UINT32, number=15)
    focusPoint = proto.Field(proto.UINT32, number=16)
    clickMask = proto.Field(proto.BOOL, number=17)
    nextButton = proto.Field(proto.BOOL, number=18)
    media = proto.Field(proto.STRING, number=19)
    giveItem = proto.MapField(proto.UINT32, proto.UINT32, number=20)
    itemSkip = proto.Field(proto.BOOL, number=21)
    delay = proto.Field(proto.DOUBLE, number=22)
    finishPage = proto.Field(proto.INT32, number=23)
    maskControl = proto.Field(proto.BOOL, number=24)
    clickAreaEffectHide = proto.Field(proto.BOOL, number=25)
    clickAreaEffectType = proto.Field(proto.UINT32, number=26)
    clickAreaEffectRate = proto.Field(proto.UINT32, number=27)
    pptGroup = proto.Field(proto.UINT32, number=28)
    hideUi = proto.Field(proto.UINT32, number=29)

class TutorialPageTagsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    tagText = proto.Field(LanguageStringData, number=2)
    tagColor = proto.Field(proto.STRING, number=3)

class TutorialSystempageByGroupIdData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class TutorialSystempageData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    text = proto.Field(LanguageStringData, number=3)
    media = proto.Field(proto.STRING, number=4)
    pptNumber = proto.Field(LanguageStringData, number=5)
    pptName = proto.Field(LanguageStringData, number=6)
    type = proto.Field(proto.UINT32, number=7)
    unlockSheet = proto.Field(proto.UINT32, number=8)
    unlockId = proto.Field(proto.UINT32, number=9)

class UavAdvanceData(proto.Message):
    advanceNum = proto.Field(proto.UINT32, number=1)
    uavCash = proto.Field(proto.UINT32, number=2)
    uavMaterial = proto.RepeatedField(proto.UINT32, number=3)
    equipNum = proto.Field(proto.UINT32, number=4)
    cost = proto.Field(proto.UINT32, number=5)
    fuel = proto.Field(proto.UINT32, number=6)
    propertyId = proto.Field(proto.UINT32, number=7)
    pow = proto.Field(proto.INT32, number=8)
    maxHp = proto.Field(proto.INT32, number=9)
    armor = proto.Field(proto.INT32, number=10)
    maxAp = proto.Field(proto.INT32, number=11)
    hit = proto.Field(proto.INT32, number=12)
    dodge = proto.Field(proto.INT32, number=13)
    hitPercentage = proto.Field(proto.INT32, number=14)
    dodgePercentage = proto.Field(proto.INT32, number=15)
    crit = proto.Field(proto.INT32, number=16)
    critMult = proto.Field(proto.INT32, number=17)
    scratch = proto.Field(proto.INT32, number=18)
    scratchReduction = proto.Field(proto.INT32, number=19)

class UavArmLevelCostData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    uavArmLevelCost = proto.Field(proto.UINT32, number=2)
    cost = proto.RepeatedField(proto.UINT32, number=3)
    cash = proto.Field(proto.UINT32, number=4)

class UavArmsData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    rank = proto.Field(proto.INT32, number=3)
    type = proto.Field(proto.INT32, number=4)
    description = proto.Field(LanguageStringData, number=5)
    resCode = proto.Field(proto.STRING, number=6)
    cost = proto.Field(proto.UINT32, number=7)
    itemId = proto.Field(proto.UINT32, number=8)
    unlockNum = proto.Field(proto.UINT32, number=9)
    upgradeCost = proto.RepeatedField(proto.UINT32, number=10)
    skillSet = proto.Field(proto.UINT32, number=11)
    shieldType = proto.Field(proto.UINT32, number=12)
    attackType = proto.Field(proto.UINT32, number=13)
    uavArmLevelCost = proto.Field(proto.UINT32, number=14)

class UiPathData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    uiPath = proto.Field(proto.STRING, number=2)

class UltraskillCamData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cameraId = proto.Field(proto.UINT32, number=2)

class UnderCombatTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    image = proto.Field(proto.STRING, number=3)
    icon = proto.Field(proto.STRING, number=4)
    unlock = proto.Field(proto.UINT32, number=5)

class UnitShowTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    showType = proto.Field(proto.UINT32, number=2)
    param1 = proto.Field(proto.STRING, number=3)
    param2 = proto.Field(proto.STRING, number=4)

class UniteRotateMissionByGroupIdData(proto.Message):
    groupId = proto.Field(proto.UINT32, number=1)
    missionId = proto.RepeatedField(proto.UINT32, number=2)

class UniteRotateMissionData(proto.Message):
    missionId = proto.Field(proto.UINT32, number=1)
    groupId = proto.Field(proto.UINT32, number=2)
    rewardProgramme = proto.Field(proto.UINT32, number=3)
    stageProgramme = proto.RepeatedField(proto.UINT32, number=4)
    missionAffix = proto.RepeatedField(proto.UINT32, number=5)
    mail = proto.Field(proto.UINT32, number=6)
    programmeName = proto.Field(LanguageStringData, number=7)
    programmeIcon = proto.Field(proto.STRING, number=8)
    programmeBg = proto.Field(proto.STRING, number=9)

class UniteStageData(proto.Message):
    programmeId = proto.Field(proto.UINT32, number=1)
    unlockCondition = proto.Field(proto.UINT32, number=2)
    stage = proto.Field(proto.UINT32, number=3)
    stagePic = proto.Field(proto.STRING, number=4)
    bossIcon = proto.Field(proto.STRING, number=5)

class UniteStarRewardByRewardProgrammeData(proto.Message):
    rewardProgramme = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class UniteStarRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    rewardProgramme = proto.Field(proto.UINT32, number=2)
    level = proto.RepeatedField(proto.UINT32, number=3)
    star = proto.RepeatedField(proto.UINT32, number=4)
    starReward = proto.Field(proto.STRING, number=5)

class UnlockData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    conditionType = proto.Field(proto.UINT32, number=2)
    condition = proto.RepeatedField(proto.UINT32, number=3)
    lockType = proto.Field(proto.UINT32, number=4)
    prompt = proto.Field(LanguageStringData, number=5)
    interfaceId = proto.Field(proto.UINT32, number=6)
    icon = proto.Field(proto.STRING, number=7)
    homeButtonRedhint = proto.Field(proto.UINT32, number=8)
    unlockName = proto.Field(LanguageStringData, number=9)
    cmdList = proto.RepeatedField(proto.UINT32, number=10)
    isClose = proto.Field(proto.BOOL, number=11)
    openDetail = proto.Field(proto.INT64, number=12)
    sequence = proto.Field(proto.UINT32, number=13)

class UnlockDetailData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    des = proto.Field(LanguageStringData, number=3)
    conditionNum = proto.Field(proto.UINT32, number=4)

class UnlockSkillData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    description = proto.Field(proto.STRING, number=2)
    tutorialPageId = proto.Field(proto.UINT32, number=3)
    skillId = proto.Field(proto.UINT32, number=4)
    storyId = proto.Field(proto.UINT32, number=5)
    stageId = proto.Field(proto.UINT32, number=6)

class UpActivityData(proto.Message):
    mappingId = proto.Field(proto.UINT32, number=1)
    activityText = proto.Field(proto.STRING, number=2)
    stageType = proto.RepeatedField(proto.UINT32, number=3)
    incomeItem = proto.Field(proto.UINT32, number=4)
    incomeTime = proto.Field(proto.UINT32, number=5)
    incomeMagnification = proto.Field(proto.UINT32, number=6)
    incomeRent = proto.Field(proto.DOUBLE, number=7)
    refreshType = proto.Field(proto.UINT32, number=8)
    useOrder = proto.Field(proto.UINT32, number=9)

class UpdateTipData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    title = proto.Field(LanguageStringData, number=2)
    description = proto.Field(LanguageStringData, number=3)
    background = proto.Field(proto.STRING, number=4)

class VideoData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    videoMale = proto.Field(proto.STRING, number=2)
    videoFemale = proto.Field(proto.STRING, number=3)

class WarmUpQuestByGroupData(proto.Message):
    group = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class WarmUpQuestData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    desc = proto.Field(proto.STRING, number=3)
    conditionClass = proto.Field(proto.UINT32, number=4)
    conditionNum = proto.Field(proto.UINT32, number=5)
    point = proto.Field(proto.UINT32, number=6)
    buttonTxt = proto.Field(LanguageStringData, number=7)
    questIcon = proto.Field(proto.STRING, number=8)

class WarmUpQuestionByGroupData(proto.Message):
    group = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class WarmUpQuestionData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    questionTxt = proto.Field(LanguageStringData, number=3)
    optionRight = proto.Field(LanguageStringData, number=4)
    optionError = proto.Field(LanguageStringData, number=5)
    analysis = proto.Field(LanguageStringData, number=6)

class WarmUpRewardByGroupData(proto.Message):
    group = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class WarmUpRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    group = proto.Field(proto.UINT32, number=2)
    point = proto.Field(proto.UINT32, number=3)
    rewardItem = proto.Field(KvSortUintData, number=4)

class WeakMapByWeakGroupIdData(proto.Message):
    weakGroupId = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class WeakMapData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    weakGroupId = proto.Field(proto.UINT32, number=2)
    levelMin = proto.Field(proto.UINT32, number=3)
    levelMax = proto.Field(proto.UINT32, number=4)
    elementWeak = proto.Field(proto.STRING, number=5)
    weaponWeak = proto.Field(proto.INT32, number=6)

class WeaponBreakData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    weapon = proto.Field(proto.UINT32, number=2)
    breakNum = proto.Field(proto.UINT32, number=3)
    skill = proto.Field(proto.UINT32, number=4)
    propertyId = proto.Field(proto.UINT32, number=5)
    capacity = proto.Field(proto.DOUBLE, number=6)

class WeaponBulletTypeData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    resPath = proto.Field(proto.STRING, number=2)

class WeaponModCodGroupData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    modCode = proto.Field(proto.STRING, number=2)
    size = proto.Field(proto.DOUBLE, number=3)
    modEffects = proto.RepeatedField(proto.UINT32, number=4)
    weaponCode = proto.RepeatedField(proto.UINT32, number=5)

class WeaponModData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    effectId = proto.Field(proto.UINT32, number=2)
    rank = proto.Field(proto.UINT32, number=3)
    quality = proto.Field(proto.UINT32, number=4)
    modCapacity = proto.Field(proto.UINT32, number=5)
    extraCapacity = proto.Field(proto.UINT32, number=6)
    level = proto.Field(proto.UINT32, number=7)
    maxLevel = proto.Field(proto.UINT32, number=8)
    exp = proto.Field(proto.UINT32, number=9)
    aspectId = proto.Field(proto.UINT32, number=10)
    affixPlanId = proto.Field(proto.UINT32, number=11)
    suitPlanId = proto.Field(proto.UINT32, number=12)
    canPolarity = proto.Field(proto.BOOL, number=13)
    polarityPlanId = proto.Field(proto.UINT32, number=14)
    polarityAffix = proto.Field(proto.UINT32, number=15)
    basicAffixId = proto.RepeatedField(proto.UINT32, number=16)
    polaritySkill = proto.Field(proto.UINT32, number=17)
    isSp = proto.Field(proto.BOOL, number=18)

class WeaponModPackageData(proto.Message):
    itemId = proto.Field(proto.UINT32, number=1)
    skillType = proto.RepeatedField(proto.UINT32, number=2)
    weaponType = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    openCount = proto.Field(proto.UINT32, number=4)
    type = proto.Field(proto.UINT32, number=5)

class WeaponModSkinByTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class WeaponModSkinData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    weaponSkinType = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    uiIcon = proto.Field(proto.STRING, number=4)
    uiType = proto.Field(proto.UINT32, number=5)
    order = proto.Field(proto.UINT32, number=6)
    openType = proto.Field(proto.UINT32, number=7)
    unlock = proto.Field(proto.UINT32, number=8)
    itemId = proto.MapField(proto.UINT32, proto.UINT32, number=9)
    skinItem = proto.Field(proto.UINT32, number=10)
    rank = proto.Field(proto.INT32, number=11)
    type = proto.Field(proto.UINT32, number=12)
    weaponModId = proto.Field(proto.UINT32, number=13)
    resPath = proto.Field(proto.STRING, number=14)

class WeaponModSkinPlanData(proto.Message):
    typeId = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    skinNum = proto.RepeatedField(proto.UINT32, number=3)
    modMount1 = proto.RepeatedField(proto.UINT32, number=4)
    modMount2 = proto.RepeatedField(proto.UINT32, number=5)
    modMount3 = proto.RepeatedField(proto.UINT32, number=6)
    modMount4 = proto.RepeatedField(proto.UINT32, number=7)
    modMount5 = proto.RepeatedField(proto.UINT32, number=8)
    modMount6 = proto.RepeatedField(proto.UINT32, number=9)
    o_OCJLECBCKPO = proto.Field(LanguageStringData, number=10)
    o_NGJMFIMLINM = proto.Field(LanguageStringData, number=11)
    o_KHHFOJKGENE = proto.Field(LanguageStringData, number=12)
    o_MPHFFILLALG = proto.Field(LanguageStringData, number=13)
    o_EPCBIGJPCGB = proto.Field(LanguageStringData, number=14)
    o_APOELNFDBNH = proto.Field(LanguageStringData, number=15)

class WeaponModTypeByTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class WeaponModTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    type = proto.Field(proto.UINT32, number=2)
    fatherType = proto.Field(proto.UINT32, number=3)
    icon = proto.Field(proto.STRING, number=4)
    name = proto.Field(LanguageStringData, number=5)
    weaponModDes = proto.Field(LanguageStringData, number=6)
    canSee = proto.Field(proto.UINT32, number=7)
    hangingPoint = proto.Field(proto.UINT32, number=8)

class WeaponPartAffixBankData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    bankId = proto.Field(proto.UINT32, number=3)
    skillId = proto.Field(proto.UINT32, number=4)
    weight = proto.Field(proto.INT32, number=5)

class WeaponPartCalibrationData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    partAbility = proto.Field(proto.STRING, number=2)
    partAbilityInterval = proto.RepeatedField(proto.INT32, number=3)
    adjustNum = proto.MapField(proto.UINT32, proto.UINT32, number=4)

class WeaponPartData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    description = proto.Field(LanguageStringData, number=3)
    icon = proto.Field(proto.STRING, number=4)
    type = proto.Field(proto.UINT32, number=5)
    rank = proto.Field(proto.UINT32, number=6)
    affixNum = proto.Field(proto.UINT32, number=7)
    affixBank = proto.Field(proto.UINT32, number=8)
    partAbility = proto.Field(proto.STRING, number=9)
    partAbilityIni = proto.Field(proto.INT32, number=10)
    partAbilityMax = proto.Field(proto.INT32, number=11)
    calibrationOn = proto.Field(proto.BOOL, number=12)
    soldGet = proto.MapField(proto.UINT32, proto.UINT32, number=13)
    soldDrop = proto.RepeatedField(proto.UINT32, number=14)
    weaponId = proto.RepeatedField(proto.UINT32, number=15)

class WeaponPartTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    weaponType = proto.RepeatedField(proto.UINT32, number=3)
    typeIcon = proto.Field(proto.STRING, number=4)

class WeaponPolarityData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    duplicate = proto.Field(proto.BOOL, number=2)
    weaponPolarityId = proto.Field(proto.UINT32, number=3)
    weight = proto.Field(proto.INT32, number=4)
    polarityTag = proto.Field(proto.UINT32, number=5)

class WeaponRecoverData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    itemRecover1 = proto.MapField(proto.UINT32, proto.UINT32, number=2)
    itemRecover2 = proto.MapField(proto.UINT32, proto.UINT32, number=3)
    itemRecover3 = proto.MapField(proto.UINT32, proto.UINT32, number=4)
    itemRecover4 = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    itemRecover5 = proto.MapField(proto.UINT32, proto.UINT32, number=6)
    itemRecover6 = proto.MapField(proto.UINT32, proto.UINT32, number=7)

class WeaponSkinByTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class WeaponSkinData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    weaponSkinType = proto.Field(proto.UINT32, number=2)
    name = proto.Field(LanguageStringData, number=3)
    uiIcon = proto.Field(proto.STRING, number=4)
    uiType = proto.Field(proto.UINT32, number=5)
    order = proto.Field(proto.UINT32, number=6)
    openType = proto.Field(proto.UINT32, number=7)
    unlock = proto.Field(proto.UINT32, number=8)
    itemId = proto.MapField(proto.UINT32, proto.UINT32, number=9)
    skinItem = proto.Field(proto.UINT32, number=10)
    rank = proto.Field(proto.INT32, number=11)
    type = proto.Field(proto.UINT32, number=12)
    weaponId = proto.Field(proto.UINT32, number=13)
    resPath = proto.Field(proto.STRING, number=14)
    bullettype = proto.Field(proto.UINT32, number=15)
    modelstype = proto.Field(proto.UINT32, number=16)

class WeaponSlotTypeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(proto.STRING, number=2)
    partType = proto.RepeatedField(proto.UINT32, number=3)
    slotBase = proto.Field(proto.STRING, number=4)
    slotBattle = proto.Field(proto.STRING, number=5)

class WeaponStarRecoverData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    number = proto.Field(proto.UINT32, number=2)

class WeaponTagData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    icon = proto.Field(proto.STRING, number=3)

class WeatherData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    name = proto.Field(LanguageStringData, number=2)
    intro = proto.Field(LanguageStringData, number=3)
    icon = proto.Field(proto.STRING, number=4)
    battleSkill = proto.Field(proto.UINT32, number=5)
    sceneEfx = proto.Field(proto.UINT32, number=6)

class WeeklyBStoryData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    stageId = proto.Field(proto.UINT32, number=2)
    stageLevle = proto.Field(proto.UINT32, number=3)
    injuryCoefficient = proto.Field(proto.UINT32, number=4)
    bMainId = proto.RepeatedField(proto.UINT32, number=5)
    recordBuffId = proto.RepeatedField(proto.UINT32, number=6)
    recordBuffNumber = proto.RepeatedField(proto.UINT32, number=7)
    buffCamp = proto.RepeatedField(proto.UINT32, number=8)
    bReward = proto.RepeatedField(proto.UINT32, number=9)

class WeeklyCycleData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    maxLevel = proto.Field(proto.UINT32, number=2)
    levelId = proto.RepeatedField(proto.UINT32, number=3)
    o_KELCOAHGKGO = proto.RepeatedField(proto.UINT32, number=4)
    bCost = proto.MapField(proto.UINT32, proto.UINT32, number=5)
    bName = proto.Field(LanguageStringData, number=6)
    bBossIntegral = proto.Field(proto.UINT32, number=7)

class WeeklyDegreeData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    cycleId = proto.Field(proto.UINT32, number=2)
    level = proto.Field(proto.UINT32, number=3)
    o_LBFPKIPPFLG = proto.Field(proto.UINT32, number=4)
    o_IHOPEKEJEEC = proto.Field(proto.BOOL, number=5)
    showEnemyList = proto.Field(proto.STRING, number=6)
    showEnemyDescList = proto.RepeatedField(proto.UINT32, number=7)
    maxTeam = proto.Field(proto.UINT32, number=8)
    bId = proto.RepeatedField(proto.UINT32, number=9)
    bPptId = proto.Field(proto.UINT32, number=10)
    questChallengeType = proto.Field(proto.UINT32, number=11)
    name = proto.Field(LanguageStringData, number=12)
    des = proto.Field(LanguageStringData, number=13)
    bBossId = proto.Field(proto.STRING, number=14)
    bBossEnName = proto.Field(LanguageStringData, number=15)
    bBossPic = proto.Field(proto.STRING, number=16)
    bBossLogo = proto.Field(proto.STRING, number=17)
    bBossName = proto.Field(LanguageStringData, number=18)
    o_NFHMPIMBEFA = proto.Field(proto.STRING, number=19)

class WeeklyQuestByTypeData(proto.Message):
    type = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class WeeklyQuestData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    questType = proto.Field(proto.UINT32, number=2)
    type = proto.Field(proto.UINT32, number=3)
    name = proto.Field(LanguageStringData, number=4)
    description = proto.Field(LanguageStringData, number=5)
    conditionClass = proto.Field(proto.UINT32, number=6)
    conditionNum = proto.Field(proto.UINT32, number=7)
    reward = proto.Field(KvSortUintData, number=8)

class WeeklyRewardData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    value = proto.Field(proto.UINT32, number=2)
    rewardList = proto.MapField(proto.UINT32, proto.UINT32, number=3)

class WeeklyScoreRankByLevelData(proto.Message):
    level = proto.Field(proto.UINT32, number=1)
    id = proto.RepeatedField(proto.UINT32, number=2)

class WeeklyScoreRankData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    icon = proto.Field(proto.STRING, number=2)
    level = proto.Field(proto.UINT32, number=3)
    name = proto.Field(LanguageStringData, number=4)
    scoreSection = proto.RepeatedField(proto.UINT32, number=5)
    rank = proto.Field(proto.UINT32, number=6)
    reward = proto.Field(KvSortUintData, number=7)

class WithdrawOpenData(proto.Message):
    id = proto.Field(proto.UINT32, number=1)
    isWithdrawStageOpen = proto.Field(proto.INT32, number=2)

class WithdrawalHintData(proto.Message):
    gunId = proto.Field(proto.UINT32, number=1)
    hintIdSecond = proto.Field(proto.UINT32, number=2)
    hintIdThird = proto.Field(proto.UINT32, number=3)
